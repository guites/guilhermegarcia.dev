v8-version,10,8,168,25,-node.11,0
v8-platform,macos,macos
shared-library,/opt/homebrew/Cellar/node/19.6.0/bin/node,0x100064000,0x100db1c4c,376832
shared-library,/opt/homebrew/Cellar/libuv/1.44.2/lib/libuv.1.dylib,0x102c85648,0x102c9c600,4341645312
shared-library,/opt/homebrew/Cellar/brotli/1.0.9/lib/libbrotlidec.1.0.9.dylib,0x102c6c6f0,0x102c72560,4341530624
shared-library,/opt/homebrew/Cellar/brotli/1.0.9/lib/libbrotlienc.1.0.9.dylib,0x102d4c748,0x102d7e840,4342448128
shared-library,/opt/homebrew/Cellar/c-ares/1.19.0/lib/libcares.2.6.0.dylib,0x102cdbe90,0x102ce76b0,4341989376
shared-library,/opt/homebrew/Cellar/libnghttp2/1.51.0/lib/libnghttp2.14.dylib,0x102ddcd3c,0x102deee7c,4343037952
shared-library,/opt/homebrew/Cellar/openssl@1.1/1.1.1s/lib/libcrypto.1.1.dylib,0x10302b000,0x10315bdcc,4345462784
shared-library,/opt/homebrew/Cellar/openssl@1.1/1.1.1s/lib/libssl.1.1.dylib,0x102e8f6b0,0x102eccf5c,4343775232
shared-library,/opt/homebrew/Cellar/icu4c/72.1/lib/libicui18n.72.1.dylib,0x1034f4a48,0x103650154,4350476288
shared-library,/opt/homebrew/Cellar/icu4c/72.1/lib/libicuuc.72.1.dylib,0x10379f038,0x10386c4e8,4353277952
shared-library,/opt/homebrew/Cellar/icu4c/72.1/lib/libicudata.72.1.dylib,0x105762200,0x105762200,4386586624
shared-library,/usr/lib/libz.1.dylib,0x1b093e770,0x1b0949c10,620314624
shared-library,/usr/lib/libSystem.B.dylib,0x1b09f94fc,0x1b09f9b0c,620314624
shared-library,/usr/lib/system/libcache.dylib,0x1b09f36a4,0x1b09f6370,620314624
shared-library,/usr/lib/system/libcommonCrypto.dylib,0x1b09af980,0x1b09baa94,620314624
shared-library,/usr/lib/system/libcompiler_rt.dylib,0x1b09d999c,0x1b09dc864,620314624
shared-library,/usr/lib/system/libcopyfile.dylib,0x1b09d0828,0x1b09d7020,620314624
shared-library,/usr/lib/system/libcorecrypto.dylib,0x1a5120e00,0x1a518be38,620314624
shared-library,/usr/lib/system/libdispatch.dylib,0x1a51d7fd4,0x1a5214dd8,620314624
shared-library,/usr/lib/system/libdyld.dylib,0x1a5368510,0x1a53894a8,620314624
shared-library,/usr/lib/system/libkeymgr.dylib,0x1b09e8764,0x1b09e8e50,620314624
shared-library,/usr/lib/system/libmacho.dylib,0x1b098a640,0x1b098e9bc,620314624
shared-library,/usr/lib/system/libquarantine.dylib,0x1b005abc8,0x1b005cba8,620314624
shared-library,/usr/lib/system/libremovefile.dylib,0x1b09e6448,0x1b09e7c40,620314624
shared-library,/usr/lib/system/libsystem_asl.dylib,0x1aa0283c4,0x1aa03d000,620314624
shared-library,/usr/lib/system/libsystem_blocks.dylib,0x1a50be9a8,0x1a50c18d0,620314624
shared-library,/usr/lib/system/libsystem_c.dylib,0x1a52221a4,0x1a529ab20,620314624
shared-library,/usr/lib/system/libsystem_collections.dylib,0x1b09dd878,0x1b09e1958,620314624
shared-library,/usr/lib/system/libsystem_configuration.dylib,0x1af57c544,0x1af57f6f8,620314624
shared-library,/usr/lib/system/libsystem_containermanager.dylib,0x1ae5ec3fc,0x1ae6156a8,620314624
shared-library,/usr/lib/system/libsystem_coreservices.dylib,0x1b06920d4,0x1b06960d8,620314624
shared-library,/usr/lib/system/libsystem_darwin.dylib,0x1a81bd418,0x1a81c4170,620314624
shared-library,/usr/lib/system/libsystem_dnssd.dylib,0x1b09e9e2c,0x1b09eff88,620314624
shared-library,/usr/lib/system/libsystem_featureflags.dylib,0x1a521e9c8,0x1a5220a50,620314624
shared-library,/usr/lib/system/libsystem_info.dylib,0x1a5393cd0,0x1a53ba3d0,620314624
shared-library,/usr/lib/system/libsystem_m.dylib,0x1b0951080,0x1b0978ec0,620314624
shared-library,/usr/lib/system/libsystem_malloc.dylib,0x1a51aae64,0x1a51d0060,620314624
shared-library,/usr/lib/system/libsystem_networkextension.dylib,0x1a9fa8aa4,0x1a9fbbaf0,620314624
shared-library,/usr/lib/system/libsystem_notify.dylib,0x1a8627888,0x1a8634bf0,620314624
shared-library,/usr/lib/system/libsystem_sandbox.dylib,0x1af58148c,0x1af585040,620314624
shared-library,/usr/lib/system/libsystem_secinit.dylib,0x1b09e2d90,0x1b09e4388,620314624
shared-library,/usr/lib/system/libsystem_kernel.dylib,0x1a5321900,0x1a5352e88,620314624
shared-library,/usr/lib/system/libsystem_platform.dylib,0x1a538c340,0x1a53922e4,620314624
shared-library,/usr/lib/system/libsystem_pthread.dylib,0x1a535aae4,0x1a53658d0,620314624
shared-library,/usr/lib/system/libsystem_symptoms.dylib,0x1ab7fd6b0,0x1ab8032bc,620314624
shared-library,/usr/lib/system/libsystem_trace.dylib,0x1a51074a0,0x1a511cc10,620314624
shared-library,/usr/lib/system/libunwind.dylib,0x1b09c0b44,0x1b09c63c0,620314624
shared-library,/usr/lib/system/libxpc.dylib,0x1a50c3e58,0x1a50fa7d8,620314624
shared-library,/usr/lib/libc++abi.dylib,0x1a530a820,0x1a531ddd8,620314624
shared-library,/usr/lib/libobjc.A.dylib,0x1a4fedc00,0x1a50226b0,620314624
shared-library,/usr/lib/liboah.dylib,0x1b09c8e48,0x1b09cde18,620314624
shared-library,/usr/lib/libc++.1.dylib,0x1a52a6a60,0x1a52fe524,620314624
shared-library,/opt/homebrew/Cellar/brotli/1.0.9/lib/libbrotlicommon.1.0.9.dylib,0x102e110bc,0x102e114e0,4343267328
shared-library,/usr/lib/libresolv.9.dylib,0x1b396ddc4,0x1b39837d0,620314624
shared-library,/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation,0x1a53c08b0,0x1a55af05c,620314624
shared-library,/System/Library/PrivateFrameworks/CoreServicesInternal.framework/Versions/A/CoreServicesInternal,0x1a84cfd78,0x1a8505f70,620314624
shared-library,/usr/lib/libfakelink.dylib,0x1b09fc3dc,0x1b09fdb80,620314624
shared-library,/usr/lib/libicucore.A.dylib,0x1a7f0650c,0x1a8154320,620314624
shared-library,/System/Library/PrivateFrameworks/SoftLinking.framework/Versions/A/SoftLinking,0x1b09febd4,0x1b09fee50,620314624
shared-library,/System/Library/Frameworks/IOKit.framework/Versions/A/IOKit,0x1a854b668,0x1a85fe370,620314624
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices,0x1b70d0fc0,0x1b70d0fc0,620314624
shared-library,/usr/lib/libDiagnosticMessagesClient.dylib,0x1ac61fe80,0x1ac620ad8,620314624
shared-library,/usr/lib/libenergytrace.dylib,0x1a9fc16a4,0x1a9fc1d28,620314624
shared-library,/usr/lib/libbsm.0.dylib,0x1b0085950,0x1b0093d58,620314624
shared-library,/usr/lib/system/libkxld.dylib,0x1b099176c,0x1b09a9a74,620314624
shared-library,/System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork,0x1a9be6fe4,0x1a9e5a928,620314624
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents,0x1ad10bde4,0x1ad115de0,620314624
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore,0x1a81cbfbc,0x1a82bbdd0,620314624
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata,0x1ac663ba4,0x1ac6e4158,620314624
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices,0x1b0698c58,0x1b06c2e08,620314624
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit,0x1b0bc18c4,0x1b0c22fa0,620314624
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE,0x1ab7800c0,0x1ab7e32d0,620314624
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices,0x1a589977c,0x1a5a6a2f0,620314624
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices,0x1b1239a5c,0x1b1280ab0,620314624
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList,0x1ad11a010,0x1ad136cf0,620314624
shared-library,/System/Library/Frameworks/Security.framework/Versions/A/Security,0x1a7b63288,0x1a7e5faf0,620314624
shared-library,/System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration,0x1a5fb672c,0x1a60306e0,620314624
shared-library,/usr/lib/libapple_nghttp2.dylib,0x1b0c603e4,0x1b0c6f760,620314624
shared-library,/usr/lib/libcompression.dylib,0x1b0c93700,0x1b0ce7b40,620314624
shared-library,/usr/lib/libnetwork.dylib,0x1a9be4fc0,0x1a9be4fc0,620314624
shared-library,/usr/lib/libsqlite3.dylib,0x1ab404268,0x1ab5b65e0,620314624
shared-library,/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation,0x1a62ed210,0x1a69f9ec4,620314624
shared-library,/System/Library/Frameworks/Network.framework/Versions/A/Network,0x1ab80654c,0x1ac3ab08c,620314624
shared-library,/usr/lib/libCoreEntitlements.dylib,0x22db8f3e4,0x22db95190,620314624
shared-library,/System/Library/PrivateFrameworks/MessageSecurity.framework/Versions/A/MessageSecurity,0x21a666fe4,0x21a684ca0,620314624
shared-library,/System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer,0x1ab3ea314,0x1ab3fc460,620314624
shared-library,/usr/lib/libMobileGestalt.dylib,0x1a9fc41c0,0x1aa00d35c,620314624
shared-library,/System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression,0x1b0674640,0x1b067fbe4,620314624
shared-library,/usr/lib/libcoretls.dylib,0x1b006e39c,0x1b0080468,620314624
shared-library,/usr/lib/libcoretls_cfhelpers.dylib,0x1b12a8e04,0x1b12a9c00,620314624
shared-library,/usr/lib/libpam.2.dylib,0x1b0c8c920,0x1b0c8fcf4,620314624
shared-library,/usr/lib/libxar.1.dylib,0x1b130f57c,0x1b131b778,620314624
shared-library,/System/Library/PrivateFrameworks/CoreAutoLayout.framework/Versions/A/CoreAutoLayout,0x1ad14a8dc,0x1ad17db00,620314624
shared-library,/System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration,0x1ac6fc400,0x1ac702d80,620314624
shared-library,/usr/lib/libarchive.2.dylib,0x1b0b39d8c,0x1b0bab480,620314624
shared-library,/usr/lib/libxml2.2.dylib,0x1ad1943bc,0x1ad25c950,620314624
shared-library,/usr/lib/liblangid.dylib,0x1af58d1e4,0x1af58dd20,620314624
shared-library,/System/Library/Frameworks/Combine.framework/Versions/A/Combine,0x1b5028524,0x1b514eca0,620314624
shared-library,/usr/lib/swift/libswiftCore.dylib,0x1b30eb660,0x1b3542e88,620314624
shared-library,/usr/lib/swift/libswiftCoreFoundation.dylib,0x1c69747cc,0x1c6979cc8,620314624
shared-library,/usr/lib/swift/libswiftDarwin.dylib,0x1c4853fac,0x1c48580d8,620314624
shared-library,/usr/lib/swift/libswiftDispatch.dylib,0x1b85e9ce4,0x1b85fa8d0,620314624
shared-library,/usr/lib/swift/libswiftIOKit.dylib,0x1c6994d44,0x1c6994fb0,620314624
shared-library,/usr/lib/swift/libswiftObjectiveC.dylib,0x1ba9ff370,0x1baa00f30,620314624
shared-library,/usr/lib/swift/libswiftXPC.dylib,0x1c6988a1c,0x1c69919b8,620314624
shared-library,/usr/lib/swift/libswift_Concurrency.dylib,0x22ea3df7c,0x22ea86080,620314624
shared-library,/usr/lib/swift/libswift_StringProcessing.dylib,0x22eb8fdc0,0x22ec27b40,620314624
shared-library,/usr/lib/swift/libswiftos.dylib,0x1baa03a24,0x1baa178f0,620314624
shared-library,/System/Library/PrivateFrameworks/AppleSystemInfo.framework/Versions/A/AppleSystemInfo,0x1af5889c4,0x1af58b4e0,620314624
shared-library,/System/Library/PrivateFrameworks/IOMobileFramebuffer.framework/Versions/A/IOMobileFramebuffer,0x1afd619f4,0x1afd6c200,620314624
shared-library,/System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface,0x1ae61ec64,0x1ae62d448,620314624
shared-library,/usr/lib/libpcap.A.dylib,0x1b09ffc60,0x1b0a207f0,620314624
shared-library,/usr/lib/libdns_services.dylib,0x1ab7f3780,0x1ab7fa0a8,620314624
shared-library,/usr/lib/liblzma.5.dylib,0x1b128f670,0x1b12a1770,620314624
shared-library,/usr/lib/libbz2.1.0.dylib,0x1b0684cec,0x1b068ffa0,620314624
shared-library,/usr/lib/libiconv.2.dylib,0x1b0a355c0,0x1b0a4a970,620314624
shared-library,/usr/lib/libcharset.1.dylib,0x1b0988948,0x1b0988e38,620314624
shared-library,/usr/lib/swift/libswift_RegexParser.dylib,0x22eadb5fc,0x22eb71e30,620314624
shared-library,/usr/lib/libheimdal-asn1.dylib,0x1b16d99dc,0x1b16e2b40,620314624
shared-library,/usr/lib/libCheckFix.dylib,0x1b0060828,0x1b006ad4c,620314624
shared-library,/System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC,0x1aa040bf4,0x1aa0579b8,620314624
shared-library,/System/Library/PrivateFrameworks/CoreNLP.framework/Versions/A/CoreNLP,0x1af58f4b4,0x1af6604e8,620314624
shared-library,/System/Library/PrivateFrameworks/MetadataUtilities.framework/Versions/A/MetadataUtilities,0x1ac622614,0x1ac655688,620314624
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate,0x1b7375000,0x1b7375000,620314624
shared-library,/usr/lib/libmecab.dylib,0x1b0096fa4,0x1b00e5cd0,620314624
shared-library,/usr/lib/libCRFSuite.dylib,0x1a6040588,0x1a606dbb8,620314624
shared-library,/usr/lib/libgermantok.dylib,0x1b00f42a0,0x1b00f5d40,620314624
shared-library,/usr/lib/libThaiTokenizer.dylib,0x1b0c38d08,0x1b0c39d50,620314624
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage,0x1ac705660,0x1aca23068,620314624
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib,0x1b70a8000,0x1b70a8000,620314624
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib,0x1b1355038,0x1b13cb110,620314624
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib,0x1afc62300,0x1afd48004,620314624
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib,0x1a5c4c390,0x1a5f00b88,620314624
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib,0x1b0d6499c,0x1b122fbb0,620314624
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib,0x1b00f70ec,0x1b0108c40,620314624
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib,0x1b0c782f8,0x1b0c89964,620314624
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libQuadrature.dylib,0x1b0d5ff7c,0x1b0d63190,620314624
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBNNS.dylib,0x1af688040,0x1afc30f50,620314624
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparse.dylib,0x1a5f4ec38,0x1a5fafc70,620314624
shared-library,/System/Library/PrivateFrameworks/MIL.framework/Versions/A/MIL,0x2199a0b80,0x219c06770,620314624
shared-library,/System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory,0x1ad0edaf0,0x1ad103450,620314624
shared-library,/System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory,0x1ad0de4d4,0x1ad0e52b0,620314624
shared-library,/System/Library/PrivateFrameworks/APFS.framework/Versions/A/APFS,0x1b12aae60,0x1b12f659c,620314624
shared-library,/System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation,0x1aff99158,0x1affde1d8,620314624
shared-library,/usr/lib/libutil.dylib,0x1b131e078,0x1b1320660,620314624
shared-library,/System/Library/PrivateFrameworks/InstalledContentLibrary.framework/Versions/A/InstalledContentLibrary,0x218a1f394,0x218ab76e8,620314624
shared-library,/System/Library/PrivateFrameworks/CoreServicesStore.framework/Versions/A/CoreServicesStore,0x1a850e4a4,0x1a853cff0,620314624
shared-library,/usr/lib/libapp_launch_measurement.dylib,0x1ad1467fc,0x1ad148750,620314624
shared-library,/System/Library/PrivateFrameworks/AppleMobileFileIntegrity.framework/Versions/A/AppleMobileFileIntegrity,0x20fa56860,0x20fa5ebb0,620314624
shared-library,/usr/lib/libmis.dylib,0x1c6953b34,0x1c69607c8,620314624
shared-library,/System/Library/PrivateFrameworks/MobileSystemServices.framework/Versions/A/MobileSystemServices,0x1d487a9e8,0x1d487ce08,620314624
shared-library,/System/Library/PrivateFrameworks/ConfigProfileHelper.framework/Versions/A/ConfigProfileHelper,0x1eefbe3f4,0x1eefbf788,620314624
shared-library,/System/Library/PrivateFrameworks/CoreAnalytics.framework/Versions/A/CoreAnalytics,0x1ac5f37e8,0x1ac6164b0,620314624
shared-library,/System/Library/PrivateFrameworks/AppleSauce.framework/Versions/A/AppleSauce,0x1b0c3b1a0,0x1b0c5bab8,620314624
shared-library,/System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling,0x1a6d25a3c,0x1a6e66ea8,620314624
shared-library,/usr/lib/libxslt.1.dylib,0x1b13223c8,0x1b1343b7c,620314624
shared-library,/usr/lib/libcmph.dylib,0x1b0b2785c,0x1b0b36bf0,620314624
shared-library,/System/Library/PrivateFrameworks/CoreEmoji.framework/Versions/A/CoreEmoji,0x1afd4ef74,0x1afd5da40,620314624
shared-library,/System/Library/PrivateFrameworks/LinguisticData.framework/Versions/A/LinguisticData,0x1af682404,0x1af685b38,620314624
shared-library,/System/Library/PrivateFrameworks/Lexicon.framework/Versions/A/Lexicon,0x1a5f06a8c,0x1a5f43e40,620314624
shared-library,/System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement,0x1b002b920,0x1b0044a10,620314624
shared-library,/usr/lib/libTLE.dylib,0x22dd2e25c,0x22dd336b8,620314624
shared-library-end
tick,0x1a5321cec,1000,0,0x0,6
profiler,begin,1000
tick,0x100387880,2208,0,0x0,6
new,CodeRange,0x107574000,0
tick,0x1008f70ac,3500,0,0x0,6
new,MemoryChunk,0x2ec6ba540000,262144
tick,0x1005e8800,4708,0,0x0,6
new,MemoryChunk,0x53f8c3c0000,262144
new,MemoryChunk,0x1a2ded380000,262144
new,MemoryChunk,0x3286f0c40000,262144
new,MemoryChunk,0x23a579fc0000,262144
heap-capacity,1031008
heap-available,2198828736
new,MemoryChunk,0x23275ac00000,262144
tick,0x1008f7e84,5958,0,0x0,6
new,MemoryChunk,0x7c7eab80000,278528
new,MemoryChunk,0x18a4fd080000,262144
new,MemoryChunk,0xd5ac0c40000,262144
new,MemoryChunk,0x286f2a240000,262144
new,MemoryChunk,0x3b5f1dac0000,262144
tick,0x1005e2db4,7208,0,0x0,1
new,MemoryChunk,0x5d9fd2c0000,262144
new,MemoryChunk,0x107580000,262144
tick,0x1008f9890,8458,0,0x0,6
new,MemoryChunk,0x235e99c40000,262144
code-creation,Builtin,2,9250,0x100064000,816,DeoptimizationEntry_Eager
code-creation,Builtin,2,9375,0x100064340,816,DeoptimizationEntry_Lazy
code-creation,Builtin,2,9375,0x100064680,1708,RecordWriteSaveFP
code-creation,Builtin,2,9375,0x100064d40,1132,RecordWriteIgnoreFP
code-creation,Builtin,2,9375,0x1000651c0,280,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,9375,0x1000652e0,184,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,9417,0x1000653a0,76,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,9417,0x100065400,360,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,9417,0x100065580,436,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,9417,0x100065740,476,CallFunction_ReceiverIsAny
code-creation,Builtin,2,9417,0x100065920,232,CallBoundFunction
code-creation,Builtin,2,9417,0x100065a20,844,CallWrappedFunction
code-creation,Builtin,2,9417,0x100065d80,192,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,9417,0x100065e60,192,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,9417,0x100065f40,192,Call_ReceiverIsAny
code-creation,Builtin,2,9417,0x100066020,864,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,9417,0x1000663a0,856,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,9417,0x100066700,1008,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,9458,0x100066b00,1008,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,9458,0x100066f00,1008,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,9458,0x100067300,1008,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,9458,0x100067700,828,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,9458,0x100067a40,828,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,9458,0x100067d80,828,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,9458,0x1000680c0,784,CallProxy
code-creation,Builtin,2,9458,0x1000683e0,156,CallVarargs
code-creation,Builtin,2,9458,0x100068480,1156,CallWithSpread
code-creation,Builtin,2,9458,0x100068920,1952,CallWithSpread_Baseline
code-creation,Builtin,2,9458,0x1000690e0,2008,CallWithSpread_WithFeedback
code-creation,Builtin,2,9458,0x1000698c0,1176,CallWithArrayLike
code-creation,Builtin,2,9458,0x100069d60,1988,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,9500,0x10006a540,184,CallForwardVarargs
code-creation,Builtin,2,9500,0x10006a600,184,CallFunctionForwardVarargs
code-creation,Builtin,2,9500,0x10006a6c0,152,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,9500,0x10006a760,240,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,9500,0x10006a860,328,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,9500,0x10006a9c0,24,ConstructFunction
code-creation,Builtin,2,9500,0x10006a9e0,236,ConstructBoundFunction
code-creation,Builtin,2,9500,0x10006aae0,44,ConstructedNonConstructable
code-creation,Builtin,2,9500,0x10006ab20,88,Construct
code-creation,Builtin,2,9500,0x10006ab80,156,ConstructVarargs
code-creation,Builtin,2,9500,0x10006ac20,1184,ConstructWithSpread
code-creation,Builtin,2,9500,0x10006b0e0,1960,ConstructWithSpread_Baseline
code-creation,Builtin,2,9542,0x10006b8a0,1940,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,9542,0x10006c040,1304,ConstructWithArrayLike
code-creation,Builtin,2,9542,0x10006c560,2060,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,9542,0x10006cd80,236,ConstructForwardVarargs
code-creation,Builtin,2,9542,0x10006ce80,236,ConstructFunctionForwardVarargs
code-creation,Builtin,2,9542,0x10006cf80,752,Construct_Baseline
code-creation,Builtin,2,9542,0x10006d280,756,Construct_WithFeedback
code-creation,Builtin,2,9542,0x10006d580,564,JSConstructStubGeneric
code-creation,Builtin,2,9542,0x10006d7c0,472,JSBuiltinsConstructStub
code-creation,Builtin,2,9542,0x10006d9a0,704,FastNewObject
code-creation,Builtin,2,9542,0x10006dc80,332,FastNewClosure
code-creation,Builtin,2,9542,0x10006dde0,764,ConstructProxy
code-creation,Builtin,2,9542,0x10006e0e0,264,JSEntry
code-creation,Builtin,2,9583,0x10006e200,264,JSConstructEntry
code-creation,Builtin,2,9583,0x10006e320,264,JSRunMicrotasksEntry
code-creation,Builtin,2,9583,0x10006e440,188,JSEntryTrampoline
code-creation,Builtin,2,9583,0x10006e500,188,JSConstructEntryTrampoline
code-creation,Builtin,2,9583,0x10006e5c0,384,ResumeGeneratorTrampoline
code-creation,Builtin,2,9583,0x10006e760,1432,StringFromCodePointAt
code-creation,Builtin,2,9583,0x10006ed00,592,StringEqual
code-creation,Builtin,2,9583,0x10006ef60,324,StringGreaterThan
code-creation,Builtin,2,9583,0x10006f0c0,324,StringGreaterThanOrEqual
code-creation,Builtin,2,9583,0x10006f220,324,StringLessThan
code-creation,Builtin,2,9583,0x10006f380,324,StringLessThanOrEqual
code-creation,Builtin,2,9625,0x10006f4e0,2528,StringSubstring
code-creation,Builtin,2,9625,0x10006fee0,120,OrderedHashTableHealIndex
code-creation,Builtin,2,9625,0x10006ff60,1252,InterpreterEntryTrampoline
code-creation,Builtin,2,9625,0x100070460,1288,InterpreterEntryTrampolineForProfiling
code-creation,Builtin,2,9625,0x100070980,124,InterpreterPushArgsThenCall
code-creation,Builtin,2,9625,0x100070a00,132,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,9625,0x100070aa0,132,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,9625,0x100070b40,132,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,9625,0x100070be0,132,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,9625,0x100070c80,140,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,9625,0x100070d20,92,InterpreterEnterAtBytecode
code-creation,Builtin,2,9625,0x100070d80,224,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,9667,0x100070e80,144,InterpreterOnStackReplacement
code-creation,Builtin,2,9667,0x100070f20,592,BaselineOutOfLinePrologue
code-creation,Builtin,2,9667,0x100071180,24,BaselineOutOfLinePrologueDeopt
code-creation,Builtin,2,9667,0x1000711a0,140,BaselineOnStackReplacement
code-creation,Builtin,2,9667,0x100071240,104,BaselineLeaveFrame
code-creation,Builtin,2,9667,0x1000712c0,232,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,9667,0x1000713c0,236,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,9667,0x1000714c0,208,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,9667,0x1000715a0,4,MaglevOnStackReplacement
code-creation,Builtin,2,9667,0x1000715c0,4,MaglevOutOfLinePrologue
code-creation,Builtin,2,9667,0x1000715e0,1028,CompileLazy
code-creation,Builtin,2,9667,0x100071a00,80,CompileLazyDeoptimizedCode
code-creation,Builtin,2,9708,0x100071a60,316,InstantiateAsmJs
code-creation,Builtin,2,9708,0x100071ba0,44,NotifyDeoptimized
code-creation,Builtin,2,9708,0x100071be0,88,ContinueToCodeStubBuiltin
code-creation,Builtin,2,9708,0x100071c40,92,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,9708,0x100071ca0,92,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,9708,0x100071d00,108,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,9708,0x100071d80,392,CallApiCallback
code-creation,Builtin,2,9708,0x100071f20,364,CallApiGetter
code-creation,Builtin,2,9708,0x1000720a0,8,HandleApiCall
code-creation,Builtin,2,9708,0x1000720c0,8,HandleApiCallAsFunction
code-creation,Builtin,2,9708,0x1000720e0,8,HandleApiCallAsConstructor
code-creation,Builtin,2,9708,0x100072100,56,AllocateInYoungGeneration
code-creation,Builtin,2,9750,0x100072140,52,AllocateRegularInYoungGeneration
code-creation,Builtin,2,9750,0x100072180,56,AllocateInOldGeneration
code-creation,Builtin,2,9750,0x1000721c0,52,AllocateRegularInOldGeneration
code-creation,Builtin,2,9750,0x100072200,168,NewHeapNumber
code-creation,Builtin,2,9750,0x1000722c0,420,CopyFastSmiOrObjectElements
code-creation,Builtin,2,9750,0x100072480,552,GrowFastDoubleElements
code-creation,Builtin,2,9750,0x1000726c0,432,GrowFastSmiOrObjectElements
code-creation,Builtin,2,9750,0x100072880,484,DebugBreakTrampoline
code-creation,Builtin,2,9750,0x100072a80,344,RestartFrameTrampoline
code-creation,Builtin,2,9792,0x100072be0,220,ToNumber
code-creation,Builtin,2,9792,0x100072cc0,328,ToNumber_Baseline
code-creation,Builtin,2,9792,0x100072e20,392,ToNumeric_Baseline
code-creation,Builtin,2,9792,0x100072fc0,140,PlainPrimitiveToNumber
code-creation,Builtin,2,9792,0x100073060,260,ToNumberConvertBigInt
code-creation,Builtin,2,9792,0x100073180,148,Typeof
code-creation,Builtin,2,9792,0x100073220,140,BigIntToI64
code-creation,Builtin,2,9792,0x1000732c0,8,BigIntToI32Pair
code-creation,Builtin,2,9792,0x1000732e0,272,I64ToBigInt
code-creation,Builtin,2,9792,0x100073400,8,I32PairToBigInt
code-creation,Builtin,2,9792,0x100073420,136,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,9833,0x1000734c0,4812,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,9833,0x1000747a0,16168,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,9833,0x1000786e0,12388,DefineKeyedOwnIC_Megamorphic
code-creation,Builtin,2,9833,0x10007b760,720,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,9833,0x10007ba40,84,LoadIC_FunctionPrototype
code-creation,Builtin,2,9833,0x10007baa0,16,LoadIC_StringLength
code-creation,Builtin,2,9833,0x10007bac0,20,LoadIC_StringWrapperLength
code-creation,Builtin,2,9833,0x10007bae0,4272,LoadIC_NoFeedback
code-creation,Builtin,2,9833,0x10007cba0,44,StoreGlobalIC_Slow
code-creation,Builtin,2,9875,0x10007cbe0,7732,StoreIC_NoFeedback
code-creation,Builtin,2,9875,0x10007ea20,3904,DefineNamedOwnIC_NoFeedback
code-creation,Builtin,2,9875,0x10007f980,220,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,9875,0x10007fa60,68,LoadIndexedInterceptorIC
code-creation,Builtin,2,9875,0x10007fac0,292,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,9875,0x10007fc00,292,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,9875,0x10007fd40,292,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,9875,0x10007fe80,292,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,9875,0x10007ffc0,12516,StoreFastElementIC_Standard
code-creation,Builtin,2,9917,0x1000830c0,9968,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,9917,0x1000857c0,11980,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,9917,0x1000886a0,5872,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,9917,0x100089da0,8344,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,9917,0x10008be40,21452,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,9917,0x100091220,8344,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,9917,0x1000932c0,11344,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,9917,0x100095f20,1164,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,9958,0x1000963c0,200,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,9958,0x1000964a0,68,HasIndexedInterceptorIC
code-creation,Builtin,2,9958,0x100096500,164,EnqueueMicrotask
code-creation,Builtin,2,9958,0x1000965c0,8,RunMicrotasksTrampoline
code-creation,Builtin,2,9958,0x1000965e0,3532,RunMicrotasks
code-creation,Builtin,2,9958,0x1000973c0,3600,HasProperty
code-creation,Builtin,2,9958,0x1000981e0,1196,DeleteProperty
code-creation,Builtin,2,9958,0x1000986a0,2792,CopyDataProperties
code-creation,Builtin,2,9958,0x1000991a0,11172,SetDataProperties
code-creation,Builtin,2,9958,0x10009bd60,3476,CopyDataPropertiesWithExcludedPropertiesOnStack
code-creation,Builtin,2,10000,0x10009cb00,76,CopyDataPropertiesWithExcludedProperties
code-creation,Builtin,2,10000,0x10009cb60,32,Abort
code-creation,Builtin,2,10000,0x10009cba0,32,AbortCSADcheck
code-creation,Builtin,2,10042,0x10009cbe0,8,EmptyFunction
code-creation,Builtin,2,10042,0x10009cc00,8,Illegal
code-creation,Builtin,2,10042,0x10009cc20,8,StrictPoisonPillThrower
code-creation,Builtin,2,10042,0x10009cc40,8,UnsupportedThrower
code-creation,Builtin,2,10042,0x10009cc60,80,ReturnReceiver
code-creation,Builtin,2,10042,0x10009ccc0,36,ArrayConstructor
code-creation,Builtin,2,10042,0x10009cd00,456,ArrayConstructorImpl
code-creation,Builtin,2,10042,0x10009cee0,244,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,10083,0x10009cfe0,244,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,10083,0x10009d0e0,204,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,10083,0x10009d1c0,204,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,10083,0x10009d2a0,204,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,10083,0x10009d380,204,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,10083,0x10009d460,208,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,10083,0x10009d540,208,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,10083,0x10009d620,272,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,10125,0x10009d740,500,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,10125,0x10009d940,232,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,10125,0x10009da40,412,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,10125,0x10009dbe0,232,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,10125,0x10009dce0,412,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,10125,0x10009de80,232,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,10125,0x10009df80,420,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,10167,0x10009e140,60,ArrayNArgumentsConstructor
code-creation,Builtin,2,10167,0x10009e180,8,ArrayConcat
code-creation,Builtin,2,10167,0x10009e1a0,8,ArrayPrototypeFill
code-creation,Builtin,2,10167,0x10009e1c0,1176,ArrayIncludesSmi
code-creation,Builtin,2,10167,0x10009e660,1104,ArrayIncludesSmiOrObject
code-creation,Builtin,2,10167,0x10009eac0,352,ArrayIncludesPackedDoubles
code-creation,Builtin,2,10167,0x10009ec40,468,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,10167,0x10009ee20,632,ArrayIncludes
code-creation,Builtin,2,10167,0x10009f0a0,1056,ArrayIndexOfSmi
code-creation,Builtin,2,10167,0x10009f4e0,1000,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,10208,0x10009f8e0,284,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,10208,0x10009fa00,284,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,10208,0x10009fb20,632,ArrayIndexOf
code-creation,Builtin,2,10208,0x10009fda0,8,ArrayPop
code-creation,Builtin,2,10208,0x10009fdc0,624,ArrayPrototypePop
code-creation,Builtin,2,10208,0x1000a0040,8,ArrayPrototypeGroup
code-creation,Builtin,2,10208,0x1000a0060,8,ArrayPrototypeGroupToMap
code-creation,Builtin,2,10208,0x1000a0080,8,ArrayPush
code-creation,Builtin,2,10208,0x1000a00a0,2400,ArrayPrototypePush
code-creation,Builtin,2,10250,0x1000a0a20,8,ArrayShift
code-creation,Builtin,2,10250,0x1000a0a40,8,ArrayUnshift
code-creation,Builtin,2,10250,0x1000a0a60,920,CloneFastJSArray
code-creation,Builtin,2,10250,0x1000a0e00,2096,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,10250,0x1000a1640,952,ExtractFastJSArray
code-creation,Builtin,2,10250,0x1000a1a00,272,ArrayPrototypeEntries
code-creation,Builtin,2,10250,0x1000a1b20,268,ArrayPrototypeKeys
code-creation,Builtin,2,10250,0x1000a1c40,272,ArrayPrototypeValues
code-creation,Builtin,2,10250,0x1000a1d60,4108,ArrayIteratorPrototypeNext
code-creation,Builtin,2,10250,0x1000a2d80,4696,FlattenIntoArray
code-creation,Builtin,2,10292,0x1000a3fe0,4680,FlatMapIntoArray
code-creation,Builtin,2,10292,0x1000a5240,412,ArrayPrototypeFlat
code-creation,Builtin,2,10292,0x1000a53e0,472,ArrayPrototypeFlatMap
code-creation,Builtin,2,10292,0x1000a55c0,8,ArrayBufferConstructor
code-creation,Builtin,2,10292,0x1000a55e0,8,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,10292,0x1000a5600,8,ArrayBufferPrototypeSlice
code-creation,Builtin,2,10292,0x1000a5620,8,ArrayBufferPrototypeResize
code-creation,Builtin,2,10292,0x1000a5640,8,ArrayBufferPrototypeTransfer
code-creation,Builtin,2,10292,0x1000a5660,968,AsyncFunctionEnter
code-creation,Builtin,2,10292,0x1000a5a40,96,AsyncFunctionReject
code-creation,Builtin,2,10333,0x1000a5ac0,92,AsyncFunctionResolve
code-creation,Builtin,2,10333,0x1000a5b20,16,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,10333,0x1000a5b40,1564,AsyncFunctionAwaitCaught
code-creation,Builtin,2,10333,0x1000a6160,1564,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,10333,0x1000a6780,208,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,10333,0x1000a6860,208,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,10333,0x1000a6940,8,BigIntConstructor
code-creation,Builtin,2,10333,0x1000a6960,8,BigIntAsUintN
code-creation,Builtin,2,10333,0x1000a6980,8,BigIntAsIntN
code-creation,Builtin,2,10375,0x1000a69a0,8,BigIntPrototypeToLocaleString
code-creation,Builtin,2,10375,0x1000a69c0,8,BigIntPrototypeToString
code-creation,Builtin,2,10375,0x1000a69e0,8,BigIntPrototypeValueOf
code-creation,Builtin,2,10375,0x1000a6a00,8,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,10375,0x1000a6a20,8,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,10375,0x1000a6a40,8,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,10375,0x1000a6a60,8,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,10375,0x1000a6a80,8,CallSitePrototypeGetFileName
code-creation,Builtin,2,10375,0x1000a6aa0,8,CallSitePrototypeGetFunction
code-creation,Builtin,2,10375,0x1000a6ac0,8,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,10417,0x1000a6ae0,8,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,10417,0x1000a6b00,8,CallSitePrototypeGetMethodName
code-creation,Builtin,2,10417,0x1000a6b20,8,CallSitePrototypeGetPosition
code-creation,Builtin,2,10417,0x1000a6b40,8,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,10417,0x1000a6b60,8,CallSitePrototypeGetScriptHash
code-creation,Builtin,2,10417,0x1000a6b80,8,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,10417,0x1000a6ba0,8,CallSitePrototypeGetThis
code-creation,Builtin,2,10417,0x1000a6bc0,8,CallSitePrototypeGetTypeName
code-creation,Builtin,2,10417,0x1000a6be0,8,CallSitePrototypeIsAsync
code-creation,Builtin,2,10458,0x1000a6c00,8,CallSitePrototypeIsConstructor
code-creation,Builtin,2,10458,0x1000a6c20,8,CallSitePrototypeIsEval
code-creation,Builtin,2,10458,0x1000a6c40,8,CallSitePrototypeIsNative
code-creation,Builtin,2,10458,0x1000a6c60,8,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,10458,0x1000a6c80,8,CallSitePrototypeIsToplevel
code-creation,Builtin,2,10458,0x1000a6ca0,8,CallSitePrototypeToString
code-creation,Builtin,2,10458,0x1000a6cc0,8,ConsoleDebug
code-creation,Builtin,2,10458,0x1000a6ce0,8,ConsoleError
code-creation,Builtin,2,10458,0x1000a6d00,8,ConsoleInfo
code-creation,Builtin,2,10500,0x1000a6d20,8,ConsoleLog
code-creation,Builtin,2,10500,0x1000a6d40,8,ConsoleWarn
code-creation,Builtin,2,10500,0x1000a6d60,8,ConsoleDir
code-creation,Builtin,2,10500,0x1000a6d80,8,ConsoleDirXml
code-creation,Builtin,2,10500,0x1000a6da0,8,ConsoleTable
code-creation,Builtin,2,10500,0x1000a6dc0,8,ConsoleTrace
code-creation,Builtin,2,10500,0x1000a6de0,8,ConsoleGroup
code-creation,Builtin,2,10500,0x1000a6e00,8,ConsoleGroupCollapsed
code-creation,Builtin,2,10500,0x1000a6e20,8,ConsoleGroupEnd
code-creation,Builtin,2,10500,0x1000a6e40,8,ConsoleClear
code-creation,Builtin,2,10542,0x1000a6e60,8,ConsoleCount
code-creation,Builtin,2,10542,0x1000a6e80,8,ConsoleCountReset
code-creation,Builtin,2,10542,0x1000a6ea0,8,ConsoleAssert
code-creation,Builtin,2,10542,0x1000a6ec0,8,ConsoleProfile
code-creation,Builtin,2,10542,0x1000a6ee0,8,ConsoleProfileEnd
code-creation,Builtin,2,10542,0x1000a6f00,8,ConsoleTime
code-creation,Builtin,2,10542,0x1000a6f20,8,ConsoleTimeLog
code-creation,Builtin,2,10542,0x1000a6f40,8,ConsoleTimeEnd
code-creation,Builtin,2,10542,0x1000a6f60,8,ConsoleTimeStamp
code-creation,Builtin,2,10542,0x1000a6f80,8,ConsoleContext
code-creation,Builtin,2,10542,0x1000a6fa0,8,DataViewConstructor
code-creation,Builtin,2,10583,0x1000a6fc0,8,DateConstructor
code-creation,Builtin,2,10583,0x1000a6fe0,208,DatePrototypeGetDate
code-creation,Builtin,2,10583,0x1000a70c0,208,DatePrototypeGetDay
code-creation,Builtin,2,10583,0x1000a71a0,208,DatePrototypeGetFullYear
code-creation,Builtin,2,10583,0x1000a7280,208,DatePrototypeGetHours
code-creation,Builtin,2,10583,0x1000a7360,180,DatePrototypeGetMilliseconds
code-creation,Builtin,2,10583,0x1000a7420,208,DatePrototypeGetMinutes
code-creation,Builtin,2,10583,0x1000a7500,208,DatePrototypeGetMonth
code-creation,Builtin,2,10583,0x1000a75e0,208,DatePrototypeGetSeconds
code-creation,Builtin,2,10625,0x1000a76c0,144,DatePrototypeGetTime
code-creation,Builtin,2,10625,0x1000a7760,180,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,10625,0x1000a7820,180,DatePrototypeGetUTCDate
code-creation,Builtin,2,10625,0x1000a78e0,180,DatePrototypeGetUTCDay
code-creation,Builtin,2,10625,0x1000a79a0,180,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,10625,0x1000a7a60,180,DatePrototypeGetUTCHours
code-creation,Builtin,2,10625,0x1000a7b20,180,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,10625,0x1000a7be0,180,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,10625,0x1000a7ca0,180,DatePrototypeGetUTCMonth
code-creation,Builtin,2,10625,0x1000a7d60,180,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,10667,0x1000a7e20,144,DatePrototypeValueOf
code-creation,Builtin,2,10667,0x1000a7ec0,380,DatePrototypeToPrimitive
code-creation,Builtin,2,10667,0x1000a8040,8,DatePrototypeGetYear
code-creation,Builtin,2,10667,0x1000a8060,8,DatePrototypeSetYear
code-creation,Builtin,2,10667,0x1000a8080,8,DateNow
code-creation,Builtin,2,10667,0x1000a80a0,8,DateParse
code-creation,Builtin,2,10667,0x1000a80c0,8,DatePrototypeSetDate
code-creation,Builtin,2,10667,0x1000a80e0,8,DatePrototypeSetFullYear
code-creation,Builtin,2,10667,0x1000a8100,8,DatePrototypeSetHours
code-creation,Builtin,2,10667,0x1000a8120,8,DatePrototypeSetMilliseconds
code-creation,Builtin,2,10708,0x1000a8140,8,DatePrototypeSetMinutes
code-creation,Builtin,2,10708,0x1000a8160,8,DatePrototypeSetMonth
code-creation,Builtin,2,10708,0x1000a8180,8,DatePrototypeSetSeconds
code-creation,Builtin,2,10708,0x1000a81a0,8,DatePrototypeSetTime
code-creation,Builtin,2,10708,0x1000a81c0,8,DatePrototypeSetUTCDate
code-creation,Builtin,2,10708,0x1000a81e0,8,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,10708,0x1000a8200,8,DatePrototypeSetUTCHours
code-creation,Builtin,2,10708,0x1000a8220,8,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,10708,0x1000a8240,8,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,10750,0x1000a8260,8,DatePrototypeSetUTCMonth
code-creation,Builtin,2,10750,0x1000a8280,8,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,10750,0x1000a82a0,8,DatePrototypeToDateString
code-creation,Builtin,2,10750,0x1000a82c0,8,DatePrototypeToISOString
code-creation,Builtin,2,10750,0x1000a82e0,8,DatePrototypeToUTCString
code-creation,Builtin,2,10750,0x1000a8300,8,DatePrototypeToString
code-creation,Builtin,2,10750,0x1000a8320,8,DatePrototypeToTimeString
code-creation,Builtin,2,10750,0x1000a8340,8,DatePrototypeToJson
code-creation,Builtin,2,10750,0x1000a8360,8,DateUTC
code-creation,Builtin,2,10750,0x1000a8380,8,ErrorConstructor
code-creation,Builtin,2,10792,0x1000a83a0,8,ErrorCaptureStackTrace
code-creation,Builtin,2,10792,0x1000a83c0,8,ErrorPrototypeToString
code-creation,Builtin,2,10792,0x1000a83e0,8,FunctionConstructor
code-creation,Builtin,2,10792,0x1000a8400,80,FunctionPrototypeApply
code-creation,Builtin,2,10792,0x1000a8460,8,FunctionPrototypeBind
code-creation,Builtin,2,10792,0x1000a8480,152,FunctionPrototypeCall
code-creation,Builtin,2,10792,0x1000a8520,8,FunctionPrototypeToString
code-creation,Builtin,2,10792,0x1000a8540,232,CreateIterResultObject
code-creation,Builtin,2,10792,0x1000a8640,940,CreateGeneratorObject
code-creation,Builtin,2,10833,0x1000a8a00,8,GeneratorFunctionConstructor
code-creation,Builtin,2,10833,0x1000a8a20,436,GeneratorPrototypeNext
code-creation,Builtin,2,10833,0x1000a8be0,436,GeneratorPrototypeReturn
code-creation,Builtin,2,10833,0x1000a8da0,448,GeneratorPrototypeThrow
code-creation,Builtin,2,10833,0x1000a8f80,8,AsyncFunctionConstructor
code-creation,Builtin,2,10833,0x1000a8fa0,380,SuspendGeneratorBaseline
code-creation,Builtin,2,10833,0x1000a9120,124,ResumeGeneratorBaseline
code-creation,Builtin,2,10875,0x1000a91a0,56,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,10875,0x1000a91e0,112,CallIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,10875,0x1000a9260,8,GlobalDecodeURI
code-creation,Builtin,2,10875,0x1000a9280,8,GlobalDecodeURIComponent
code-creation,Builtin,2,10875,0x1000a92a0,8,GlobalEncodeURI
code-creation,Builtin,2,10875,0x1000a92c0,8,GlobalEncodeURIComponent
code-creation,Builtin,2,10875,0x1000a92e0,8,GlobalEscape
code-creation,Builtin,2,10875,0x1000a9300,8,GlobalUnescape
code-creation,Builtin,2,10875,0x1000a9320,8,GlobalEval
code-creation,Builtin,2,10875,0x1000a9340,160,GlobalIsFinite
code-creation,Builtin,2,10917,0x1000a9400,156,GlobalIsNaN
code-creation,Builtin,2,10917,0x1000a94a0,8,JsonParse
code-creation,Builtin,2,10917,0x1000a94c0,8,JsonStringify
code-creation,Builtin,2,10917,0x1000a94e0,8,JsonRawJson
code-creation,Builtin,2,10917,0x1000a9500,8,JsonIsRawJson
code-creation,Builtin,2,10917,0x1000a9520,8,WebSnapshotSerialize
code-creation,Builtin,2,10917,0x1000a9540,8,WebSnapshotDeserialize
code-creation,Builtin,2,10917,0x1000a9560,5440,LoadIC
code-creation,Builtin,2,10917,0x1000aaac0,5044,LoadIC_Megamorphic
code-creation,Builtin,2,10917,0x1000abe80,5300,LoadIC_Noninlined
code-creation,Builtin,2,11167,0x1000ad340,48,LoadICTrampoline
code-creation,Builtin,2,11167,0x1000ad380,28,LoadICBaseline
code-creation,Builtin,2,11167,0x1000ad3a0,48,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,11167,0x1000ad3e0,10124,LoadSuperIC
code-creation,Builtin,2,11208,0x1000afb80,28,LoadSuperICBaseline
code-creation,Builtin,2,11208,0x1000afba0,7944,KeyedLoadIC
code-creation,Builtin,2,11208,0x1000b1ac0,15800,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,11208,0x1000b5880,48,KeyedLoadICTrampoline
code-creation,Builtin,2,11208,0x1000b58c0,28,KeyedLoadICBaseline
code-creation,Builtin,2,11208,0x1000b58e0,48,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,11208,0x1000b5920,4800,StoreGlobalIC
code-creation,Builtin,2,11208,0x1000b6c00,48,StoreGlobalICTrampoline
code-creation,Builtin,2,11208,0x1000b6c40,28,StoreGlobalICBaseline
code-creation,Builtin,2,11250,0x1000b6c60,5300,StoreIC
code-creation,Builtin,2,11250,0x1000b8120,48,StoreICTrampoline
code-creation,Builtin,2,11250,0x1000b8160,28,StoreICBaseline
code-creation,Builtin,2,11250,0x1000b8180,5104,DefineNamedOwnIC
code-creation,Builtin,2,11250,0x1000b9580,48,DefineNamedOwnICTrampoline
code-creation,Builtin,2,11250,0x1000b95c0,28,DefineNamedOwnICBaseline
code-creation,Builtin,2,11250,0x1000b95e0,5776,KeyedStoreIC
code-creation,Builtin,2,11250,0x1000bac80,48,KeyedStoreICTrampoline
code-creation,Builtin,2,11292,0x1000bacc0,28,KeyedStoreICBaseline
code-creation,Builtin,2,11292,0x1000bace0,5580,DefineKeyedOwnIC
code-creation,Builtin,2,11292,0x1000bc2c0,48,DefineKeyedOwnICTrampoline
code-creation,Builtin,2,11292,0x1000bc300,28,DefineKeyedOwnICBaseline
code-creation,Builtin,2,11292,0x1000bc320,420,StoreInArrayLiteralIC
code-creation,Builtin,2,11292,0x1000bc4e0,28,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,11292,0x1000bc500,164,LookupContextTrampoline
code-creation,Builtin,2,11292,0x1000bc5c0,176,LookupContextBaseline
code-creation,Builtin,2,11292,0x1000bc680,164,LookupContextInsideTypeofTrampoline
code-creation,Builtin,2,11333,0x1000bc740,176,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,11333,0x1000bc800,3216,LoadGlobalIC
code-creation,Builtin,2,11333,0x1000bd4a0,3196,LoadGlobalICInsideTypeof
code-creation,Builtin,2,11333,0x1000be120,48,LoadGlobalICTrampoline
code-creation,Builtin,2,11333,0x1000be160,28,LoadGlobalICBaseline
code-creation,Builtin,2,11333,0x1000be180,48,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,11333,0x1000be1c0,28,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,11333,0x1000be1e0,180,LookupGlobalICTrampoline
code-creation,Builtin,2,11333,0x1000be2a0,172,LookupGlobalICBaseline
code-creation,Builtin,2,11375,0x1000be360,180,LookupGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,11375,0x1000be420,172,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,11375,0x1000be4e0,1972,CloneObjectIC
code-creation,Builtin,2,11375,0x1000beca0,28,CloneObjectICBaseline
code-creation,Builtin,2,11375,0x1000becc0,2800,CloneObjectIC_Slow
code-creation,Builtin,2,11375,0x1000bf7c0,2848,KeyedHasIC
code-creation,Builtin,2,11375,0x1000c0300,28,KeyedHasICBaseline
code-creation,Builtin,2,11375,0x1000c0320,3600,KeyedHasIC_Megamorphic
code-creation,Builtin,2,11375,0x1000c1140,1580,IterableToList
code-creation,Builtin,2,11417,0x1000c1780,1388,IterableToFixedArray
code-creation,Builtin,2,11417,0x1000c1d00,848,IterableToListWithSymbolLookup
code-creation,Builtin,2,11417,0x1000c2060,64,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,11417,0x1000c20c0,148,IterableToListMayPreserveHoles
code-creation,Builtin,2,11417,0x1000c2160,1192,IterableToFixedArrayForWasm
code-creation,Builtin,2,11417,0x1000c2620,1500,StringListFromIterable
code-creation,Builtin,2,11417,0x1000c2c00,1212,FindOrderedHashMapEntry
code-creation,Builtin,2,11417,0x1000c30c0,4368,MapConstructor
code-creation,Builtin,2,11417,0x1000c41e0,1976,MapPrototypeSet
code-creation,Builtin,2,11458,0x1000c49a0,1552,MapPrototypeDelete
code-creation,Builtin,2,11458,0x1000c4fc0,236,MapPrototypeGet
code-creation,Builtin,2,11458,0x1000c50c0,192,MapPrototypeHas
code-creation,Builtin,2,11458,0x1000c51a0,8,MapPrototypeClear
code-creation,Builtin,2,11458,0x1000c51c0,304,MapPrototypeEntries
code-creation,Builtin,2,11458,0x1000c5300,160,MapPrototypeGetSize
code-creation,Builtin,2,11458,0x1000c53c0,536,MapPrototypeForEach
code-creation,Builtin,2,11458,0x1000c55e0,304,MapPrototypeKeys
code-creation,Builtin,2,11458,0x1000c5720,304,MapPrototypeValues
code-creation,Builtin,2,11500,0x1000c5860,904,MapIteratorPrototypeNext
code-creation,Builtin,2,11500,0x1000c5c00,1136,MapIteratorToList
code-creation,Builtin,2,11500,0x1000c6080,8,NumberPrototypeToExponential
code-creation,Builtin,2,11500,0x1000c60a0,8,NumberPrototypeToFixed
code-creation,Builtin,2,11500,0x1000c60c0,8,NumberPrototypeToLocaleString
code-creation,Builtin,2,11500,0x1000c60e0,8,NumberPrototypeToPrecision
code-creation,Builtin,2,11500,0x1000c6100,324,SameValue
code-creation,Builtin,2,11500,0x1000c6260,184,SameValueNumbersOnly
code-creation,Builtin,2,11500,0x1000c6320,1456,Add_Baseline
code-creation,Builtin,2,11542,0x1000c68e0,992,AddSmi_Baseline
code-creation,Builtin,2,11542,0x1000c6ce0,1468,Subtract_Baseline
code-creation,Builtin,2,11542,0x1000c72a0,1068,SubtractSmi_Baseline
code-creation,Builtin,2,11542,0x1000c76e0,1564,Multiply_Baseline
code-creation,Builtin,2,11542,0x1000c7d00,1164,MultiplySmi_Baseline
code-creation,Builtin,2,11542,0x1000c81a0,1008,Divide_Baseline
code-creation,Builtin,2,11542,0x1000c85a0,908,DivideSmi_Baseline
code-creation,Builtin,2,11542,0x1000c8940,756,Modulus_Baseline
code-creation,Builtin,2,11583,0x1000c8c40,724,ModulusSmi_Baseline
code-creation,Builtin,2,11583,0x1000c8f20,784,Exponentiate_Baseline
code-creation,Builtin,2,11583,0x1000c9240,688,ExponentiateSmi_Baseline
code-creation,Builtin,2,11583,0x1000c9500,676,BitwiseAnd_Baseline
code-creation,Builtin,2,11583,0x1000c97c0,352,BitwiseAndSmi_Baseline
code-creation,Builtin,2,11583,0x1000c9940,676,BitwiseOr_Baseline
code-creation,Builtin,2,11583,0x1000c9c00,352,BitwiseOrSmi_Baseline
code-creation,Builtin,2,11583,0x1000c9d80,676,BitwiseXor_Baseline
code-creation,Builtin,2,11583,0x1000ca040,352,BitwiseXorSmi_Baseline
code-creation,Builtin,2,11625,0x1000ca1c0,676,ShiftLeft_Baseline
code-creation,Builtin,2,11625,0x1000ca480,376,ShiftLeftSmi_Baseline
code-creation,Builtin,2,11625,0x1000ca600,676,ShiftRight_Baseline
code-creation,Builtin,2,11625,0x1000ca8c0,364,ShiftRightSmi_Baseline
code-creation,Builtin,2,11625,0x1000caa40,804,ShiftRightLogical_Baseline
code-creation,Builtin,2,11625,0x1000cad80,632,ShiftRightLogicalSmi_Baseline
code-creation,Builtin,2,11625,0x1000cb000,1364,Add_WithFeedback
code-creation,Builtin,2,11625,0x1000cb560,1400,Subtract_WithFeedback
code-creation,Builtin,2,11625,0x1000cbae0,1488,Multiply_WithFeedback
code-creation,Builtin,2,11667,0x1000cc0c0,936,Divide_WithFeedback
code-creation,Builtin,2,11667,0x1000cc480,708,Modulus_WithFeedback
code-creation,Builtin,2,11667,0x1000cc760,736,Exponentiate_WithFeedback
code-creation,Builtin,2,11667,0x1000cca60,664,BitwiseAnd_WithFeedback
code-creation,Builtin,2,11667,0x1000ccd00,664,BitwiseOr_WithFeedback
code-creation,Builtin,2,11667,0x1000ccfa0,664,BitwiseXor_WithFeedback
code-creation,Builtin,2,11667,0x1000cd240,664,ShiftLeft_WithFeedback
code-creation,Builtin,2,11667,0x1000cd4e0,664,ShiftRight_WithFeedback
code-creation,Builtin,2,11667,0x1000cd780,788,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,11667,0x1000cdaa0,1716,Equal_Baseline
code-creation,Builtin,2,11708,0x1000ce160,788,StrictEqual_Baseline
code-creation,Builtin,2,11708,0x1000ce480,1236,LessThan_Baseline
code-creation,Builtin,2,11708,0x1000ce960,1236,GreaterThan_Baseline
code-creation,Builtin,2,11708,0x1000cee40,1236,LessThanOrEqual_Baseline
code-creation,Builtin,2,11708,0x1000cf320,1236,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,11708,0x1000cf800,1732,Equal_WithFeedback
code-creation,Builtin,2,11708,0x1000cfee0,808,StrictEqual_WithFeedback
code-creation,Builtin,2,11708,0x1000d0220,1208,LessThan_WithFeedback
code-creation,Builtin,2,11708,0x1000d06e0,1208,GreaterThan_WithFeedback
code-creation,Builtin,2,11708,0x1000d0ba0,1208,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,11750,0x1000d1060,1208,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,11750,0x1000d1520,316,BitwiseNot_Baseline
code-creation,Builtin,2,11750,0x1000d1660,472,Decrement_Baseline
code-creation,Builtin,2,11750,0x1000d1840,472,Increment_Baseline
code-creation,Builtin,2,11750,0x1000d1a20,488,Negate_Baseline
code-creation,Builtin,2,11750,0x1000d1c20,292,BitwiseNot_WithFeedback
code-creation,Builtin,2,11750,0x1000d1d60,448,Decrement_WithFeedback
code-creation,Builtin,2,11750,0x1000d1f40,448,Increment_WithFeedback
code-creation,Builtin,2,11750,0x1000d2120,464,Negate_WithFeedback
code-creation,Builtin,2,11750,0x1000d2300,292,ObjectAssign
code-creation,Builtin,2,11792,0x1000d2440,856,ObjectCreate
code-creation,Builtin,2,11792,0x1000d27a0,8,ObjectDefineGetter
code-creation,Builtin,2,11792,0x1000d27c0,8,ObjectDefineProperties
code-creation,Builtin,2,11792,0x1000d27e0,8,ObjectDefineProperty
code-creation,Builtin,2,11792,0x1000d2800,8,ObjectDefineSetter
code-creation,Builtin,2,11792,0x1000d2820,1536,ObjectEntries
code-creation,Builtin,2,11792,0x1000d2e40,8,ObjectFreeze
code-creation,Builtin,2,11792,0x1000d2e60,6768,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,11833,0x1000d48e0,8,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,11833,0x1000d4900,636,ObjectGetOwnPropertyNames
code-creation,Builtin,2,11833,0x1000d4b80,8,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,11833,0x1000d4ba0,208,ObjectHasOwn
code-creation,Builtin,2,11833,0x1000d4c80,388,ObjectIs
code-creation,Builtin,2,11833,0x1000d4e20,8,ObjectIsFrozen
code-creation,Builtin,2,11833,0x1000d4e40,8,ObjectIsSealed
code-creation,Builtin,2,11833,0x1000d4e60,576,ObjectKeys
code-creation,Builtin,2,11833,0x1000d50c0,8,ObjectLookupGetter
code-creation,Builtin,2,11833,0x1000d50e0,8,ObjectLookupSetter
code-creation,Builtin,2,11875,0x1000d5100,2860,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,11875,0x1000d5c40,268,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,11875,0x1000d5d60,8,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,11875,0x1000d5d80,8,ObjectPrototypeGetProto
code-creation,Builtin,2,11875,0x1000d5da0,8,ObjectPrototypeSetProto
code-creation,Builtin,2,11875,0x1000d5dc0,8,ObjectSeal
code-creation,Builtin,2,11875,0x1000d5de0,1168,ObjectToString
code-creation,Builtin,2,11875,0x1000d6280,1276,ObjectValues
code-creation,Builtin,2,11875,0x1000d6780,412,OrdinaryHasInstance
code-creation,Builtin,2,11875,0x1000d6920,432,InstanceOf
code-creation,Builtin,2,11917,0x1000d6ae0,668,InstanceOf_WithFeedback
code-creation,Builtin,2,11917,0x1000d6d80,680,InstanceOf_Baseline
code-creation,Builtin,2,11917,0x1000d7040,304,ForInEnumerate
code-creation,Builtin,2,11917,0x1000d7180,144,ForInPrepare
code-creation,Builtin,2,11917,0x1000d7220,3556,ForInFilter
code-creation,Builtin,2,11917,0x1000d8020,68,ReflectApply
code-creation,Builtin,2,11917,0x1000d8080,72,ReflectConstruct
code-creation,Builtin,2,11917,0x1000d80e0,8,ReflectDefineProperty
code-creation,Builtin,2,11917,0x1000d8100,8,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,11917,0x1000d8120,8,ReflectOwnKeys
code-creation,Builtin,2,11958,0x1000d8140,8,ReflectSet
code-creation,Builtin,2,11958,0x1000d8160,8,RegExpCapture1Getter
code-creation,Builtin,2,11958,0x1000d8180,8,RegExpCapture2Getter
code-creation,Builtin,2,11958,0x1000d81a0,8,RegExpCapture3Getter
code-creation,Builtin,2,11958,0x1000d81c0,8,RegExpCapture4Getter
code-creation,Builtin,2,11958,0x1000d81e0,8,RegExpCapture5Getter
code-creation,Builtin,2,11958,0x1000d8200,8,RegExpCapture6Getter
code-creation,Builtin,2,11958,0x1000d8220,8,RegExpCapture7Getter
code-creation,Builtin,2,11958,0x1000d8240,8,RegExpCapture8Getter
code-creation,Builtin,2,11958,0x1000d8260,8,RegExpCapture9Getter
code-creation,Builtin,2,11958,0x1000d8280,2144,RegExpConstructor
code-creation,Builtin,2,12000,0x1000d8b00,8,RegExpInputGetter
code-creation,Builtin,2,12000,0x1000d8b20,8,RegExpInputSetter
code-creation,Builtin,2,12000,0x1000d8b40,8,RegExpLastMatchGetter
code-creation,Builtin,2,12000,0x1000d8b60,8,RegExpLastParenGetter
code-creation,Builtin,2,12000,0x1000d8b80,8,RegExpLeftContextGetter
code-creation,Builtin,2,12000,0x1000d8ba0,848,RegExpPrototypeCompile
code-creation,Builtin,2,12000,0x1000d8f00,8,RegExpPrototypeToString
code-creation,Builtin,2,12000,0x1000d8f20,8,RegExpRightContextGetter
code-creation,Builtin,2,12000,0x1000d8f40,248,RegExpExecAtom
code-creation,Builtin,2,12000,0x1000d9040,1004,RegExpExecInternal
code-creation,Builtin,2,12042,0x1000d9440,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,12042,0x1000d9460,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,12042,0x1000d9480,1192,FindOrderedHashSetEntry
code-creation,Builtin,2,12042,0x1000d9940,2988,SetConstructor
code-creation,Builtin,2,12042,0x1000da500,192,SetPrototypeHas
code-creation,Builtin,2,12042,0x1000da5e0,1776,SetPrototypeAdd
code-creation,Builtin,2,12042,0x1000dace0,1504,SetPrototypeDelete
code-creation,Builtin,2,12042,0x1000db2e0,8,SetPrototypeClear
code-creation,Builtin,2,12042,0x1000db300,304,SetPrototypeEntries
code-creation,Builtin,2,12042,0x1000db440,160,SetPrototypeGetSize
code-creation,Builtin,2,12083,0x1000db500,500,SetPrototypeForEach
code-creation,Builtin,2,12083,0x1000db700,304,SetPrototypeValues
code-creation,Builtin,2,12083,0x1000db840,840,SetIteratorPrototypeNext
code-creation,Builtin,2,12083,0x1000dbba0,1088,SetOrSetIteratorToList
code-creation,Builtin,2,12083,0x1000dc000,8,ShadowRealmConstructor
code-creation,Builtin,2,12083,0x1000dc020,664,ShadowRealmGetWrappedValue
code-creation,Builtin,2,12083,0x1000dc2c0,8,ShadowRealmPrototypeEvaluate
code-creation,Builtin,2,12125,0x1000dc2e0,1388,ShadowRealmPrototypeImportValue
code-creation,Builtin,2,12125,0x1000dc860,276,ShadowRealmImportValueFulfilled
code-creation,Builtin,2,12125,0x1000dc980,88,ShadowRealmImportValueRejected
code-creation,Builtin,2,12125,0x1000dc9e0,8,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,12125,0x1000dca00,8,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,12125,0x1000dca20,8,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,12125,0x1000dca40,2100,AtomicsLoad
code-creation,Builtin,2,12125,0x1000dd280,2172,AtomicsStore
code-creation,Builtin,2,12125,0x1000ddb00,2888,AtomicsExchange
code-creation,Builtin,2,12167,0x1000de660,3160,AtomicsCompareExchange
code-creation,Builtin,2,12167,0x1000df2c0,2788,AtomicsAdd
code-creation,Builtin,2,12167,0x1000dfdc0,2788,AtomicsSub
code-creation,Builtin,2,12167,0x1000e08c0,2788,AtomicsAnd
code-creation,Builtin,2,12167,0x1000e13c0,2788,AtomicsOr
code-creation,Builtin,2,12167,0x1000e1ec0,2788,AtomicsXor
code-creation,Builtin,2,12167,0x1000e29c0,8,AtomicsNotify
code-creation,Builtin,2,12167,0x1000e29e0,8,AtomicsIsLockFree
code-creation,Builtin,2,12167,0x1000e2a00,8,AtomicsWait
code-creation,Builtin,2,12208,0x1000e2a20,8,AtomicsWaitAsync
code-creation,Builtin,2,12208,0x1000e2a40,8,StringFromCodePoint
code-creation,Builtin,2,12208,0x1000e2a60,1244,StringFromCharCode
code-creation,Builtin,2,12208,0x1000e2f40,8,StringPrototypeLastIndexOf
code-creation,Builtin,2,12208,0x1000e2f60,4296,StringPrototypeMatchAll
code-creation,Builtin,2,12208,0x1000e4040,8,StringPrototypeLocaleCompare
code-creation,Builtin,2,12208,0x1000e4060,1248,StringPrototypeReplace
code-creation,Builtin,2,12208,0x1000e4560,2660,StringPrototypeSplit
code-creation,Builtin,2,12208,0x1000e4fe0,8,StringRaw
code-creation,Builtin,2,12208,0x1000e5000,8,SymbolConstructor
code-creation,Builtin,2,12208,0x1000e5020,8,SymbolFor
code-creation,Builtin,2,12250,0x1000e5040,8,SymbolKeyFor
code-creation,Builtin,2,12250,0x1000e5060,96,TypedArrayBaseConstructor
code-creation,Builtin,2,12250,0x1000e50e0,320,TypedArrayConstructor
code-creation,Builtin,2,12250,0x1000e5240,8,TypedArrayPrototypeBuffer
code-creation,Builtin,2,12250,0x1000e5260,892,TypedArrayPrototypeByteLength
code-creation,Builtin,2,12250,0x1000e55e0,340,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,12250,0x1000e5740,600,TypedArrayPrototypeLength
code-creation,Builtin,2,12250,0x1000e59a0,8,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,12292,0x1000e59c0,8,TypedArrayPrototypeFill
code-creation,Builtin,2,12292,0x1000e59e0,8,TypedArrayPrototypeIncludes
code-creation,Builtin,2,12292,0x1000e5a00,8,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,12292,0x1000e5a20,8,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,12292,0x1000e5a40,8,TypedArrayPrototypeReverse
code-creation,Builtin,2,12292,0x1000e5a60,452,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,12292,0x1000e5c40,21948,TypedArrayPrototypeMap
code-creation,Builtin,2,12292,0x1000eb200,1004,GenericJSToWasmWrapper
code-creation,Builtin,2,12292,0x1000eb600,1260,WasmReturnPromiseOnSuspend
code-creation,Builtin,2,12333,0x1000ebb00,184,WasmSuspend
code-creation,Builtin,2,12333,0x1000ebbc0,316,WasmResume
code-creation,Builtin,2,12333,0x1000ebd00,324,WasmReject
code-creation,Builtin,2,12333,0x1000ebe60,136,WasmCompileLazy
code-creation,Builtin,2,12333,0x1000ebf00,260,WasmDebugBreak
code-creation,Builtin,2,12333,0x1000ec020,4,WasmOnStackReplace
code-creation,Builtin,2,12333,0x1000ec040,164,WasmFloat32ToNumber
code-creation,Builtin,2,12333,0x1000ec100,168,WasmFloat64ToNumber
code-creation,Builtin,2,12333,0x1000ec1c0,8,WasmI32AtomicWait32
code-creation,Builtin,2,12375,0x1000ec1e0,8,WasmI64AtomicWait32
code-creation,Builtin,2,12375,0x1000ec200,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,12375,0x1000ec220,4576,WeakMapConstructor
code-creation,Builtin,2,12375,0x1000ed420,292,WeakMapLookupHashIndex
code-creation,Builtin,2,12375,0x1000ed560,244,WeakMapGet
code-creation,Builtin,2,12375,0x1000ed660,204,WeakMapPrototypeHas
code-creation,Builtin,2,12375,0x1000ed740,280,WeakMapPrototypeSet
code-creation,Builtin,2,12375,0x1000ed860,192,WeakMapPrototypeDelete
code-creation,Builtin,2,12375,0x1000ed940,3152,WeakSetConstructor
code-creation,Builtin,2,12417,0x1000ee5a0,204,WeakSetPrototypeHas
code-creation,Builtin,2,12417,0x1000ee680,280,WeakSetPrototypeAdd
code-creation,Builtin,2,12417,0x1000ee7a0,192,WeakSetPrototypeDelete
code-creation,Builtin,2,12417,0x1000ee880,500,WeakCollectionDelete
code-creation,Builtin,2,12417,0x1000eea80,776,WeakCollectionSet
code-creation,Builtin,2,12417,0x1000eeda0,8,SharedStructTypeConstructor
code-creation,Builtin,2,12417,0x1000eedc0,8,SharedStructConstructor
code-creation,Builtin,2,12417,0x1000eede0,8,SharedArrayConstructor
code-creation,Builtin,2,12417,0x1000eee00,8,AtomicsMutexConstructor
code-creation,Builtin,2,12417,0x1000eee20,8,AtomicsMutexLock
code-creation,Builtin,2,12458,0x1000eee40,8,AtomicsMutexTryLock
code-creation,Builtin,2,12458,0x1000eee60,8,AtomicsConditionConstructor
code-creation,Builtin,2,12458,0x1000eee80,8,AtomicsConditionWait
code-creation,Builtin,2,12458,0x1000eeea0,8,AtomicsConditionNotify
code-creation,Builtin,2,12458,0x1000eeec0,324,AsyncGeneratorResolve
code-creation,Builtin,2,12458,0x1000ef020,112,AsyncGeneratorReject
code-creation,Builtin,2,12458,0x1000ef0a0,1616,AsyncGeneratorYieldWithAwait
code-creation,Builtin,2,12458,0x1000ef700,1900,AsyncGeneratorReturn
code-creation,Builtin,2,12458,0x1000efe80,308,AsyncGeneratorResumeNext
code-creation,Builtin,2,12500,0x1000effc0,8,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,12500,0x1000effe0,1004,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,12500,0x1000f03e0,1000,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,12500,0x1000f07e0,1000,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,12500,0x1000f0be0,1592,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,12500,0x1000f1220,1592,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,12500,0x1000f1860,188,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,12500,0x1000f1920,188,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,12500,0x1000f19e0,128,AsyncGeneratorYieldWithAwaitResolveClosure
code-creation,Builtin,2,12542,0x1000f1a80,128,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,12542,0x1000f1b20,124,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,12542,0x1000f1ba0,192,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,12542,0x1000f1c80,1704,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,12542,0x1000f2340,1808,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,12542,0x1000f2a60,1840,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,12542,0x1000f31a0,128,AsyncIteratorValueUnwrap
code-creation,Builtin,2,12542,0x1000f3240,304,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,12542,0x1000f3380,304,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,12583,0x1000f34c0,284,CEntry_Return1_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,12583,0x1000f35e0,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,12583,0x1000f3780,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,12583,0x1000f3920,304,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,12583,0x1000f3a60,304,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,12583,0x1000f3ba0,284,CEntry_Return2_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,12583,0x1000f3cc0,400,CEntry_Return2_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,12625,0x1000f3e60,400,CEntry_Return2_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,12625,0x1000f4000,16,DirectCEntry
code-creation,Builtin,2,12625,0x1000f4020,1216,StringAdd_CheckNone
code-creation,Builtin,2,12625,0x1000f4500,2516,SubString
code-creation,Builtin,2,12625,0x1000f4ee0,80,DoubleToI
code-creation,Builtin,2,12625,0x1000f4f40,3260,GetProperty
code-creation,Builtin,2,12625,0x1000f5c00,3400,GetPropertyWithReceiver
code-creation,Builtin,2,12625,0x1000f6960,16288,SetProperty
code-creation,Builtin,2,12667,0x1000fa920,13456,CreateDataProperty
code-creation,Builtin,2,12667,0x1000fddc0,4,MemCopyUint8Uint8
code-creation,Builtin,2,12667,0x1000fdde0,4,MemMove
code-creation,Builtin,2,12667,0x1000fde00,204,FindNonDefaultConstructorOrConstruct
code-creation,Builtin,2,12667,0x1000fdee0,8,IsTraceCategoryEnabled
code-creation,Builtin,2,12667,0x1000fdf00,8,Trace
code-creation,Builtin,2,12667,0x1000fdf20,8,FinalizationRegistryUnregister
code-creation,Builtin,2,12667,0x1000fdf40,440,AsyncModuleEvaluate
code-creation,Builtin,2,12667,0x1000fe100,8,CallAsyncModuleFulfilled
code-creation,Builtin,2,12667,0x1000fe120,8,CallAsyncModuleRejected
code-creation,Builtin,2,12708,0x1000fe140,8,TemporalNowTimeZone
code-creation,Builtin,2,12708,0x1000fe160,8,TemporalNowInstant
code-creation,Builtin,2,12708,0x1000fe180,8,TemporalNowPlainDateTime
code-creation,Builtin,2,12708,0x1000fe1a0,8,TemporalNowPlainDateTimeISO
code-creation,Builtin,2,12708,0x1000fe1c0,8,TemporalNowZonedDateTime
code-creation,Builtin,2,12708,0x1000fe1e0,8,TemporalNowZonedDateTimeISO
code-creation,Builtin,2,12708,0x1000fe200,8,TemporalNowPlainDate
code-creation,Builtin,2,12708,0x1000fe220,8,TemporalNowPlainDateISO
code-creation,Builtin,2,12708,0x1000fe240,8,TemporalNowPlainTimeISO
code-creation,Builtin,2,12708,0x1000fe260,8,TemporalPlainDateConstructor
code-creation,Builtin,2,12750,0x1000fe280,8,TemporalPlainDateFrom
code-creation,Builtin,2,12750,0x1000fe2a0,8,TemporalPlainDateCompare
code-creation,Builtin,2,12750,0x1000fe2c0,8,TemporalPlainDatePrototypeCalendar
code-creation,Builtin,2,12750,0x1000fe2e0,8,TemporalPlainDatePrototypeYear
code-creation,Builtin,2,12750,0x1000fe300,8,TemporalPlainDatePrototypeMonth
code-creation,Builtin,2,12750,0x1000fe320,8,TemporalPlainDatePrototypeMonthCode
code-creation,Builtin,2,12750,0x1000fe340,8,TemporalPlainDatePrototypeDay
code-creation,Builtin,2,12750,0x1000fe360,8,TemporalPlainDatePrototypeDayOfWeek
code-creation,Builtin,2,12750,0x1000fe380,8,TemporalPlainDatePrototypeDayOfYear
code-creation,Builtin,2,12792,0x1000fe3a0,8,TemporalPlainDatePrototypeWeekOfYear
code-creation,Builtin,2,12792,0x1000fe3c0,8,TemporalPlainDatePrototypeDaysInWeek
code-creation,Builtin,2,12792,0x1000fe3e0,8,TemporalPlainDatePrototypeDaysInMonth
code-creation,Builtin,2,12792,0x1000fe400,8,TemporalPlainDatePrototypeDaysInYear
code-creation,Builtin,2,12792,0x1000fe420,8,TemporalPlainDatePrototypeMonthsInYear
code-creation,Builtin,2,12792,0x1000fe440,8,TemporalPlainDatePrototypeInLeapYear
code-creation,Builtin,2,12792,0x1000fe460,8,TemporalPlainDatePrototypeToPlainYearMonth
code-creation,Builtin,2,12792,0x1000fe480,8,TemporalPlainDatePrototypeToPlainMonthDay
code-creation,Builtin,2,12792,0x1000fe4a0,8,TemporalPlainDatePrototypeGetISOFields
code-creation,Builtin,2,12833,0x1000fe4c0,8,TemporalPlainDatePrototypeAdd
code-creation,Builtin,2,12833,0x1000fe4e0,8,TemporalPlainDatePrototypeSubtract
code-creation,Builtin,2,12833,0x1000fe500,8,TemporalPlainDatePrototypeWith
code-creation,Builtin,2,12833,0x1000fe520,8,TemporalPlainDatePrototypeWithCalendar
code-creation,Builtin,2,12833,0x1000fe540,8,TemporalPlainDatePrototypeUntil
code-creation,Builtin,2,12833,0x1000fe560,8,TemporalPlainDatePrototypeSince
code-creation,Builtin,2,12833,0x1000fe580,8,TemporalPlainDatePrototypeEquals
code-creation,Builtin,2,12833,0x1000fe5a0,8,TemporalPlainDatePrototypeToPlainDateTime
code-creation,Builtin,2,12833,0x1000fe5c0,8,TemporalPlainDatePrototypeToZonedDateTime
code-creation,Builtin,2,12875,0x1000fe5e0,8,TemporalPlainDatePrototypeToString
code-creation,Builtin,2,12875,0x1000fe600,8,TemporalPlainDatePrototypeToJSON
code-creation,Builtin,2,12875,0x1000fe620,8,TemporalPlainDatePrototypeToLocaleString
code-creation,Builtin,2,12875,0x1000fe640,8,TemporalPlainDatePrototypeValueOf
code-creation,Builtin,2,12875,0x1000fe660,8,TemporalPlainTimeConstructor
code-creation,Builtin,2,12875,0x1000fe680,8,TemporalPlainTimeFrom
code-creation,Builtin,2,12875,0x1000fe6a0,8,TemporalPlainTimeCompare
code-creation,Builtin,2,12875,0x1000fe6c0,8,TemporalPlainTimePrototypeCalendar
code-creation,Builtin,2,12875,0x1000fe6e0,8,TemporalPlainTimePrototypeHour
code-creation,Builtin,2,12917,0x1000fe700,8,TemporalPlainTimePrototypeMinute
code-creation,Builtin,2,12917,0x1000fe720,8,TemporalPlainTimePrototypeSecond
code-creation,Builtin,2,12917,0x1000fe740,8,TemporalPlainTimePrototypeMillisecond
code-creation,Builtin,2,12917,0x1000fe760,8,TemporalPlainTimePrototypeMicrosecond
code-creation,Builtin,2,12917,0x1000fe780,8,TemporalPlainTimePrototypeNanosecond
code-creation,Builtin,2,12917,0x1000fe7a0,8,TemporalPlainTimePrototypeAdd
code-creation,Builtin,2,12917,0x1000fe7c0,8,TemporalPlainTimePrototypeSubtract
code-creation,Builtin,2,12917,0x1000fe7e0,8,TemporalPlainTimePrototypeWith
code-creation,Builtin,2,12917,0x1000fe800,8,TemporalPlainTimePrototypeUntil
code-creation,Builtin,2,12958,0x1000fe820,8,TemporalPlainTimePrototypeSince
code-creation,Builtin,2,12958,0x1000fe840,8,TemporalPlainTimePrototypeRound
code-creation,Builtin,2,12958,0x1000fe860,8,TemporalPlainTimePrototypeEquals
code-creation,Builtin,2,12958,0x1000fe880,8,TemporalPlainTimePrototypeToPlainDateTime
code-creation,Builtin,2,12958,0x1000fe8a0,8,TemporalPlainTimePrototypeToZonedDateTime
code-creation,Builtin,2,12958,0x1000fe8c0,8,TemporalPlainTimePrototypeGetISOFields
code-creation,Builtin,2,12958,0x1000fe8e0,8,TemporalPlainTimePrototypeToString
code-creation,Builtin,2,12958,0x1000fe900,8,TemporalPlainTimePrototypeToJSON
code-creation,Builtin,2,12958,0x1000fe920,8,TemporalPlainTimePrototypeToLocaleString
code-creation,Builtin,2,13000,0x1000fe940,8,TemporalPlainTimePrototypeValueOf
code-creation,Builtin,2,13000,0x1000fe960,8,TemporalPlainDateTimeConstructor
code-creation,Builtin,2,13000,0x1000fe980,8,TemporalPlainDateTimeFrom
code-creation,Builtin,2,13000,0x1000fe9a0,8,TemporalPlainDateTimeCompare
code-creation,Builtin,2,13000,0x1000fe9c0,8,TemporalPlainDateTimePrototypeCalendar
code-creation,Builtin,2,13000,0x1000fe9e0,8,TemporalPlainDateTimePrototypeYear
code-creation,Builtin,2,13000,0x1000fea00,8,TemporalPlainDateTimePrototypeMonth
code-creation,Builtin,2,13000,0x1000fea20,8,TemporalPlainDateTimePrototypeMonthCode
code-creation,Builtin,2,13000,0x1000fea40,8,TemporalPlainDateTimePrototypeDay
code-creation,Builtin,2,13042,0x1000fea60,8,TemporalPlainDateTimePrototypeHour
code-creation,Builtin,2,13042,0x1000fea80,8,TemporalPlainDateTimePrototypeMinute
code-creation,Builtin,2,13042,0x1000feaa0,8,TemporalPlainDateTimePrototypeSecond
code-creation,Builtin,2,13042,0x1000feac0,8,TemporalPlainDateTimePrototypeMillisecond
code-creation,Builtin,2,13042,0x1000feae0,8,TemporalPlainDateTimePrototypeMicrosecond
code-creation,Builtin,2,13042,0x1000feb00,8,TemporalPlainDateTimePrototypeNanosecond
code-creation,Builtin,2,13042,0x1000feb20,8,TemporalPlainDateTimePrototypeDayOfWeek
code-creation,Builtin,2,13042,0x1000feb40,8,TemporalPlainDateTimePrototypeDayOfYear
code-creation,Builtin,2,13083,0x1000feb60,8,TemporalPlainDateTimePrototypeWeekOfYear
code-creation,Builtin,2,13083,0x1000feb80,8,TemporalPlainDateTimePrototypeDaysInWeek
code-creation,Builtin,2,13083,0x1000feba0,8,TemporalPlainDateTimePrototypeDaysInMonth
code-creation,Builtin,2,13083,0x1000febc0,8,TemporalPlainDateTimePrototypeDaysInYear
code-creation,Builtin,2,13083,0x1000febe0,8,TemporalPlainDateTimePrototypeMonthsInYear
code-creation,Builtin,2,13083,0x1000fec00,8,TemporalPlainDateTimePrototypeInLeapYear
code-creation,Builtin,2,13083,0x1000fec20,8,TemporalPlainDateTimePrototypeWith
code-creation,Builtin,2,13083,0x1000fec40,8,TemporalPlainDateTimePrototypeWithPlainTime
code-creation,Builtin,2,13083,0x1000fec60,8,TemporalPlainDateTimePrototypeWithPlainDate
code-creation,Builtin,2,13125,0x1000fec80,8,TemporalPlainDateTimePrototypeWithCalendar
code-creation,Builtin,2,13125,0x1000feca0,8,TemporalPlainDateTimePrototypeAdd
code-creation,Builtin,2,13125,0x1000fecc0,8,TemporalPlainDateTimePrototypeSubtract
code-creation,Builtin,2,13125,0x1000fece0,8,TemporalPlainDateTimePrototypeUntil
code-creation,Builtin,2,13125,0x1000fed00,8,TemporalPlainDateTimePrototypeSince
code-creation,Builtin,2,13125,0x1000fed20,8,TemporalPlainDateTimePrototypeRound
code-creation,Builtin,2,13125,0x1000fed40,8,TemporalPlainDateTimePrototypeEquals
code-creation,Builtin,2,13167,0x1000fed60,8,TemporalPlainDateTimePrototypeToString
code-creation,Builtin,2,13167,0x1000fed80,8,TemporalPlainDateTimePrototypeToJSON
code-creation,Builtin,2,13167,0x1000feda0,8,TemporalPlainDateTimePrototypeToLocaleString
code-creation,Builtin,2,13167,0x1000fedc0,8,TemporalPlainDateTimePrototypeValueOf
code-creation,Builtin,2,13167,0x1000fede0,8,TemporalPlainDateTimePrototypeToZonedDateTime
code-creation,Builtin,2,13167,0x1000fee00,8,TemporalPlainDateTimePrototypeToPlainDate
code-creation,Builtin,2,13167,0x1000fee20,8,TemporalPlainDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,13167,0x1000fee40,8,TemporalPlainDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,13208,0x1000fee60,8,TemporalPlainDateTimePrototypeToPlainTime
code-creation,Builtin,2,13208,0x1000fee80,8,TemporalPlainDateTimePrototypeGetISOFields
code-creation,Builtin,2,13208,0x1000feea0,8,TemporalZonedDateTimeConstructor
code-creation,Builtin,2,13208,0x1000feec0,8,TemporalZonedDateTimeFrom
code-creation,Builtin,2,13208,0x1000feee0,8,TemporalZonedDateTimeCompare
code-creation,Builtin,2,13208,0x1000fef00,8,TemporalZonedDateTimePrototypeCalendar
code-creation,Builtin,2,13208,0x1000fef20,8,TemporalZonedDateTimePrototypeTimeZone
code-creation,Builtin,2,13208,0x1000fef40,8,TemporalZonedDateTimePrototypeYear
code-creation,Builtin,2,13250,0x1000fef60,8,TemporalZonedDateTimePrototypeMonth
code-creation,Builtin,2,13250,0x1000fef80,8,TemporalZonedDateTimePrototypeMonthCode
code-creation,Builtin,2,13250,0x1000fefa0,8,TemporalZonedDateTimePrototypeDay
code-creation,Builtin,2,13250,0x1000fefc0,8,TemporalZonedDateTimePrototypeHour
code-creation,Builtin,2,13250,0x1000fefe0,8,TemporalZonedDateTimePrototypeMinute
code-creation,Builtin,2,13250,0x1000ff000,8,TemporalZonedDateTimePrototypeSecond
code-creation,Builtin,2,13250,0x1000ff020,8,TemporalZonedDateTimePrototypeMillisecond
code-creation,Builtin,2,13250,0x1000ff040,8,TemporalZonedDateTimePrototypeMicrosecond
code-creation,Builtin,2,13292,0x1000ff060,8,TemporalZonedDateTimePrototypeNanosecond
code-creation,Builtin,2,13292,0x1000ff080,8,TemporalZonedDateTimePrototypeEpochSeconds
code-creation,Builtin,2,13292,0x1000ff0a0,8,TemporalZonedDateTimePrototypeEpochMilliseconds
code-creation,Builtin,2,13292,0x1000ff0c0,8,TemporalZonedDateTimePrototypeEpochMicroseconds
code-creation,Builtin,2,13292,0x1000ff0e0,8,TemporalZonedDateTimePrototypeEpochNanoseconds
code-creation,Builtin,2,13292,0x1000ff100,8,TemporalZonedDateTimePrototypeDayOfWeek
code-creation,Builtin,2,13292,0x1000ff120,8,TemporalZonedDateTimePrototypeDayOfYear
code-creation,Builtin,2,13292,0x1000ff140,8,TemporalZonedDateTimePrototypeWeekOfYear
code-creation,Builtin,2,13292,0x1000ff160,8,TemporalZonedDateTimePrototypeHoursInDay
code-creation,Builtin,2,13333,0x1000ff180,8,TemporalZonedDateTimePrototypeDaysInWeek
code-creation,Builtin,2,13333,0x1000ff1a0,8,TemporalZonedDateTimePrototypeDaysInMonth
code-creation,Builtin,2,13333,0x1000ff1c0,8,TemporalZonedDateTimePrototypeDaysInYear
code-creation,Builtin,2,13333,0x1000ff1e0,8,TemporalZonedDateTimePrototypeMonthsInYear
code-creation,Builtin,2,13333,0x1000ff200,8,TemporalZonedDateTimePrototypeInLeapYear
code-creation,Builtin,2,13333,0x1000ff220,8,TemporalZonedDateTimePrototypeOffsetNanoseconds
code-creation,Builtin,2,13333,0x1000ff240,8,TemporalZonedDateTimePrototypeOffset
code-creation,Builtin,2,13333,0x1000ff260,8,TemporalZonedDateTimePrototypeWith
code-creation,Builtin,2,13333,0x1000ff280,8,TemporalZonedDateTimePrototypeWithPlainTime
code-creation,Builtin,2,13375,0x1000ff2a0,8,TemporalZonedDateTimePrototypeWithPlainDate
code-creation,Builtin,2,13375,0x1000ff2c0,8,TemporalZonedDateTimePrototypeWithTimeZone
code-creation,Builtin,2,13375,0x1000ff2e0,8,TemporalZonedDateTimePrototypeWithCalendar
code-creation,Builtin,2,13375,0x1000ff300,8,TemporalZonedDateTimePrototypeAdd
code-creation,Builtin,2,13375,0x1000ff320,8,TemporalZonedDateTimePrototypeSubtract
code-creation,Builtin,2,13375,0x1000ff340,8,TemporalZonedDateTimePrototypeUntil
code-creation,Builtin,2,13375,0x1000ff360,8,TemporalZonedDateTimePrototypeSince
code-creation,Builtin,2,13375,0x1000ff380,8,TemporalZonedDateTimePrototypeRound
code-creation,Builtin,2,13417,0x1000ff3a0,8,TemporalZonedDateTimePrototypeEquals
code-creation,Builtin,2,13417,0x1000ff3c0,8,TemporalZonedDateTimePrototypeToString
code-creation,Builtin,2,13417,0x1000ff3e0,8,TemporalZonedDateTimePrototypeToJSON
code-creation,Builtin,2,13417,0x1000ff400,8,TemporalZonedDateTimePrototypeToLocaleString
code-creation,Builtin,2,13417,0x1000ff420,8,TemporalZonedDateTimePrototypeValueOf
code-creation,Builtin,2,13417,0x1000ff440,8,TemporalZonedDateTimePrototypeStartOfDay
code-creation,Builtin,2,13417,0x1000ff460,8,TemporalZonedDateTimePrototypeToInstant
code-creation,Builtin,2,13417,0x1000ff480,8,TemporalZonedDateTimePrototypeToPlainDate
code-creation,Builtin,2,13458,0x1000ff4a0,8,TemporalZonedDateTimePrototypeToPlainTime
code-creation,Builtin,2,13458,0x1000ff4c0,8,TemporalZonedDateTimePrototypeToPlainDateTime
code-creation,Builtin,2,13458,0x1000ff4e0,8,TemporalZonedDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,13458,0x1000ff500,8,TemporalZonedDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,13458,0x1000ff520,8,TemporalZonedDateTimePrototypeGetISOFields
code-creation,Builtin,2,13458,0x1000ff540,8,TemporalDurationConstructor
code-creation,Builtin,2,13458,0x1000ff560,8,TemporalDurationFrom
code-creation,Builtin,2,13458,0x1000ff580,8,TemporalDurationCompare
code-creation,Builtin,2,13500,0x1000ff5a0,8,TemporalDurationPrototypeYears
code-creation,Builtin,2,13500,0x1000ff5c0,8,TemporalDurationPrototypeMonths
code-creation,Builtin,2,13500,0x1000ff5e0,8,TemporalDurationPrototypeWeeks
code-creation,Builtin,2,13500,0x1000ff600,8,TemporalDurationPrototypeDays
code-creation,Builtin,2,13500,0x1000ff620,8,TemporalDurationPrototypeHours
code-creation,Builtin,2,13500,0x1000ff640,8,TemporalDurationPrototypeMinutes
code-creation,Builtin,2,13500,0x1000ff660,8,TemporalDurationPrototypeSeconds
code-creation,Builtin,2,13500,0x1000ff680,8,TemporalDurationPrototypeMilliseconds
code-creation,Builtin,2,13542,0x1000ff6a0,8,TemporalDurationPrototypeMicroseconds
code-creation,Builtin,2,13542,0x1000ff6c0,8,TemporalDurationPrototypeNanoseconds
code-creation,Builtin,2,13542,0x1000ff6e0,8,TemporalDurationPrototypeSign
code-creation,Builtin,2,13542,0x1000ff700,8,TemporalDurationPrototypeBlank
code-creation,Builtin,2,13542,0x1000ff720,8,TemporalDurationPrototypeWith
code-creation,Builtin,2,13542,0x1000ff740,8,TemporalDurationPrototypeNegated
code-creation,Builtin,2,13542,0x1000ff760,8,TemporalDurationPrototypeAbs
code-creation,Builtin,2,13542,0x1000ff780,8,TemporalDurationPrototypeAdd
code-creation,Builtin,2,13542,0x1000ff7a0,8,TemporalDurationPrototypeSubtract
code-creation,Builtin,2,13583,0x1000ff7c0,8,TemporalDurationPrototypeRound
code-creation,Builtin,2,13583,0x1000ff7e0,8,TemporalDurationPrototypeTotal
code-creation,Builtin,2,13583,0x1000ff800,8,TemporalDurationPrototypeToString
code-creation,Builtin,2,13583,0x1000ff820,8,TemporalDurationPrototypeToJSON
code-creation,Builtin,2,13583,0x1000ff840,8,TemporalDurationPrototypeToLocaleString
code-creation,Builtin,2,13583,0x1000ff860,8,TemporalDurationPrototypeValueOf
code-creation,Builtin,2,13583,0x1000ff880,8,TemporalInstantConstructor
code-creation,Builtin,2,13583,0x1000ff8a0,8,TemporalInstantFrom
code-creation,Builtin,2,13583,0x1000ff8c0,8,TemporalInstantFromEpochSeconds
code-creation,Builtin,2,13625,0x1000ff8e0,8,TemporalInstantFromEpochMilliseconds
code-creation,Builtin,2,13625,0x1000ff900,8,TemporalInstantFromEpochMicroseconds
code-creation,Builtin,2,13625,0x1000ff920,8,TemporalInstantFromEpochNanoseconds
code-creation,Builtin,2,13625,0x1000ff940,8,TemporalInstantCompare
code-creation,Builtin,2,13625,0x1000ff960,8,TemporalInstantPrototypeEpochSeconds
code-creation,Builtin,2,13625,0x1000ff980,8,TemporalInstantPrototypeEpochMilliseconds
code-creation,Builtin,2,13625,0x1000ff9a0,8,TemporalInstantPrototypeEpochMicroseconds
code-creation,Builtin,2,13667,0x1000ff9c0,8,TemporalInstantPrototypeEpochNanoseconds
code-creation,Builtin,2,13667,0x1000ff9e0,8,TemporalInstantPrototypeAdd
code-creation,Builtin,2,13667,0x1000ffa00,8,TemporalInstantPrototypeSubtract
code-creation,Builtin,2,13667,0x1000ffa20,8,TemporalInstantPrototypeUntil
code-creation,Builtin,2,13667,0x1000ffa40,8,TemporalInstantPrototypeSince
code-creation,Builtin,2,13667,0x1000ffa60,8,TemporalInstantPrototypeRound
code-creation,Builtin,2,13667,0x1000ffa80,8,TemporalInstantPrototypeEquals
code-creation,Builtin,2,13667,0x1000ffaa0,8,TemporalInstantPrototypeToString
code-creation,Builtin,2,13667,0x1000ffac0,8,TemporalInstantPrototypeToJSON
code-creation,Builtin,2,13708,0x1000ffae0,8,TemporalInstantPrototypeToLocaleString
code-creation,Builtin,2,13708,0x1000ffb00,8,TemporalInstantPrototypeValueOf
code-creation,Builtin,2,13708,0x1000ffb20,8,TemporalInstantPrototypeToZonedDateTime
code-creation,Builtin,2,13708,0x1000ffb40,8,TemporalInstantPrototypeToZonedDateTimeISO
code-creation,Builtin,2,13708,0x1000ffb60,8,TemporalPlainYearMonthConstructor
code-creation,Builtin,2,13708,0x1000ffb80,8,TemporalPlainYearMonthFrom
code-creation,Builtin,2,13708,0x1000ffba0,8,TemporalPlainYearMonthCompare
code-creation,Builtin,2,13708,0x1000ffbc0,8,TemporalPlainYearMonthPrototypeCalendar
code-creation,Builtin,2,13708,0x1000ffbe0,8,TemporalPlainYearMonthPrototypeYear
code-creation,Builtin,2,13750,0x1000ffc00,8,TemporalPlainYearMonthPrototypeMonth
code-creation,Builtin,2,13750,0x1000ffc20,8,TemporalPlainYearMonthPrototypeMonthCode
code-creation,Builtin,2,13750,0x1000ffc40,8,TemporalPlainYearMonthPrototypeDaysInYear
code-creation,Builtin,2,13750,0x1000ffc60,8,TemporalPlainYearMonthPrototypeDaysInMonth
code-creation,Builtin,2,13750,0x1000ffc80,8,TemporalPlainYearMonthPrototypeMonthsInYear
code-creation,Builtin,2,13750,0x1000ffca0,8,TemporalPlainYearMonthPrototypeInLeapYear
code-creation,Builtin,2,13750,0x1000ffcc0,8,TemporalPlainYearMonthPrototypeWith
code-creation,Builtin,2,13750,0x1000ffce0,8,TemporalPlainYearMonthPrototypeAdd
code-creation,Builtin,2,13792,0x1000ffd00,8,TemporalPlainYearMonthPrototypeSubtract
code-creation,Builtin,2,13792,0x1000ffd20,8,TemporalPlainYearMonthPrototypeUntil
code-creation,Builtin,2,13792,0x1000ffd40,8,TemporalPlainYearMonthPrototypeSince
code-creation,Builtin,2,13792,0x1000ffd60,8,TemporalPlainYearMonthPrototypeEquals
code-creation,Builtin,2,13792,0x1000ffd80,8,TemporalPlainYearMonthPrototypeToString
code-creation,Builtin,2,13792,0x1000ffda0,8,TemporalPlainYearMonthPrototypeToJSON
code-creation,Builtin,2,13792,0x1000ffdc0,8,TemporalPlainYearMonthPrototypeToLocaleString
code-creation,Builtin,2,13792,0x1000ffde0,8,TemporalPlainYearMonthPrototypeValueOf
code-creation,Builtin,2,13833,0x1000ffe00,8,TemporalPlainYearMonthPrototypeToPlainDate
code-creation,Builtin,2,13833,0x1000ffe20,8,TemporalPlainYearMonthPrototypeGetISOFields
code-creation,Builtin,2,13833,0x1000ffe40,8,TemporalPlainMonthDayConstructor
code-creation,Builtin,2,13833,0x1000ffe60,8,TemporalPlainMonthDayFrom
code-creation,Builtin,2,13833,0x1000ffe80,8,TemporalPlainMonthDayPrototypeCalendar
code-creation,Builtin,2,13833,0x1000ffea0,8,TemporalPlainMonthDayPrototypeMonthCode
code-creation,Builtin,2,13833,0x1000ffec0,8,TemporalPlainMonthDayPrototypeDay
code-creation,Builtin,2,13833,0x1000ffee0,8,TemporalPlainMonthDayPrototypeWith
code-creation,Builtin,2,13833,0x1000fff00,8,TemporalPlainMonthDayPrototypeEquals
code-creation,Builtin,2,13875,0x1000fff20,8,TemporalPlainMonthDayPrototypeToString
code-creation,Builtin,2,13875,0x1000fff40,8,TemporalPlainMonthDayPrototypeToJSON
code-creation,Builtin,2,13875,0x1000fff60,8,TemporalPlainMonthDayPrototypeToLocaleString
code-creation,Builtin,2,13875,0x1000fff80,8,TemporalPlainMonthDayPrototypeValueOf
code-creation,Builtin,2,13875,0x1000fffa0,8,TemporalPlainMonthDayPrototypeToPlainDate
code-creation,Builtin,2,13875,0x1000fffc0,8,TemporalPlainMonthDayPrototypeGetISOFields
code-creation,Builtin,2,13875,0x1000fffe0,8,TemporalTimeZoneConstructor
code-creation,Builtin,2,13875,0x100100000,8,TemporalTimeZoneFrom
code-creation,Builtin,2,13917,0x100100020,8,TemporalTimeZonePrototypeId
code-creation,Builtin,2,13917,0x100100040,8,TemporalTimeZonePrototypeGetOffsetNanosecondsFor
code-creation,Builtin,2,13917,0x100100060,8,TemporalTimeZonePrototypeGetOffsetStringFor
code-creation,Builtin,2,13917,0x100100080,8,TemporalTimeZonePrototypeGetPlainDateTimeFor
code-creation,Builtin,2,13917,0x1001000a0,8,TemporalTimeZonePrototypeGetInstantFor
code-creation,Builtin,2,13917,0x1001000c0,8,TemporalTimeZonePrototypeGetPossibleInstantsFor
code-creation,Builtin,2,13917,0x1001000e0,8,TemporalTimeZonePrototypeGetNextTransition
code-creation,Builtin,2,13917,0x100100100,8,TemporalTimeZonePrototypeGetPreviousTransition
code-creation,Builtin,2,13958,0x100100120,8,TemporalTimeZonePrototypeToString
code-creation,Builtin,2,13958,0x100100140,8,TemporalTimeZonePrototypeToJSON
code-creation,Builtin,2,13958,0x100100160,8,TemporalCalendarConstructor
code-creation,Builtin,2,13958,0x100100180,8,TemporalCalendarFrom
code-creation,Builtin,2,13958,0x1001001a0,8,TemporalCalendarPrototypeId
code-creation,Builtin,2,13958,0x1001001c0,8,TemporalCalendarPrototypeDateFromFields
code-creation,Builtin,2,13958,0x1001001e0,8,TemporalCalendarPrototypeYearMonthFromFields
code-creation,Builtin,2,13958,0x100100200,8,TemporalCalendarPrototypeMonthDayFromFields
code-creation,Builtin,2,13958,0x100100220,8,TemporalCalendarPrototypeDateAdd
code-creation,Builtin,2,14042,0x100100240,8,TemporalCalendarPrototypeDateUntil
code-creation,Builtin,2,14042,0x100100260,8,TemporalCalendarPrototypeYear
code-creation,Builtin,2,14042,0x100100280,8,TemporalCalendarPrototypeMonth
code-creation,Builtin,2,14042,0x1001002a0,8,TemporalCalendarPrototypeMonthCode
code-creation,Builtin,2,14042,0x1001002c0,8,TemporalCalendarPrototypeDay
code-creation,Builtin,2,14042,0x1001002e0,8,TemporalCalendarPrototypeDayOfWeek
code-creation,Builtin,2,14042,0x100100300,8,TemporalCalendarPrototypeDayOfYear
code-creation,Builtin,2,14042,0x100100320,8,TemporalCalendarPrototypeWeekOfYear
code-creation,Builtin,2,14083,0x100100340,8,TemporalCalendarPrototypeDaysInWeek
code-creation,Builtin,2,14083,0x100100360,8,TemporalCalendarPrototypeDaysInMonth
code-creation,Builtin,2,14083,0x100100380,8,TemporalCalendarPrototypeDaysInYear
code-creation,Builtin,2,14083,0x1001003a0,8,TemporalCalendarPrototypeMonthsInYear
code-creation,Builtin,2,14083,0x1001003c0,8,TemporalCalendarPrototypeInLeapYear
code-creation,Builtin,2,14083,0x1001003e0,3044,TemporalCalendarPrototypeFields
code-creation,Builtin,2,14083,0x100100fe0,8,TemporalCalendarPrototypeMergeFields
code-creation,Builtin,2,14083,0x100101000,8,TemporalCalendarPrototypeToString
code-creation,Builtin,2,14083,0x100101020,8,TemporalCalendarPrototypeToJSON
code-creation,Builtin,2,14125,0x100101040,8,DatePrototypeToTemporalInstant
code-creation,Builtin,2,14125,0x100101060,1552,StringFixedArrayFromIterable
code-creation,Builtin,2,14125,0x100101680,1552,TemporalInstantFixedArrayFromIterable
code-creation,Builtin,2,14125,0x100101ca0,312,AggregateErrorConstructor
code-creation,Builtin,2,14125,0x100101de0,816,ArrayPrototypeAt
code-creation,Builtin,2,14125,0x100102120,644,ArrayPrototypeConcat
code-creation,Builtin,2,14125,0x1001023c0,4632,ArrayPrototypeCopyWithin
code-creation,Builtin,2,14125,0x1001035e0,240,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,14125,0x1001036e0,576,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,14167,0x100103940,3984,ArrayEveryLoopContinuation
code-creation,Builtin,2,14167,0x1001048e0,1500,ArrayEvery
code-creation,Builtin,2,14167,0x100104ec0,296,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,14167,0x100105000,856,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,14167,0x100105360,4212,ArrayFilterLoopContinuation
code-creation,Builtin,2,14167,0x1001063e0,4208,ArrayFilter
code-creation,Builtin,2,14167,0x100107460,232,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,14167,0x100107560,52,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,14208,0x1001075a0,352,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,14208,0x100107720,524,ArrayFindLoopContinuation
code-creation,Builtin,2,14208,0x100107940,1484,ArrayPrototypeFind
code-creation,Builtin,2,14208,0x100107f20,232,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,14208,0x100108020,52,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,14208,0x100108060,352,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,14208,0x1001081e0,516,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,14208,0x100108400,1480,ArrayPrototypeFindIndex
code-creation,Builtin,2,14208,0x1001089e0,468,ArrayFindLastLoopContinuation
code-creation,Builtin,2,14250,0x100108bc0,1600,ArrayPrototypeFindLast
code-creation,Builtin,2,14250,0x100109220,460,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,14250,0x100109400,1596,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,14250,0x100109a40,240,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,14250,0x100109b40,240,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,14250,0x100109c40,3928,ArrayForEachLoopContinuation
code-creation,Builtin,2,14250,0x10010aba0,1344,ArrayForEach
code-creation,Builtin,2,14250,0x10010b100,3688,ArrayFrom
code-creation,Builtin,2,14250,0x10010bf80,192,ArrayIsArray
code-creation,Builtin,2,14292,0x10010c060,400,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,14292,0x10010c200,64,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,14292,0x10010c260,176,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,14292,0x10010c320,372,ConvertToLocaleString
code-creation,Builtin,2,14292,0x10010c4a0,824,JoinStackPush
code-creation,Builtin,2,14292,0x10010c7e0,320,JoinStackPop
code-creation,Builtin,2,14292,0x10010c940,6120,ArrayPrototypeJoin
code-creation,Builtin,2,14292,0x10010e140,5164,ArrayPrototypeToLocaleString
code-creation,Builtin,2,14292,0x10010f580,280,ArrayPrototypeToString
code-creation,Builtin,2,14292,0x10010f6a0,5936,TypedArrayPrototypeJoin
code-creation,Builtin,2,14333,0x100110de0,4960,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,14333,0x100112160,3488,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,14333,0x100112f20,260,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,14333,0x100113040,260,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,14333,0x100113160,472,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,14333,0x100113340,3868,ArrayMapLoopContinuation
code-creation,Builtin,2,14333,0x100114260,3808,ArrayMap
code-creation,Builtin,2,14333,0x100115160,872,ArrayOf
code-creation,Builtin,2,14333,0x1001154e0,416,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,14375,0x1001156a0,232,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,14375,0x1001157a0,232,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,14375,0x1001158a0,3940,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,14375,0x100116820,1848,ArrayReduceRight
code-creation,Builtin,2,14375,0x100116f60,208,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,14375,0x100117040,232,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,14375,0x100117140,232,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,14375,0x100117240,3972,ArrayReduceLoopContinuation
code-creation,Builtin,2,14375,0x1001181e0,1536,ArrayReduce
code-creation,Builtin,2,14417,0x100118800,3008,ArrayPrototypeReverse
code-creation,Builtin,2,14417,0x1001193e0,3264,ArrayPrototypeShift
code-creation,Builtin,2,14417,0x10011a0c0,4976,ArrayPrototypeSlice
code-creation,Builtin,2,14417,0x10011b440,240,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,14417,0x10011b540,560,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,14417,0x10011b780,3980,ArraySomeLoopContinuation
code-creation,Builtin,2,14417,0x10011c720,1488,ArraySome
code-creation,Builtin,2,14417,0x10011cd00,12196,ArrayPrototypeSplice
code-creation,Builtin,2,14417,0x10011fcc0,1572,GenericArrayToReversed
code-creation,Builtin,2,14458,0x100120300,1836,ArrayPrototypeToReversed
code-creation,Builtin,2,14458,0x100120a40,5036,ArrayTimSortIntoCopy
code-creation,Builtin,2,14458,0x100121e00,1984,ArrayPrototypeToSorted
code-creation,Builtin,2,14458,0x1001225e0,7820,ArrayPrototypeToSpliced
code-creation,Builtin,2,14458,0x100124480,2904,ArrayPrototypeUnshift
code-creation,Builtin,2,14458,0x100124fe0,956,GenericArrayWith
code-creation,Builtin,2,14458,0x1001253a0,1112,ArrayPrototypeWith
code-creation,Builtin,2,14458,0x100125800,320,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,14458,0x100125960,448,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,14458,0x100125b40,228,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,14500,0x100125c40,320,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,14500,0x100125da0,228,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,14500,0x100125ea0,128,ArrayBufferIsView
code-creation,Builtin,2,14500,0x100125f40,232,ToInteger
code-creation,Builtin,2,14500,0x100126040,3948,FastCreateDataProperty
code-creation,Builtin,2,14500,0x100126fc0,648,CheckSameObject
code-creation,Builtin,2,14500,0x100127260,952,BooleanConstructor
code-creation,Builtin,2,14500,0x100127620,188,BooleanPrototypeToString
code-creation,Builtin,2,14500,0x1001276e0,184,BooleanPrototypeValueOf
code-creation,Builtin,2,14500,0x1001277a0,1048,BigIntAddNoThrow
code-creation,Builtin,2,14542,0x100127bc0,1148,BigIntAdd
code-creation,Builtin,2,14542,0x100128040,1048,BigIntSubtractNoThrow
code-creation,Builtin,2,14542,0x100128460,1148,BigIntSubtract
code-creation,Builtin,2,14542,0x1001288e0,336,BigIntMultiplyNoThrow
code-creation,Builtin,2,14542,0x100128a40,452,BigIntMultiply
code-creation,Builtin,2,14542,0x100128c20,544,BigIntDivideNoThrow
code-creation,Builtin,2,14542,0x100128e60,660,BigIntDivide
code-creation,Builtin,2,14542,0x100129100,972,BigIntBitwiseAndNoThrow
code-creation,Builtin,2,14542,0x1001294e0,1164,BigIntBitwiseAnd
code-creation,Builtin,2,14542,0x100129980,336,BigIntUnaryMinus
code-creation,Builtin,2,14583,0x100129ae0,1148,ToString
code-creation,Builtin,2,14583,0x100129f60,180,StringPrototypeToString
code-creation,Builtin,2,14583,0x10012a020,180,StringPrototypeValueOf
code-creation,Builtin,2,14583,0x10012a0e0,2156,StringToList
code-creation,Builtin,2,14583,0x10012a960,820,StringPrototypeCharAt
code-creation,Builtin,2,14583,0x10012aca0,696,StringPrototypeCharCodeAt
code-creation,Builtin,2,14583,0x10012af60,1204,StringPrototypeCodePointAt
code-creation,Builtin,2,14583,0x10012b420,436,StringPrototypeConcat
code-creation,Builtin,2,14583,0x10012b5e0,1012,StringConstructor
code-creation,Builtin,2,14583,0x10012b9e0,1208,StringAddConvertLeft
code-creation,Builtin,2,14625,0x10012bea0,1252,StringAddConvertRight
code-creation,Builtin,2,14625,0x10012c3a0,680,StringCharAt
code-creation,Builtin,2,14625,0x10012c660,20,FastNewClosureBaseline
code-creation,Builtin,2,14625,0x10012c680,232,FastNewFunctionContextEval
code-creation,Builtin,2,14625,0x10012c780,232,FastNewFunctionContextFunction
code-creation,Builtin,2,14625,0x10012c880,312,CreateRegExpLiteral
code-creation,Builtin,2,14625,0x10012c9c0,1040,CreateShallowArrayLiteral
code-creation,Builtin,2,14625,0x10012cde0,528,CreateEmptyArrayLiteral
code-creation,Builtin,2,14625,0x10012d000,1732,CreateShallowObjectLiteral
code-creation,Builtin,2,14625,0x10012d6e0,444,ObjectConstructor
code-creation,Builtin,2,14667,0x10012d8a0,204,CreateEmptyLiteralObject
code-creation,Builtin,2,14667,0x10012d980,596,NumberConstructor
code-creation,Builtin,2,14667,0x10012dbe0,92,GenericLazyDeoptContinuation
code-creation,Builtin,2,14667,0x10012dc40,84,StringToNumber
code-creation,Builtin,2,14667,0x10012dca0,240,NonNumberToNumber
code-creation,Builtin,2,14667,0x10012dda0,288,NonNumberToNumeric
code-creation,Builtin,2,14667,0x10012dee0,60,ToNumeric
code-creation,Builtin,2,14667,0x10012df20,1188,NumberToString
code-creation,Builtin,2,14708,0x10012e3e0,128,ToBoolean
code-creation,Builtin,2,14708,0x10012e480,128,ToBooleanForBaselineJump
code-creation,Builtin,2,14708,0x10012e520,568,ToLength
code-creation,Builtin,2,14708,0x10012e760,1112,ToName
code-creation,Builtin,2,14708,0x10012ebc0,812,ToObject
code-creation,Builtin,2,14708,0x10012ef00,276,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,14708,0x10012f020,276,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,14708,0x10012f140,276,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,14708,0x10012f260,412,OrdinaryToPrimitive_Number
code-creation,Builtin,2,14750,0x10012f400,412,OrdinaryToPrimitive_String
code-creation,Builtin,2,14750,0x10012f5a0,272,FastConsoleAssert
code-creation,Builtin,2,14750,0x10012f6c0,180,DataViewPrototypeGetBuffer
code-creation,Builtin,2,14750,0x10012f780,708,DataViewPrototypeGetByteLength
code-creation,Builtin,2,14750,0x10012fa60,416,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,14750,0x10012fc20,716,DataViewPrototypeGetUint8
code-creation,Builtin,2,14750,0x10012ff00,716,DataViewPrototypeGetInt8
code-creation,Builtin,2,14750,0x1001301e0,824,DataViewPrototypeGetUint16
code-creation,Builtin,2,14750,0x100130520,820,DataViewPrototypeGetInt16
code-creation,Builtin,2,14792,0x100130860,972,DataViewPrototypeGetUint32
code-creation,Builtin,2,14792,0x100130c40,852,DataViewPrototypeGetInt32
code-creation,Builtin,2,14792,0x100130fa0,992,DataViewPrototypeGetFloat32
code-creation,Builtin,2,14792,0x1001313a0,1068,DataViewPrototypeGetFloat64
code-creation,Builtin,2,14792,0x1001317e0,1156,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,14792,0x100131c80,1184,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,14792,0x100132140,1096,DataViewPrototypeSetUint8
code-creation,Builtin,2,14792,0x1001325a0,1096,DataViewPrototypeSetInt8
code-creation,Builtin,2,14792,0x100132a00,1168,DataViewPrototypeSetUint16
code-creation,Builtin,2,14833,0x100132ea0,1168,DataViewPrototypeSetInt16
code-creation,Builtin,2,14833,0x100133340,1200,DataViewPrototypeSetUint32
code-creation,Builtin,2,14833,0x100133800,1200,DataViewPrototypeSetInt32
code-creation,Builtin,2,14833,0x100133cc0,1204,DataViewPrototypeSetFloat32
code-creation,Builtin,2,14833,0x100134180,1264,DataViewPrototypeSetFloat64
code-creation,Builtin,2,14833,0x100134680,1152,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,14833,0x100134b20,1152,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,14833,0x100134fc0,868,FinalizationRegistryConstructor
code-creation,Builtin,2,14833,0x100135340,1136,FinalizationRegistryRegister
code-creation,Builtin,2,14875,0x1001357c0,664,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,14875,0x100135a60,360,FunctionPrototypeHasInstance
code-creation,Builtin,2,14875,0x100135be0,932,FastFunctionPrototypeBind
code-creation,Builtin,2,14875,0x100135fa0,100,IncBlockCounter
code-creation,Builtin,2,14875,0x100136020,312,GetTemplateObject
code-creation,Builtin,2,14875,0x100136160,132,ForInNext
code-creation,Builtin,2,14875,0x100136200,184,GetImportMetaObjectBaseline
code-creation,Builtin,2,14875,0x1001362c0,128,GetIteratorWithFeedback
code-creation,Builtin,2,14875,0x100136360,124,GetIteratorBaseline
code-creation,Builtin,2,14917,0x1001363e0,296,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,14917,0x100136520,964,CallIteratorWithFeedback
code-creation,Builtin,2,14917,0x100136900,300,MathAbs
code-creation,Builtin,2,14917,0x100136a40,264,MathCeil
code-creation,Builtin,2,14917,0x100136b60,264,MathFloor
code-creation,Builtin,2,14917,0x100136c80,288,MathRound
code-creation,Builtin,2,14917,0x100136dc0,264,MathTrunc
code-creation,Builtin,2,14917,0x100136ee0,380,MathPow
code-creation,Builtin,2,14917,0x100137060,408,MathMax
code-creation,Builtin,2,14917,0x100137200,408,MathMin
code-creation,Builtin,2,14958,0x1001373a0,300,MathAcos
code-creation,Builtin,2,14958,0x1001374e0,300,MathAcosh
code-creation,Builtin,2,14958,0x100137620,300,MathAsin
code-creation,Builtin,2,14958,0x100137760,300,MathAsinh
code-creation,Builtin,2,14958,0x1001378a0,300,MathAtan
code-creation,Builtin,2,14958,0x1001379e0,376,MathAtan2
code-creation,Builtin,2,14958,0x100137b60,300,MathAtanh
code-creation,Builtin,2,14958,0x100137ca0,300,MathCbrt
code-creation,Builtin,2,14958,0x100137de0,156,MathClz32
code-creation,Builtin,2,15000,0x100137e80,300,MathCos
code-creation,Builtin,2,15000,0x100137fc0,300,MathCosh
code-creation,Builtin,2,15000,0x100138100,300,MathExp
code-creation,Builtin,2,15000,0x100138240,300,MathExpm1
code-creation,Builtin,2,15000,0x100138380,272,MathFround
code-creation,Builtin,2,15000,0x1001384a0,228,MathImul
code-creation,Builtin,2,15000,0x1001385a0,300,MathLog
code-creation,Builtin,2,15000,0x1001386e0,300,MathLog1p
code-creation,Builtin,2,15000,0x100138820,300,MathLog10
code-creation,Builtin,2,15000,0x100138960,300,MathLog2
code-creation,Builtin,2,15042,0x100138aa0,300,MathSin
code-creation,Builtin,2,15042,0x100138be0,180,MathSign
code-creation,Builtin,2,15042,0x100138ca0,300,MathSinh
code-creation,Builtin,2,15042,0x100138de0,268,MathSqrt
code-creation,Builtin,2,15042,0x100138f00,300,MathTan
code-creation,Builtin,2,15042,0x100139040,300,MathTanh
code-creation,Builtin,2,15042,0x100139180,1068,MathHypot
code-creation,Builtin,2,15042,0x1001395c0,340,MathRandom
code-creation,Builtin,2,15042,0x100139720,2452,NumberPrototypeToString
code-creation,Builtin,2,15042,0x10013a0c0,172,NumberIsFinite
code-creation,Builtin,2,15083,0x10013a180,156,NumberIsInteger
code-creation,Builtin,2,15083,0x10013a220,152,NumberIsNaN
code-creation,Builtin,2,15083,0x10013a2c0,184,NumberIsSafeInteger
code-creation,Builtin,2,15083,0x10013a380,184,NumberPrototypeValueOf
code-creation,Builtin,2,15083,0x10013a440,224,NumberParseFloat
code-creation,Builtin,2,15083,0x10013a540,196,ParseInt
code-creation,Builtin,2,15083,0x10013a620,108,NumberParseInt
code-creation,Builtin,2,15083,0x10013a6a0,748,Add
code-creation,Builtin,2,15083,0x10013a9a0,424,Subtract
code-creation,Builtin,2,15083,0x10013ab60,560,Multiply
code-creation,Builtin,2,15083,0x10013ada0,468,Divide
code-creation,Builtin,2,15125,0x10013af80,548,Modulus
code-creation,Builtin,2,15125,0x10013b1c0,524,Exponentiate
code-creation,Builtin,2,15125,0x10013b3e0,332,Negate
code-creation,Builtin,2,15125,0x10013b540,120,BitwiseNot
code-creation,Builtin,2,15125,0x10013b5c0,120,Decrement
code-creation,Builtin,2,15125,0x10013b640,120,Increment
code-creation,Builtin,2,15125,0x10013b6c0,400,ShiftLeft
code-creation,Builtin,2,15125,0x10013b860,400,ShiftRight
code-creation,Builtin,2,15125,0x10013ba00,500,ShiftRightLogical
code-creation,Builtin,2,15125,0x10013bc00,216,BitwiseAnd
code-creation,Builtin,2,15167,0x10013bce0,400,BitwiseOr
code-creation,Builtin,2,15167,0x10013be80,400,BitwiseXor
code-creation,Builtin,2,15167,0x10013c020,872,LessThan
code-creation,Builtin,2,15167,0x10013c3a0,872,LessThanOrEqual
code-creation,Builtin,2,15167,0x10013c720,872,GreaterThan
code-creation,Builtin,2,15167,0x10013caa0,872,GreaterThanOrEqual
code-creation,Builtin,2,15167,0x10013ce20,928,Equal
code-creation,Builtin,2,15167,0x10013d1e0,352,StrictEqual
code-creation,Builtin,2,15167,0x10013d360,3388,ObjectFromEntries
code-creation,Builtin,2,15167,0x10013e0a0,852,CreateObjectWithoutProperties
code-creation,Builtin,2,15208,0x10013e400,176,ObjectIsExtensible
code-creation,Builtin,2,15208,0x10013e4c0,180,ObjectPreventExtensions
code-creation,Builtin,2,15208,0x10013e580,184,ObjectGetPrototypeOf
code-creation,Builtin,2,15208,0x10013e640,312,ObjectSetPrototypeOf
code-creation,Builtin,2,15208,0x10013e780,92,ObjectPrototypeToString
code-creation,Builtin,2,15208,0x10013e7e0,116,ObjectPrototypeValueOf
code-creation,Builtin,2,15208,0x10013e860,196,ObjectPrototypeToLocaleString
code-creation,Builtin,2,15208,0x10013e940,832,FulfillPromise
code-creation,Builtin,2,15208,0x10013eca0,948,RejectPromise
code-creation,Builtin,2,15208,0x10013f060,2524,NewPromiseCapability
code-creation,Builtin,2,15250,0x10013fa40,212,PromiseCapabilityDefaultReject
code-creation,Builtin,2,15250,0x10013fb20,192,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,15250,0x10013fc00,1368,PerformPromiseThen
code-creation,Builtin,2,15250,0x100140160,692,PromiseReject
code-creation,Builtin,2,15250,0x100140420,308,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,15250,0x100140560,140,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,15250,0x100140600,4512,PromiseAll
code-creation,Builtin,2,15250,0x1001417c0,4820,PromiseAllSettled
code-creation,Builtin,2,15250,0x100142aa0,1152,PromiseAllResolveElementClosure
code-creation,Builtin,2,15292,0x100142f40,1452,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,15292,0x100143500,1460,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,15292,0x100143ac0,1220,PromiseAnyRejectElementClosure
code-creation,Builtin,2,15292,0x100143fa0,2668,PromiseAny
code-creation,Builtin,2,15292,0x100144a20,3044,PromiseConstructor
code-creation,Builtin,2,15292,0x100145620,380,PromisePrototypeCatch
code-creation,Builtin,2,15292,0x1001457a0,108,PromiseValueThunkFinally
code-creation,Builtin,2,15292,0x100145820,108,PromiseThrowerFinally
code-creation,Builtin,2,15292,0x1001458a0,1084,PromiseCatchFinally
code-creation,Builtin,2,15292,0x100145ce0,1084,PromiseThenFinally
code-creation,Builtin,2,15333,0x100146120,1756,PromisePrototypeFinally
code-creation,Builtin,2,15333,0x100146800,1504,PromiseRace
code-creation,Builtin,2,15333,0x100146e00,336,PromiseFulfillReactionJob
code-creation,Builtin,2,15333,0x100146f60,432,PromiseRejectReactionJob
code-creation,Builtin,2,15333,0x100147120,172,PromiseResolveTrampoline
code-creation,Builtin,2,15333,0x1001471e0,728,PromiseResolve
code-creation,Builtin,2,15333,0x1001474c0,848,ResolvePromise
code-creation,Builtin,2,15333,0x100147820,2364,PromisePrototypeThen
code-creation,Builtin,2,15333,0x100148160,1296,PromiseResolveThenableJob
code-creation,Builtin,2,15375,0x100148680,452,ProxyConstructor
code-creation,Builtin,2,15375,0x100148860,2372,ProxyDeleteProperty
code-creation,Builtin,2,15375,0x1001491c0,2640,ProxyGetProperty
code-creation,Builtin,2,15375,0x100149c20,1024,ProxyGetPrototypeOf
code-creation,Builtin,2,15375,0x10014a040,2320,ProxyHasProperty
code-creation,Builtin,2,15375,0x10014a960,788,ProxyIsExtensible
code-creation,Builtin,2,15375,0x10014ac80,816,ProxyPreventExtensions
code-creation,Builtin,2,15375,0x10014afc0,1148,ProxyRevocable
code-creation,Builtin,2,15375,0x10014b440,144,ProxyRevoke
code-creation,Builtin,2,15375,0x10014b4e0,2736,ProxySetProperty
code-creation,Builtin,2,15375,0x10014bfa0,1252,ProxySetPrototypeOf
code-creation,Builtin,2,15417,0x10014c4a0,228,ReflectIsExtensible
code-creation,Builtin,2,15417,0x10014c5a0,232,ReflectPreventExtensions
code-creation,Builtin,2,15417,0x10014c6a0,208,ReflectGetPrototypeOf
code-creation,Builtin,2,15417,0x10014c780,336,ReflectSetPrototypeOf
code-creation,Builtin,2,15417,0x10014c8e0,316,ReflectGet
code-creation,Builtin,2,15417,0x10014ca20,176,ReflectDeleteProperty
code-creation,Builtin,2,15417,0x10014cae0,164,ReflectHas
code-creation,Builtin,2,15417,0x10014cba0,4992,RegExpPrototypeExecSlow
code-creation,Builtin,2,15417,0x10014df40,5040,RegExpPrototypeExec
code-creation,Builtin,2,15417,0x10014f300,2348,RegExpPrototypeMatchAll
code-creation,Builtin,2,15458,0x10014fc40,9052,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,15458,0x100151fa0,8604,RegExpMatchFast
code-creation,Builtin,2,15458,0x100154140,3616,RegExpPrototypeMatch
code-creation,Builtin,2,15458,0x100154f80,6156,RegExpReplace
code-creation,Builtin,2,15458,0x1001567a0,544,RegExpPrototypeReplace
code-creation,Builtin,2,15458,0x1001569e0,1336,RegExpSearchFast
code-creation,Builtin,2,15458,0x100156f20,1576,RegExpPrototypeSearch
code-creation,Builtin,2,15458,0x100157560,212,RegExpPrototypeSourceGetter
code-creation,Builtin,2,15458,0x100157640,5356,RegExpSplit
code-creation,Builtin,2,15500,0x100158b40,512,RegExpPrototypeSplit
code-creation,Builtin,2,15500,0x100158d60,2172,RegExpPrototypeTest
code-creation,Builtin,2,15500,0x1001595e0,1256,RegExpPrototypeTestFast
code-creation,Builtin,2,15500,0x100159ae0,236,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,15500,0x100159be0,244,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,15500,0x100159ce0,244,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,15500,0x100159de0,244,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,15500,0x100159ee0,244,RegExpPrototypeLinearGetter
code-creation,Builtin,2,15500,0x100159fe0,244,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,15542,0x10015a0e0,272,RegExpPrototypeStickyGetter
code-creation,Builtin,2,15542,0x10015a200,272,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,15542,0x10015a320,244,RegExpPrototypeUnicodeSetsGetter
code-creation,Builtin,2,15542,0x10015a420,2420,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,15542,0x10015ada0,1188,StringPrototypeAt
code-creation,Builtin,2,15542,0x10015b260,3360,StringPrototypeEndsWith
code-creation,Builtin,2,15542,0x10015bfa0,468,CreateHTML
code-creation,Builtin,2,15542,0x10015c180,180,StringPrototypeAnchor
code-creation,Builtin,2,15542,0x10015c240,152,StringPrototypeBig
code-creation,Builtin,2,15542,0x10015c2e0,152,StringPrototypeBlink
code-creation,Builtin,2,15583,0x10015c380,152,StringPrototypeBold
code-creation,Builtin,2,15583,0x10015c420,188,StringPrototypeFontcolor
code-creation,Builtin,2,15583,0x10015c4e0,188,StringPrototypeFontsize
code-creation,Builtin,2,15583,0x10015c5a0,152,StringPrototypeFixed
code-creation,Builtin,2,15583,0x10015c640,152,StringPrototypeItalics
code-creation,Builtin,2,15583,0x10015c6e0,188,StringPrototypeLink
code-creation,Builtin,2,15583,0x10015c7a0,152,StringPrototypeSmall
code-creation,Builtin,2,15583,0x10015c840,152,StringPrototypeStrike
code-creation,Builtin,2,15583,0x10015c8e0,152,StringPrototypeSub
code-creation,Builtin,2,15583,0x10015c980,152,StringPrototypeSup
code-creation,Builtin,2,15625,0x10015ca20,996,StringPrototypeIncludes
code-creation,Builtin,2,15625,0x10015ce20,576,StringPrototypeIndexOf
code-creation,Builtin,2,15625,0x10015d080,360,StringPrototypeIterator
code-creation,Builtin,2,15625,0x10015d200,1724,StringIteratorPrototypeNext
code-creation,Builtin,2,15625,0x10015d8c0,1324,StringPrototypeMatch
code-creation,Builtin,2,15625,0x10015de00,1324,StringPrototypeSearch
code-creation,Builtin,2,15625,0x10015e340,804,StringPrototypePadStart
code-creation,Builtin,2,15625,0x10015e680,808,StringPrototypePadEnd
code-creation,Builtin,2,15625,0x10015e9c0,136,StringRepeat
code-creation,Builtin,2,15625,0x10015ea60,400,StringPrototypeRepeat
code-creation,Builtin,2,15667,0x10015ec00,10256,StringPrototypeReplaceAll
code-creation,Builtin,2,15667,0x100161420,2948,StringPrototypeSlice
code-creation,Builtin,2,15667,0x100161fc0,3376,StringPrototypeStartsWith
code-creation,Builtin,2,15667,0x100162d00,2932,StringPrototypeSubstr
code-creation,Builtin,2,15667,0x100163880,2884,StringPrototypeSubstring
code-creation,Builtin,2,15667,0x1001643e0,6448,StringPrototypeTrim
code-creation,Builtin,2,15667,0x100165d20,5928,StringPrototypeTrimStart
code-creation,Builtin,2,15667,0x100167460,5560,StringPrototypeTrimEnd
code-creation,Builtin,2,15667,0x100168a20,188,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,15708,0x100168ae0,196,SymbolPrototypeToPrimitive
code-creation,Builtin,2,15708,0x100168bc0,208,SymbolPrototypeToString
code-creation,Builtin,2,15708,0x100168ca0,184,SymbolPrototypeValueOf
code-creation,Builtin,2,15708,0x100168d60,1064,TypedArrayPrototypeAt
code-creation,Builtin,2,15708,0x1001691a0,9120,CreateTypedArray
code-creation,Builtin,2,15708,0x10016b560,1688,TypedArrayPrototypeEvery
code-creation,Builtin,2,15708,0x10016bc00,432,TypedArrayPrototypeEntries
code-creation,Builtin,2,15708,0x10016bdc0,3984,TypedArrayPrototypeFilter
code-creation,Builtin,2,15708,0x10016cd60,1680,TypedArrayPrototypeFind
code-creation,Builtin,2,15708,0x10016d400,1680,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,15750,0x10016daa0,1652,TypedArrayPrototypeFindLast
code-creation,Builtin,2,15750,0x10016e120,1652,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,15750,0x10016e7a0,1552,TypedArrayPrototypeForEach
code-creation,Builtin,2,15750,0x10016edc0,2084,TypedArrayFrom
code-creation,Builtin,2,15750,0x10016f600,428,TypedArrayPrototypeKeys
code-creation,Builtin,2,15750,0x10016f7c0,924,TypedArrayOf
code-creation,Builtin,2,15750,0x10016fb60,1652,TypedArrayPrototypeReduce
code-creation,Builtin,2,15750,0x1001701e0,1640,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,15792,0x100170860,3096,TypedArrayPrototypeSet
code-creation,Builtin,2,15792,0x100171480,3396,TypedArrayPrototypeSlice
code-creation,Builtin,2,15792,0x1001721e0,1672,TypedArrayPrototypeSome
code-creation,Builtin,2,15792,0x100172880,1048,TypedArrayMergeSort
code-creation,Builtin,2,15792,0x100172ca0,2188,TypedArrayPrototypeSort
code-creation,Builtin,2,15792,0x100173540,2880,TypedArrayPrototypeSubArray
code-creation,Builtin,2,15792,0x1001740a0,1596,TypedArrayPrototypeToReversed
code-creation,Builtin,2,15792,0x1001746e0,3096,TypedArrayPrototypeToSorted
code-creation,Builtin,2,15792,0x100175300,432,TypedArrayPrototypeValues
code-creation,Builtin,2,15792,0x1001754c0,2844,TypedArrayPrototypeWith
code-creation,Builtin,2,15833,0x100175fe0,1016,WeakRefConstructor
code-creation,Builtin,2,15833,0x1001763e0,212,WeakRefDeref
code-creation,Builtin,2,15833,0x1001764c0,760,NewSloppyArgumentsElements
code-creation,Builtin,2,15833,0x1001767c0,356,NewStrictArgumentsElements
code-creation,Builtin,2,15833,0x100176940,392,NewRestArgumentsElements
code-creation,Builtin,2,15833,0x100176ae0,1700,FastNewSloppyArguments
code-creation,Builtin,2,15833,0x1001771a0,592,FastNewStrictArguments
code-creation,Builtin,2,15833,0x100177400,640,FastNewRestArguments
code-creation,Builtin,2,15833,0x1001776a0,644,StringSlowFlatten
code-creation,Builtin,2,15875,0x100177940,2108,StringIndexOf
code-creation,Builtin,2,15875,0x100178180,1340,TestTurbofanType
code-creation,Builtin,2,15875,0x1001786c0,208,CheckTurbofanType
code-creation,Builtin,2,15875,0x1001787a0,8,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,15875,0x1001787c0,16,TestHelperPlus1
code-creation,Builtin,2,15875,0x1001787e0,16,TestHelperPlus2
code-creation,Builtin,2,15875,0x100178800,124,NewSmiBox
code-creation,Builtin,2,15875,0x100178880,20,ReturnTwoValues
code-creation,Builtin,2,15875,0x1001788a0,44,Load_FastSmiElements_0
code-creation,Builtin,2,15875,0x1001788e0,44,Load_FastObjectElements_0
code-creation,Builtin,2,15917,0x100178920,176,Load_FastDoubleElements_0
code-creation,Builtin,2,15917,0x1001789e0,48,Store_FastSmiElements_0
code-creation,Builtin,2,15917,0x100178a20,112,Store_FastObjectElements_0
code-creation,Builtin,2,15917,0x100178aa0,56,Store_FastDoubleElements_0
code-creation,Builtin,2,15917,0x100178ae0,52,Delete_FastSmiElements_0
code-creation,Builtin,2,15917,0x100178b20,52,Delete_FastObjectElements_0
code-creation,Builtin,2,15917,0x100178b60,52,Delete_FastDoubleElements_0
code-creation,Builtin,2,15917,0x100178ba0,268,SortCompareDefault
code-creation,Builtin,2,15917,0x100178cc0,128,SortCompareUserFn
code-creation,Builtin,2,15917,0x100178d60,12,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,15958,0x100178d80,336,Copy
code-creation,Builtin,2,15958,0x100178ee0,5492,MergeAt
code-creation,Builtin,2,15958,0x10017a460,852,GallopLeft
code-creation,Builtin,2,15958,0x10017a7c0,896,GallopRight
code-creation,Builtin,2,15958,0x10017ab60,3788,ArrayTimSort
code-creation,Builtin,2,15958,0x10017ba40,1888,ArrayPrototypeSort
code-creation,Builtin,2,15958,0x10017c1c0,3920,StringFastLocaleCompare
code-creation,Builtin,2,15958,0x10017d120,120,WasmInt32ToHeapNumber
code-creation,Builtin,2,15958,0x10017d1a0,32,WasmFuncRefToJS
code-creation,Builtin,2,15958,0x10017d1e0,84,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,16000,0x10017d240,96,WasmTaggedToFloat64
code-creation,Builtin,2,16000,0x10017d2c0,96,WasmMemoryGrow
code-creation,Builtin,2,16000,0x10017d340,112,WasmTableInit
code-creation,Builtin,2,16000,0x10017d3c0,112,WasmTableCopy
code-creation,Builtin,2,16000,0x10017d440,96,WasmTableFill
code-creation,Builtin,2,16000,0x10017d4c0,76,WasmTableGrow
code-creation,Builtin,2,16000,0x10017d520,124,WasmTableGet
code-creation,Builtin,2,16000,0x10017d5a0,192,WasmTableSet
code-creation,Builtin,2,16042,0x10017d680,192,WasmTableGetFuncRef
code-creation,Builtin,2,16042,0x10017d760,132,WasmTableSetFuncRef
code-creation,Builtin,2,16042,0x10017d800,112,WasmRefFunc
code-creation,Builtin,2,16042,0x10017d880,184,WasmAllocateFixedArray
code-creation,Builtin,2,16042,0x10017d940,40,WasmThrow
code-creation,Builtin,2,16042,0x10017d980,56,WasmRethrow
code-creation,Builtin,2,16042,0x10017d9c0,48,WasmRethrowExplicitContext
code-creation,Builtin,2,16042,0x10017da00,44,WasmTriggerTierUp
code-creation,Builtin,2,16042,0x10017da40,28,WasmStackGuard
code-creation,Builtin,2,16042,0x10017da60,28,WasmStackOverflow
code-creation,Builtin,2,16083,0x10017da80,40,WasmTraceMemory
code-creation,Builtin,2,16083,0x10017dac0,28,WasmTraceEnter
code-creation,Builtin,2,16083,0x10017dae0,40,WasmTraceExit
code-creation,Builtin,2,16083,0x10017db20,376,WasmAllocateJSArray
code-creation,Builtin,2,16083,0x10017dca0,140,WasmAllocateStructWithRtt
code-creation,Builtin,2,16083,0x10017dd40,184,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,16083,0x10017de00,104,WasmArrayNewSegment
code-creation,Builtin,2,16083,0x10017de80,160,WasmArrayCopyWithChecks
code-creation,Builtin,2,16083,0x10017df40,80,WasmArrayCopy
code-creation,Builtin,2,16083,0x10017dfa0,280,WasmAllocateObjectWrapper
code-creation,Builtin,2,16125,0x10017e0c0,80,WasmSubtypeCheck
code-creation,Builtin,2,16125,0x10017e120,12,WasmInt32ToNumber
code-creation,Builtin,2,16125,0x10017e140,136,WasmUint32ToNumber
code-creation,Builtin,2,16125,0x10017e1e0,140,UintPtr53ToNumber
code-creation,Builtin,2,16125,0x10017e280,120,WasmAtomicNotify
code-creation,Builtin,2,16125,0x10017e300,136,WasmI32AtomicWait64
code-creation,Builtin,2,16125,0x10017e3a0,136,WasmI64AtomicWait64
code-creation,Builtin,2,16125,0x10017e440,1436,CallRefIC
code-creation,Builtin,2,16125,0x10017e9e0,1668,WasmGetOwnProperty
code-creation,Builtin,2,16167,0x10017f080,40,WasmTrap
code-creation,Builtin,2,16167,0x10017f0c0,12,ThrowWasmTrapUnreachable
code-creation,Builtin,2,16167,0x10017f0e0,12,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,16167,0x10017f100,12,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,16167,0x10017f120,12,ThrowWasmTrapDivByZero
code-creation,Builtin,2,16167,0x10017f140,12,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,16167,0x10017f160,12,ThrowWasmTrapRemByZero
code-creation,Builtin,2,16167,0x10017f180,12,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,16167,0x10017f1a0,12,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,16208,0x10017f1c0,12,ThrowWasmTrapDataSegmentOutOfBounds
code-creation,Builtin,2,16208,0x10017f1e0,12,ThrowWasmTrapElementSegmentOutOfBounds
code-creation,Builtin,2,16208,0x10017f200,12,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,16208,0x10017f220,12,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,16208,0x10017f240,12,ThrowWasmTrapNullDereference
code-creation,Builtin,2,16208,0x10017f260,12,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,16208,0x10017f280,12,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,16208,0x10017f2a0,12,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,16208,0x10017f2c0,664,ExperimentalWasmConvertArrayToString
code-creation,Builtin,2,16250,0x10017f560,928,ExperimentalWasmConvertStringToArray
code-creation,Builtin,2,16250,0x10017f920,136,WasmStringNewWtf8
code-creation,Builtin,2,16250,0x10017f9c0,144,WasmStringNewWtf8Array
code-creation,Builtin,2,16250,0x10017fa60,128,WasmStringNewWtf16
code-creation,Builtin,2,16250,0x10017fb00,144,WasmStringNewWtf16Array
code-creation,Builtin,2,16250,0x10017fba0,44,WasmStringConst
code-creation,Builtin,2,16250,0x10017fbe0,88,WasmStringMeasureUtf8
code-creation,Builtin,2,16250,0x10017fc40,88,WasmStringMeasureWtf8
code-creation,Builtin,2,16250,0x10017fca0,148,WasmStringEncodeWtf8
code-creation,Builtin,2,16250,0x10017fd40,132,WasmStringEncodeWtf8Array
code-creation,Builtin,2,16292,0x10017fde0,136,WasmStringEncodeWtf16
code-creation,Builtin,2,16292,0x10017fe80,816,WasmStringEncodeWtf16Array
code-creation,Builtin,2,16292,0x1001801c0,20,WasmStringConcat
code-creation,Builtin,2,16292,0x1001801e0,128,WasmStringEqual
code-creation,Builtin,2,16292,0x100180280,124,WasmStringIsUSVSequence
code-creation,Builtin,2,16292,0x100180300,40,WasmStringAsWtf8
code-creation,Builtin,2,16292,0x100180340,336,WasmStringViewWtf8Advance
code-creation,Builtin,2,16292,0x1001804a0,212,WasmStringViewWtf8Encode
code-creation,Builtin,2,16292,0x100180580,180,WasmStringViewWtf8Slice
code-creation,Builtin,2,16333,0x100180640,588,WasmStringViewWtf16GetCodeUnit
code-creation,Builtin,2,16333,0x1001808a0,176,WasmStringViewWtf16Encode
code-creation,Builtin,2,16333,0x100180960,2548,WasmStringViewWtf16Slice
code-creation,Builtin,2,16333,0x100181360,120,WasmStringAsIter
code-creation,Builtin,2,16333,0x1001813e0,1224,WasmStringViewIterNext
code-creation,Builtin,2,16333,0x1001818c0,1308,WasmStringViewIterAdvance
code-creation,Builtin,2,16333,0x100181de0,1264,WasmStringViewIterRewind
code-creation,Builtin,2,16333,0x1001822e0,3964,WasmStringViewIterSlice
code-creation,Builtin,2,16333,0x100183260,64,WasmExternInternalize
code-creation,Builtin,2,16375,0x1001832c0,116,WasmExternExternalize
code-creation,Builtin,2,16375,0x100183340,168,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,16375,0x100183400,28,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,16375,0x100183420,136,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,16375,0x1001834c0,132,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,16375,0x100183560,28,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,16375,0x100183580,256,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,16375,0x1001836a0,288,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,16375,0x1001837e0,28,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,16417,0x100183800,28,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,16417,0x100183820,28,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,16417,0x100183840,28,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,16417,0x100183860,152,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,16417,0x100183900,12,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,16417,0x100183920,52,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,16417,0x100183960,52,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,16417,0x1001839a0,52,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,16417,0x1001839e0,40,LoadNoHasPropertyCheck_GenericElementsAccessor_0
code-creation,Builtin,2,16458,0x100183a20,3664,Load_GenericElementsAccessor_0
code-creation,Builtin,2,16458,0x100184880,44,Store_GenericElementsAccessor_0
code-creation,Builtin,2,16458,0x1001848c0,48,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,16458,0x100184900,28,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,16458,0x100184920,180,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,16458,0x1001849e0,188,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,16458,0x100184aa0,136,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,16458,0x100184b40,36,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,16458,0x100184b80,192,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,16500,0x100184c60,132,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,16500,0x100184d00,32,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,16500,0x100184d40,188,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,16500,0x100184e00,28,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,16500,0x100184e20,32,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,16500,0x100184e60,268,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,16500,0x100184f80,256,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,16500,0x1001850a0,72,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,16500,0x100185100,228,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,16542,0x100185200,288,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,16542,0x100185340,72,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,16542,0x1001853a0,228,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,16542,0x1001854a0,28,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,16542,0x1001854c0,32,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,16542,0x100185500,188,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,16542,0x1001855c0,28,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,16542,0x1001855e0,32,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,16583,0x100185620,188,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,16583,0x1001856e0,28,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,16583,0x100185700,32,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,16583,0x100185740,188,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,16583,0x100185800,28,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,16583,0x100185820,32,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,16583,0x100185860,188,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,16583,0x100185920,152,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,16583,0x1001859c0,180,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,16625,0x100185a80,188,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,16625,0x100185b40,8,CollatorConstructor
code-creation,Builtin,2,16625,0x100185b60,8,CollatorInternalCompare
code-creation,Builtin,2,16625,0x100185b80,8,CollatorPrototypeCompare
code-creation,Builtin,2,16625,0x100185ba0,8,CollatorSupportedLocalesOf
code-creation,Builtin,2,16625,0x100185bc0,8,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,16625,0x100185be0,8,DatePrototypeToLocaleDateString
code-creation,Builtin,2,16625,0x100185c00,8,DatePrototypeToLocaleString
code-creation,Builtin,2,16625,0x100185c20,8,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,16667,0x100185c40,8,DateTimeFormatConstructor
code-creation,Builtin,2,16667,0x100185c60,8,DateTimeFormatInternalFormat
code-creation,Builtin,2,16667,0x100185c80,8,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,16667,0x100185ca0,8,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,16667,0x100185cc0,8,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,16667,0x100185ce0,8,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,16667,0x100185d00,8,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,16667,0x100185d20,8,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,16667,0x100185d40,8,DisplayNamesConstructor
code-creation,Builtin,2,16708,0x100185d60,8,DisplayNamesPrototypeOf
code-creation,Builtin,2,16708,0x100185d80,8,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,16708,0x100185da0,8,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,16708,0x100185dc0,8,DurationFormatConstructor
code-creation,Builtin,2,16708,0x100185de0,8,DurationFormatPrototypeFormat
code-creation,Builtin,2,16708,0x100185e00,8,DurationFormatPrototypeFormatToParts
code-creation,Builtin,2,16708,0x100185e20,8,DurationFormatPrototypeResolvedOptions
code-creation,Builtin,2,16708,0x100185e40,8,DurationFormatSupportedLocalesOf
code-creation,Builtin,2,16708,0x100185e60,8,IntlGetCanonicalLocales
code-creation,Builtin,2,16750,0x100185e80,8,IntlSupportedValuesOf
code-creation,Builtin,2,16750,0x100185ea0,8,ListFormatConstructor
code-creation,Builtin,2,16750,0x100185ec0,248,ListFormatPrototypeFormat
code-creation,Builtin,2,16750,0x100185fc0,248,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,16750,0x1001860c0,8,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,16750,0x1001860e0,8,ListFormatSupportedLocalesOf
code-creation,Builtin,2,16750,0x100186100,8,LocaleConstructor
code-creation,Builtin,2,16750,0x100186120,8,LocalePrototypeBaseName
code-creation,Builtin,2,16750,0x100186140,8,LocalePrototypeCalendar
code-creation,Builtin,2,16792,0x100186160,8,LocalePrototypeCalendars
code-creation,Builtin,2,16792,0x100186180,8,LocalePrototypeCaseFirst
code-creation,Builtin,2,16792,0x1001861a0,8,LocalePrototypeCollation
code-creation,Builtin,2,16792,0x1001861c0,8,LocalePrototypeCollations
code-creation,Builtin,2,16792,0x1001861e0,8,LocalePrototypeHourCycle
code-creation,Builtin,2,16792,0x100186200,8,LocalePrototypeHourCycles
code-creation,Builtin,2,16792,0x100186220,8,LocalePrototypeLanguage
code-creation,Builtin,2,16792,0x100186240,8,LocalePrototypeMaximize
code-creation,Builtin,2,16792,0x100186260,8,LocalePrototypeMinimize
code-creation,Builtin,2,16792,0x100186280,8,LocalePrototypeNumeric
code-creation,Builtin,2,16833,0x1001862a0,8,LocalePrototypeNumberingSystem
code-creation,Builtin,2,16833,0x1001862c0,8,LocalePrototypeNumberingSystems
code-creation,Builtin,2,16833,0x1001862e0,8,LocalePrototypeRegion
code-creation,Builtin,2,16833,0x100186300,8,LocalePrototypeScript
code-creation,Builtin,2,16833,0x100186320,8,LocalePrototypeTextInfo
code-creation,Builtin,2,16833,0x100186340,8,LocalePrototypeTimeZones
code-creation,Builtin,2,16833,0x100186360,8,LocalePrototypeToString
code-creation,Builtin,2,16833,0x100186380,8,LocalePrototypeWeekInfo
code-creation,Builtin,2,16833,0x1001863a0,8,NumberFormatConstructor
code-creation,Builtin,2,16875,0x1001863c0,8,NumberFormatInternalFormatNumber
code-creation,Builtin,2,16875,0x1001863e0,8,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,16875,0x100186400,8,NumberFormatPrototypeFormatRange
code-creation,Builtin,2,16875,0x100186420,8,NumberFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,16875,0x100186440,8,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,16875,0x100186460,8,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,16875,0x100186480,8,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,16875,0x1001864a0,8,PluralRulesConstructor
code-creation,Builtin,2,16875,0x1001864c0,8,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,16875,0x1001864e0,8,PluralRulesPrototypeSelect
code-creation,Builtin,2,16917,0x100186500,8,PluralRulesPrototypeSelectRange
code-creation,Builtin,2,16917,0x100186520,8,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,16917,0x100186540,8,RelativeTimeFormatConstructor
code-creation,Builtin,2,16917,0x100186560,8,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,16917,0x100186580,8,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,16917,0x1001865a0,8,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,16917,0x1001865c0,8,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,16917,0x1001865e0,8,SegmenterConstructor
code-creation,Builtin,2,16917,0x100186600,8,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,16958,0x100186620,8,SegmenterPrototypeSegment
code-creation,Builtin,2,16958,0x100186640,8,SegmenterSupportedLocalesOf
code-creation,Builtin,2,16958,0x100186660,8,SegmentIteratorPrototypeNext
code-creation,Builtin,2,16958,0x100186680,8,SegmentsPrototypeContaining
code-creation,Builtin,2,16958,0x1001866a0,8,SegmentsPrototypeIterator
code-creation,Builtin,2,16958,0x1001866c0,8,StringPrototypeNormalizeIntl
code-creation,Builtin,2,16958,0x1001866e0,8,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,16958,0x100186700,8,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,16958,0x100186720,216,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,17000,0x100186800,8,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,17000,0x100186820,716,StringToLowerCaseIntl
code-creation,Builtin,2,17000,0x100186b00,8,TemporalCalendarPrototypeEra
code-creation,Builtin,2,17000,0x100186b20,8,TemporalCalendarPrototypeEraYear
code-creation,Builtin,2,17000,0x100186b40,8,TemporalPlainDatePrototypeEra
code-creation,Builtin,2,17000,0x100186b60,8,TemporalPlainDatePrototypeEraYear
code-creation,Builtin,2,17000,0x100186b80,8,TemporalPlainDateTimePrototypeEra
code-creation,Builtin,2,17000,0x100186ba0,8,TemporalPlainDateTimePrototypeEraYear
code-creation,Builtin,2,17000,0x100186bc0,8,TemporalPlainYearMonthPrototypeEra
code-creation,Builtin,2,17042,0x100186be0,8,TemporalPlainYearMonthPrototypeEraYear
code-creation,Builtin,2,17042,0x100186c00,8,TemporalZonedDateTimePrototypeEra
code-creation,Builtin,2,17042,0x100186c20,8,TemporalZonedDateTimePrototypeEraYear
code-creation,Builtin,2,17042,0x100186c40,8,V8BreakIteratorConstructor
code-creation,Builtin,2,17042,0x100186c60,8,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,17042,0x100186c80,8,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,17042,0x100186ca0,8,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,17042,0x100186cc0,8,V8BreakIteratorInternalFirst
code-creation,Builtin,2,17042,0x100186ce0,8,V8BreakIteratorInternalNext
code-creation,Builtin,2,17083,0x100186d00,8,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,17083,0x100186d20,8,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,17083,0x100186d40,8,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,17083,0x100186d60,8,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,17083,0x100186d80,8,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,17083,0x100186da0,8,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,17083,0x100186dc0,8,V8BreakIteratorSupportedLocalesOf
tick,0x1a52d6ec0,17083,0,0x0,6
tick,0x1a538c730,17125,0,0x0,6
tick,0x1a52d7318,17125,0,0x0,6
tick,0x1a5225c68,17125,0,0x0,6
tick,0x1a5325c3c,17125,0,0x0,6
tick,0x1a5325c3c,17125,0,0x0,6
code-creation,BytecodeHandler,0,17125,0x100186de0,28,Wide
code-creation,BytecodeHandler,0,17125,0x100186e00,28,ExtraWide
code-creation,BytecodeHandler,0,17125,0x100186e20,124,DebugBreakWide
code-creation,BytecodeHandler,0,17125,0x100186ea0,124,DebugBreakExtraWide
code-creation,BytecodeHandler,0,17125,0x100186f20,188,DebugBreak0
code-creation,BytecodeHandler,0,17125,0x100186fe0,124,DebugBreak1
code-creation,BytecodeHandler,0,17125,0x100187060,124,DebugBreak2
code-creation,BytecodeHandler,0,17125,0x1001870e0,124,DebugBreak3
code-creation,BytecodeHandler,0,17125,0x100187160,124,DebugBreak4
code-creation,BytecodeHandler,0,17125,0x1001871e0,124,DebugBreak5
code-creation,BytecodeHandler,0,17167,0x100187260,124,DebugBreak6
code-creation,BytecodeHandler,0,17167,0x1001872e0,44,Ldar
code-creation,BytecodeHandler,0,17167,0x100187320,76,LdaZero
code-creation,BytecodeHandler,0,17167,0x100187380,84,LdaSmi
code-creation,BytecodeHandler,0,17167,0x1001873e0,76,LdaUndefined
code-creation,BytecodeHandler,0,17167,0x100187440,76,LdaNull
code-creation,BytecodeHandler,0,17167,0x1001874a0,76,LdaTheHole
code-creation,BytecodeHandler,0,17167,0x100187500,28,LdaTrue
code-creation,BytecodeHandler,0,17167,0x100187520,28,LdaFalse
code-creation,BytecodeHandler,0,17167,0x100187540,92,LdaConstant
code-creation,BytecodeHandler,0,17167,0x1001875a0,168,LdaContextSlot
code-creation,BytecodeHandler,0,17167,0x100187660,168,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,17167,0x100187720,112,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,17167,0x1001877a0,112,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,17167,0x100187820,44,Star
code-creation,BytecodeHandler,0,17208,0x100187860,60,Mov
code-creation,BytecodeHandler,0,17208,0x1001878a0,52,PushContext
code-creation,BytecodeHandler,0,17208,0x1001878e0,48,PopContext
code-creation,BytecodeHandler,0,17208,0x100187920,64,TestReferenceEqual
code-creation,BytecodeHandler,0,17208,0x100187980,64,TestUndetectable
code-creation,BytecodeHandler,0,17208,0x1001879e0,52,TestNull
code-creation,BytecodeHandler,0,17208,0x100187a20,52,TestUndefined
code-creation,BytecodeHandler,0,17208,0x100187a60,388,TestTypeOf
code-creation,BytecodeHandler,0,17208,0x100187c00,6252,LdaGlobal
code-creation,BytecodeHandler,0,17208,0x100189480,4736,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,17208,0x10018a720,184,StaGlobal
code-creation,BytecodeHandler,0,17208,0x10018a7e0,188,StaContextSlot
code-creation,BytecodeHandler,0,17208,0x10018a8a0,132,StaCurrentContextSlot
code-creation,BytecodeHandler,0,17208,0x10018a940,152,LdaLookupSlot
code-creation,BytecodeHandler,0,17250,0x10018a9e0,316,LdaLookupContextSlot
code-creation,BytecodeHandler,0,17250,0x10018ab20,5068,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,17250,0x10018bf00,152,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,17250,0x10018bfa0,316,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,17250,0x10018c0e0,5004,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,17250,0x10018d480,256,StaLookupSlot
code-creation,BytecodeHandler,0,17250,0x10018d5a0,5348,GetNamedProperty
code-creation,BytecodeHandler,0,17250,0x10018eaa0,208,GetNamedPropertyFromSuper
code-creation,BytecodeHandler,0,17250,0x10018eb80,232,GetKeyedProperty
code-creation,BytecodeHandler,0,17292,0x10018ec80,216,LdaModuleVariable
code-creation,BytecodeHandler,0,17292,0x10018ed60,348,StaModuleVariable
code-creation,BytecodeHandler,0,17292,0x10018eec0,200,SetNamedProperty
code-creation,BytecodeHandler,0,17292,0x10018efa0,200,DefineNamedOwnProperty
code-creation,BytecodeHandler,0,17292,0x10018f080,192,SetKeyedProperty
code-creation,BytecodeHandler,0,17292,0x10018f160,192,DefineKeyedOwnProperty
code-creation,BytecodeHandler,0,17292,0x10018f240,192,StaInArrayLiteral
code-creation,BytecodeHandler,0,17292,0x10018f320,228,DefineKeyedOwnPropertyInLiteral
code-creation,BytecodeHandler,0,17292,0x10018f420,1460,Add
code-creation,BytecodeHandler,0,17292,0x10018f9e0,1444,Sub
code-creation,BytecodeHandler,0,17333,0x10018ffa0,1548,Mul
code-creation,BytecodeHandler,0,17333,0x1001905c0,1136,Div
code-creation,BytecodeHandler,0,17333,0x100190a40,892,Mod
code-creation,BytecodeHandler,0,17333,0x100190dc0,940,Exp
code-creation,BytecodeHandler,0,17333,0x100191180,888,BitwiseOr
code-creation,BytecodeHandler,0,17333,0x100191500,888,BitwiseXor
code-creation,BytecodeHandler,0,17333,0x100191880,888,BitwiseAnd
code-creation,BytecodeHandler,0,17333,0x100191c00,888,ShiftLeft
code-creation,BytecodeHandler,0,17333,0x100191f80,888,ShiftRight
code-creation,BytecodeHandler,0,17333,0x100192300,1004,ShiftRightLogical
code-creation,BytecodeHandler,0,17375,0x100192700,1376,AddSmi
code-creation,BytecodeHandler,0,17375,0x100192c80,1412,SubSmi
code-creation,BytecodeHandler,0,17375,0x100193220,1468,MulSmi
code-creation,BytecodeHandler,0,17375,0x1001937e0,1188,DivSmi
code-creation,BytecodeHandler,0,17375,0x100193ca0,844,ModSmi
code-creation,BytecodeHandler,0,17375,0x100194000,852,ExpSmi
code-creation,BytecodeHandler,0,17375,0x100194360,472,BitwiseOrSmi
code-creation,BytecodeHandler,0,17375,0x100194540,472,BitwiseXorSmi
code-creation,BytecodeHandler,0,17375,0x100194720,472,BitwiseAndSmi
code-creation,BytecodeHandler,0,17375,0x100194900,496,ShiftLeftSmi
code-creation,BytecodeHandler,0,17417,0x100194b00,484,ShiftRightSmi
code-creation,BytecodeHandler,0,17417,0x100194d00,800,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,17417,0x100195040,664,Inc
code-creation,BytecodeHandler,0,17417,0x1001952e0,664,Dec
code-creation,BytecodeHandler,0,17417,0x100195580,632,Negate
code-creation,BytecodeHandler,0,17417,0x100195800,456,BitwiseNot
code-creation,BytecodeHandler,0,17417,0x1001959e0,144,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,17417,0x100195a80,44,LogicalNot
code-creation,BytecodeHandler,0,17417,0x100195ac0,216,TypeOf
code-creation,BytecodeHandler,0,17417,0x100195ba0,136,DeletePropertyStrict
code-creation,BytecodeHandler,0,17458,0x100195c40,136,DeletePropertySloppy
code-creation,BytecodeHandler,0,17458,0x100195ce0,52,GetSuperConstructor
code-creation,BytecodeHandler,0,17458,0x100195d20,380,FindNonDefaultConstructorOrConstruct
code-creation,BytecodeHandler,0,17458,0x100195ea0,928,CallAnyReceiver
code-creation,BytecodeHandler,0,17458,0x100196260,928,CallProperty
code-creation,BytecodeHandler,0,17458,0x100196620,948,CallProperty0
code-creation,BytecodeHandler,0,17458,0x1001969e0,960,CallProperty1
code-creation,BytecodeHandler,0,17458,0x100196dc0,980,CallProperty2
code-creation,BytecodeHandler,0,17458,0x1001971a0,932,CallUndefinedReceiver
code-creation,BytecodeHandler,0,17458,0x100197560,924,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,17500,0x100197900,936,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,17500,0x100197cc0,956,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,17500,0x100198080,928,CallWithSpread
code-creation,BytecodeHandler,0,17500,0x100198440,144,CallRuntime
code-creation,BytecodeHandler,0,17500,0x1001984e0,188,CallRuntimeForPair
code-creation,BytecodeHandler,0,17500,0x1001985a0,104,CallJSRuntime
code-creation,BytecodeHandler,0,17500,0x100198620,1456,InvokeIntrinsic
code-creation,BytecodeHandler,0,17500,0x100198be0,972,Construct
code-creation,BytecodeHandler,0,17500,0x100198fc0,496,ConstructWithSpread
code-creation,BytecodeHandler,0,17542,0x1001991c0,1968,TestEqual
code-creation,BytecodeHandler,0,17542,0x100199980,928,TestEqualStrict
code-creation,BytecodeHandler,0,17542,0x100199d40,1608,TestLessThan
code-creation,BytecodeHandler,0,17542,0x10019a3a0,1608,TestGreaterThan
code-creation,BytecodeHandler,0,17542,0x10019aa00,1608,TestLessThanOrEqual
code-creation,BytecodeHandler,0,17542,0x10019b060,1608,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,17542,0x10019b6c0,852,TestInstanceOf
code-creation,BytecodeHandler,0,17542,0x10019ba20,176,TestIn
code-creation,BytecodeHandler,0,17542,0x10019bae0,132,ToName
code-creation,BytecodeHandler,0,17542,0x10019bb80,236,ToNumber
code-creation,BytecodeHandler,0,17583,0x10019bc80,256,ToNumeric
code-creation,BytecodeHandler,0,17583,0x10019bda0,132,ToObject
code-creation,BytecodeHandler,0,17583,0x10019be40,156,ToString
code-creation,BytecodeHandler,0,17583,0x10019bee0,460,CreateRegExpLiteral
code-creation,BytecodeHandler,0,17583,0x10019c0c0,1432,CreateArrayLiteral
code-creation,BytecodeHandler,0,17583,0x10019c660,108,CreateArrayFromIterable
code-creation,BytecodeHandler,0,17583,0x10019c6e0,840,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,17583,0x10019ca40,2156,CreateObjectLiteral
code-creation,BytecodeHandler,0,17583,0x10019d2c0,252,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,17583,0x10019d3c0,192,CloneObject
code-creation,BytecodeHandler,0,17625,0x10019d4a0,240,GetTemplateObject
code-creation,BytecodeHandler,0,17625,0x10019d5a0,380,CreateClosure
code-creation,BytecodeHandler,0,17625,0x10019d720,140,CreateBlockContext
code-creation,BytecodeHandler,0,17625,0x10019d7c0,152,CreateCatchContext
code-creation,BytecodeHandler,0,17625,0x10019d860,312,CreateFunctionContext
code-creation,BytecodeHandler,0,17625,0x10019d9a0,312,CreateEvalContext
code-creation,BytecodeHandler,0,17625,0x10019dae0,152,CreateWithContext
code-creation,BytecodeHandler,0,17625,0x10019db80,1976,CreateMappedArguments
code-creation,BytecodeHandler,0,17625,0x10019e340,664,CreateUnmappedArguments
code-creation,BytecodeHandler,0,17667,0x10019e5e0,720,CreateRestParameter
code-creation,BytecodeHandler,0,17667,0x10019e8c0,928,JumpLoop
code-creation,BytecodeHandler,0,17667,0x10019ec80,60,Jump
code-creation,BytecodeHandler,0,17667,0x10019ecc0,80,JumpConstant
code-creation,BytecodeHandler,0,17667,0x10019ed20,112,JumpIfNullConstant
code-creation,BytecodeHandler,0,17667,0x10019eda0,112,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,17667,0x10019ee20,112,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,17667,0x10019eea0,112,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,17667,0x10019ef20,124,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,17667,0x10019efa0,112,JumpIfTrueConstant
code-creation,BytecodeHandler,0,17708,0x10019f020,112,JumpIfFalseConstant
code-creation,BytecodeHandler,0,17708,0x10019f0a0,120,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,17708,0x10019f120,208,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,17708,0x10019f200,208,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,17708,0x10019f2e0,188,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,17708,0x10019f3a0,188,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,17708,0x10019f460,92,JumpIfTrue
code-creation,BytecodeHandler,0,17708,0x10019f4c0,92,JumpIfFalse
code-creation,BytecodeHandler,0,17708,0x10019f520,92,JumpIfNull
code-creation,BytecodeHandler,0,17708,0x10019f580,92,JumpIfNotNull
code-creation,BytecodeHandler,0,17750,0x10019f5e0,92,JumpIfUndefined
code-creation,BytecodeHandler,0,17750,0x10019f640,92,JumpIfNotUndefined
code-creation,BytecodeHandler,0,17750,0x10019f6a0,104,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,17750,0x10019f720,100,JumpIfJSReceiver
code-creation,BytecodeHandler,0,17750,0x10019f7a0,140,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,17750,0x10019f840,560,ForInEnumerate
code-creation,BytecodeHandler,0,17750,0x10019fa80,268,ForInPrepare
code-creation,BytecodeHandler,0,17750,0x10019fba0,76,ForInContinue
code-creation,BytecodeHandler,0,17750,0x10019fc00,304,ForInNext
code-creation,BytecodeHandler,0,17792,0x10019fd40,48,ForInStep
code-creation,BytecodeHandler,0,17792,0x10019fd80,36,SetPendingMessage
code-creation,BytecodeHandler,0,17792,0x10019fdc0,132,Throw
code-creation,BytecodeHandler,0,17792,0x10019fe60,132,ReThrow
code-creation,BytecodeHandler,0,17792,0x10019ff00,132,Return
code-creation,BytecodeHandler,0,17792,0x10019ffa0,232,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,17792,0x1001a00a0,152,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,17792,0x1001a0140,152,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,17792,0x1001a01e0,176,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,17833,0x1001a02a0,148,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,17833,0x1001a0340,532,SuspendGenerator
code-creation,BytecodeHandler,0,17833,0x1001a0560,176,ResumeGenerator
code-creation,BytecodeHandler,0,17833,0x1001a0620,180,GetIterator
tick,0x1a5325c3c,17833,0,0x0,6
code-creation,BytecodeHandler,0,18000,0x1001a06e0,128,Debugger
code-creation,BytecodeHandler,0,18000,0x1001a0780,136,IncBlockCounter
code-creation,BytecodeHandler,0,18000,0x1001a0820,76,Abort
code-creation,BytecodeHandler,0,18000,0x1001a0880,44,Star0
code-creation,BytecodeHandler,0,18000,0x1001a08c0,72,Illegal
code-creation,BytecodeHandler,0,18000,0x1001a0920,128,DebugBreak1.Wide
code-creation,BytecodeHandler,0,18000,0x1001a09c0,128,DebugBreak2.Wide
code-creation,BytecodeHandler,0,18000,0x1001a0a60,128,DebugBreak3.Wide
code-creation,BytecodeHandler,0,18000,0x1001a0b00,128,DebugBreak4.Wide
code-creation,BytecodeHandler,0,18000,0x1001a0ba0,128,DebugBreak5.Wide
code-creation,BytecodeHandler,0,18000,0x1001a0c40,128,DebugBreak6.Wide
code-creation,BytecodeHandler,0,18000,0x1001a0ce0,44,Ldar.Wide
code-creation,BytecodeHandler,0,18000,0x1001a0d20,40,LdaSmi.Wide
code-creation,BytecodeHandler,0,18000,0x1001a0d60,48,LdaConstant.Wide
code-creation,BytecodeHandler,0,18000,0x1001a0da0,128,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,18042,0x1001a0e40,128,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,18042,0x1001a0ee0,72,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,18042,0x1001a0f40,72,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,18042,0x1001a0fa0,44,Star.Wide
code-creation,BytecodeHandler,0,18042,0x1001a0fe0,60,Mov.Wide
code-creation,BytecodeHandler,0,18042,0x1001a1020,52,PushContext.Wide
code-creation,BytecodeHandler,0,18042,0x1001a1060,48,PopContext.Wide
code-creation,BytecodeHandler,0,18042,0x1001a10a0,64,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,18042,0x1001a1100,4892,LdaGlobal.Wide
code-creation,BytecodeHandler,0,18042,0x1001a2420,4804,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,18042,0x1001a3700,188,StaGlobal.Wide
code-creation,BytecodeHandler,0,18042,0x1001a37c0,188,StaContextSlot.Wide
code-creation,BytecodeHandler,0,18042,0x1001a3880,132,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,18083,0x1001a3920,156,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,18083,0x1001a39c0,320,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,18083,0x1001a3b20,5144,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,18083,0x1001a4f40,156,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,18083,0x1001a4fe0,320,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,18083,0x1001a5140,5076,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,18083,0x1001a6520,252,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,18083,0x1001a6620,5384,GetNamedProperty.Wide
code-creation,BytecodeHandler,0,18083,0x1001a7b40,212,GetNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,18083,0x1001a7c20,180,GetKeyedProperty.Wide
code-creation,BytecodeHandler,0,18083,0x1001a7ce0,216,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,18125,0x1001a7dc0,352,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,18125,0x1001a7f40,204,SetNamedProperty.Wide
code-creation,BytecodeHandler,0,18125,0x1001a8020,204,DefineNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,18125,0x1001a8100,196,SetKeyedProperty.Wide
code-creation,BytecodeHandler,0,18125,0x1001a81e0,196,DefineKeyedOwnProperty.Wide
code-creation,BytecodeHandler,0,18125,0x1001a82c0,196,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,18125,0x1001a83a0,232,DefineKeyedOwnPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,18125,0x1001a84a0,1424,Add.Wide
code-creation,BytecodeHandler,0,18125,0x1001a8a40,1404,Sub.Wide
code-creation,BytecodeHandler,0,18125,0x1001a8fc0,1508,Mul.Wide
code-creation,BytecodeHandler,0,18125,0x1001a95c0,1148,Div.Wide
code-creation,BytecodeHandler,0,18125,0x1001a9a40,900,Mod.Wide
code-creation,BytecodeHandler,0,18125,0x1001a9de0,960,Exp.Wide
code-creation,BytecodeHandler,0,18125,0x1001aa1c0,904,BitwiseOr.Wide
code-creation,BytecodeHandler,0,18167,0x1001aa560,904,BitwiseXor.Wide
code-creation,BytecodeHandler,0,18167,0x1001aa900,904,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,18167,0x1001aaca0,904,ShiftLeft.Wide
code-creation,BytecodeHandler,0,18167,0x1001ab040,904,ShiftRight.Wide
code-creation,BytecodeHandler,0,18167,0x1001ab3e0,1020,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,18167,0x1001ab7e0,1348,AddSmi.Wide
code-creation,BytecodeHandler,0,18167,0x1001abd40,1376,SubSmi.Wide
code-creation,BytecodeHandler,0,18167,0x1001ac2c0,1480,MulSmi.Wide
code-creation,BytecodeHandler,0,18167,0x1001ac8a0,1192,DivSmi.Wide
code-creation,BytecodeHandler,0,18167,0x1001acd60,844,ModSmi.Wide
code-creation,BytecodeHandler,0,18167,0x1001ad0c0,852,ExpSmi.Wide
code-creation,BytecodeHandler,0,18167,0x1001ad420,480,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,18167,0x1001ad620,480,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,18167,0x1001ad820,480,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,18167,0x1001ada20,504,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,18208,0x1001adc20,492,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,18208,0x1001ade20,808,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,18208,0x1001ae160,624,Inc.Wide
code-creation,BytecodeHandler,0,18208,0x1001ae3e0,624,Dec.Wide
code-creation,BytecodeHandler,0,18208,0x1001ae660,640,Negate.Wide
code-creation,BytecodeHandler,0,18208,0x1001ae900,464,BitwiseNot.Wide
code-creation,BytecodeHandler,0,18208,0x1001aeae0,140,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,18208,0x1001aeb80,140,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,18208,0x1001aec20,52,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,18208,0x1001aec60,384,FindNonDefaultConstructorOrConstruct.Wide
code-creation,BytecodeHandler,0,18208,0x1001aee00,936,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,18208,0x1001af1c0,936,CallProperty.Wide
code-creation,BytecodeHandler,0,18208,0x1001af580,948,CallProperty0.Wide
code-creation,BytecodeHandler,0,18208,0x1001af940,960,CallProperty1.Wide
code-creation,BytecodeHandler,0,18250,0x1001afd20,980,CallProperty2.Wide
code-creation,BytecodeHandler,0,18250,0x1001b0100,932,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,18250,0x1001b04c0,924,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,18250,0x1001b0860,936,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,18250,0x1001b0c20,956,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,18250,0x1001b0fe0,936,CallWithSpread.Wide
code-creation,BytecodeHandler,0,18250,0x1001b13a0,148,CallRuntime.Wide
code-creation,BytecodeHandler,0,18250,0x1001b1440,196,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,18250,0x1001b1520,108,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,18250,0x1001b15a0,1456,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,18250,0x1001b1b60,916,Construct.Wide
code-creation,BytecodeHandler,0,18250,0x1001b1f00,444,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,18292,0x1001b20c0,2000,TestEqual.Wide
code-creation,BytecodeHandler,0,18292,0x1001b28a0,936,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,18292,0x1001b2c60,1596,TestLessThan.Wide
code-creation,BytecodeHandler,0,18292,0x1001b32a0,1596,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,18292,0x1001b38e0,1596,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,18292,0x1001b3f20,1596,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,18292,0x1001b4560,860,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,18292,0x1001b48c0,180,TestIn.Wide
code-creation,BytecodeHandler,0,18292,0x1001b4980,136,ToName.Wide
code-creation,BytecodeHandler,0,18292,0x1001b4a20,240,ToNumber.Wide
code-creation,BytecodeHandler,0,18292,0x1001b4b20,260,ToNumeric.Wide
code-creation,BytecodeHandler,0,18292,0x1001b4c40,136,ToObject.Wide
code-creation,BytecodeHandler,0,18292,0x1001b4ce0,464,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,18292,0x1001b4ec0,1340,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,18333,0x1001b5400,840,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,18333,0x1001b5760,2060,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,18333,0x1001b5f80,196,CloneObject.Wide
code-creation,BytecodeHandler,0,18333,0x1001b6060,188,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,18333,0x1001b6120,376,CreateClosure.Wide
code-creation,BytecodeHandler,0,18333,0x1001b62a0,144,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,18333,0x1001b6340,156,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,18333,0x1001b63e0,312,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,18333,0x1001b6520,312,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,18333,0x1001b6660,156,CreateWithContext.Wide
code-creation,BytecodeHandler,0,18333,0x1001b6700,960,JumpLoop.Wide
code-creation,BytecodeHandler,0,18333,0x1001b6ae0,60,Jump.Wide
code-creation,BytecodeHandler,0,18333,0x1001b6b20,80,JumpConstant.Wide
code-creation,BytecodeHandler,0,18333,0x1001b6b80,112,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,18375,0x1001b6c00,112,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,18375,0x1001b6c80,112,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,18375,0x1001b6d00,112,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,18375,0x1001b6d80,124,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,18375,0x1001b6e00,112,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,18375,0x1001b6e80,112,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,18375,0x1001b6f00,120,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,18375,0x1001b6f80,208,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,18375,0x1001b7060,208,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,18375,0x1001b7140,188,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,18375,0x1001b7200,188,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,18375,0x1001b72c0,92,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,18417,0x1001b7320,92,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,18417,0x1001b7380,92,JumpIfNull.Wide
code-creation,BytecodeHandler,0,18417,0x1001b73e0,92,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,18417,0x1001b7440,92,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,18417,0x1001b74a0,92,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,18417,0x1001b7500,104,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,18417,0x1001b7580,100,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,18417,0x1001b7600,140,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,18417,0x1001b76a0,564,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,18417,0x1001b78e0,268,ForInPrepare.Wide
code-creation,BytecodeHandler,0,18417,0x1001b7a00,76,ForInContinue.Wide
code-creation,BytecodeHandler,0,18417,0x1001b7a60,308,ForInNext.Wide
code-creation,BytecodeHandler,0,18417,0x1001b7ba0,48,ForInStep.Wide
code-creation,BytecodeHandler,0,18458,0x1001b7be0,192,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,18458,0x1001b7cc0,180,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,18458,0x1001b7d80,148,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,18458,0x1001b7e20,532,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,18458,0x1001b8040,176,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,18458,0x1001b8100,184,GetIterator.Wide
code-creation,BytecodeHandler,0,18458,0x1001b81c0,140,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,18458,0x1001b8260,80,Abort.Wide
code-creation,BytecodeHandler,0,18458,0x1001b82c0,128,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,18458,0x1001b8360,128,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,18458,0x1001b8400,128,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,18458,0x1001b84a0,128,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,18458,0x1001b8540,128,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,18458,0x1001b85e0,128,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,18500,0x1001b8680,44,Ldar.ExtraWide
code-creation,BytecodeHandler,0,18500,0x1001b86c0,40,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,18500,0x1001b8700,48,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,18500,0x1001b8740,128,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,18500,0x1001b87e0,128,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,18500,0x1001b8880,72,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,18500,0x1001b88e0,72,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,18500,0x1001b8940,44,Star.ExtraWide
code-creation,BytecodeHandler,0,18500,0x1001b8980,60,Mov.ExtraWide
code-creation,BytecodeHandler,0,18500,0x1001b89c0,52,PushContext.ExtraWide
code-creation,BytecodeHandler,0,18500,0x1001b8a00,48,PopContext.ExtraWide
code-creation,BytecodeHandler,0,18542,0x1001b8a40,64,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,18542,0x1001b8aa0,4892,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,18542,0x1001b9dc0,4804,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,18542,0x1001bb0a0,188,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,18542,0x1001bb160,188,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,18542,0x1001bb220,132,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,18542,0x1001bb2c0,156,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,18542,0x1001bb360,320,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,18542,0x1001bb4c0,5144,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,18583,0x1001bc8e0,156,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,18583,0x1001bc980,320,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,18583,0x1001bcae0,5076,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,18583,0x1001bdec0,252,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,18583,0x1001bdfc0,5384,GetNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,18583,0x1001bf4e0,212,GetNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,18583,0x1001bf5c0,180,GetKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,18583,0x1001bf680,216,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,18625,0x1001bf760,352,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,18625,0x1001bf8e0,204,SetNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,18625,0x1001bf9c0,204,DefineNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,18625,0x1001bfaa0,196,SetKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,18625,0x1001bfb80,196,DefineKeyedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,18625,0x1001bfc60,196,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,18625,0x1001bfd40,232,DefineKeyedOwnPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,18625,0x1001bfe40,1424,Add.ExtraWide
code-creation,BytecodeHandler,0,18667,0x1001c03e0,1404,Sub.ExtraWide
code-creation,BytecodeHandler,0,18667,0x1001c0960,1508,Mul.ExtraWide
code-creation,BytecodeHandler,0,18667,0x1001c0f60,1148,Div.ExtraWide
code-creation,BytecodeHandler,0,18667,0x1001c13e0,900,Mod.ExtraWide
code-creation,BytecodeHandler,0,18667,0x1001c1780,960,Exp.ExtraWide
code-creation,BytecodeHandler,0,18667,0x1001c1b60,904,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,18667,0x1001c1f00,904,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,18667,0x1001c22a0,904,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,18667,0x1001c2640,904,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,18667,0x1001c29e0,904,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,18708,0x1001c2d80,1020,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,18708,0x1001c3180,1348,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,18708,0x1001c36e0,1376,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,18708,0x1001c3c60,1480,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,18708,0x1001c4240,1192,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,18708,0x1001c4700,844,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,18708,0x1001c4a60,852,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,18708,0x1001c4dc0,480,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,18708,0x1001c4fc0,480,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,18750,0x1001c51c0,480,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,18750,0x1001c53c0,504,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,18750,0x1001c55c0,492,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,18750,0x1001c57c0,808,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,18750,0x1001c5b00,624,Inc.ExtraWide
code-creation,BytecodeHandler,0,18750,0x1001c5d80,624,Dec.ExtraWide
code-creation,BytecodeHandler,0,18750,0x1001c6000,640,Negate.ExtraWide
code-creation,BytecodeHandler,0,18750,0x1001c62a0,464,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,18750,0x1001c6480,140,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,18792,0x1001c6520,140,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,18792,0x1001c65c0,52,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,18792,0x1001c6600,384,FindNonDefaultConstructorOrConstruct.ExtraWide
code-creation,BytecodeHandler,0,18792,0x1001c67a0,936,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,18792,0x1001c6b60,936,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,18792,0x1001c6f20,948,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,18792,0x1001c72e0,960,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,18792,0x1001c76c0,980,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,18792,0x1001c7aa0,932,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,18833,0x1001c7e60,924,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,18833,0x1001c8200,936,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,18833,0x1001c85c0,956,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,18833,0x1001c8980,936,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,18833,0x1001c8d40,148,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,18833,0x1001c8de0,196,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,18833,0x1001c8ec0,108,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,18833,0x1001c8f40,1456,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,18833,0x1001c9500,916,Construct.ExtraWide
code-creation,BytecodeHandler,0,18875,0x1001c98a0,444,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,18875,0x1001c9a60,2000,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,18875,0x1001ca240,936,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,18875,0x1001ca600,1596,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,18875,0x1001cac40,1596,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,18875,0x1001cb280,1596,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,18875,0x1001cb8c0,1596,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,18875,0x1001cbf00,860,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,18917,0x1001cc260,180,TestIn.ExtraWide
code-creation,BytecodeHandler,0,18917,0x1001cc320,136,ToName.ExtraWide
code-creation,BytecodeHandler,0,18917,0x1001cc3c0,240,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,18917,0x1001cc4c0,260,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,18917,0x1001cc5e0,136,ToObject.ExtraWide
code-creation,BytecodeHandler,0,18917,0x1001cc680,464,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,18917,0x1001cc860,1340,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,18917,0x1001ccda0,840,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,18917,0x1001cd100,2060,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,18917,0x1001cd920,196,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,18958,0x1001cda00,188,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,18958,0x1001cdac0,376,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,18958,0x1001cdc40,144,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,18958,0x1001cdce0,156,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,18958,0x1001cdd80,312,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,18958,0x1001cdec0,312,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,18958,0x1001ce000,156,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,18958,0x1001ce0a0,960,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,18958,0x1001ce480,60,Jump.ExtraWide
code-creation,BytecodeHandler,0,19000,0x1001ce4c0,80,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,19000,0x1001ce520,112,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,19000,0x1001ce5a0,112,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,19000,0x1001ce620,112,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,19000,0x1001ce6a0,112,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,19000,0x1001ce720,124,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,19000,0x1001ce7a0,112,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,19000,0x1001ce820,112,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,19000,0x1001ce8a0,120,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,19042,0x1001ce920,208,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,19042,0x1001cea00,208,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,19042,0x1001ceae0,188,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,19042,0x1001ceba0,188,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,19042,0x1001cec60,92,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,19042,0x1001cecc0,92,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,19042,0x1001ced20,92,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,19042,0x1001ced80,92,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,19042,0x1001cede0,92,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,19083,0x1001cee40,92,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,19083,0x1001ceea0,104,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,19083,0x1001cef20,100,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,19083,0x1001cefa0,140,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,19083,0x1001cf040,564,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,19083,0x1001cf280,268,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,19083,0x1001cf3a0,76,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,19083,0x1001cf400,308,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,19083,0x1001cf540,48,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,19125,0x1001cf580,192,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,19125,0x1001cf660,180,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,19125,0x1001cf720,148,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,19125,0x1001cf7c0,532,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,19125,0x1001cf9e0,176,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,19125,0x1001cfaa0,184,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,19125,0x1001cfb60,140,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,19125,0x1001cfc00,80,Abort.ExtraWide
tick,0x1a532274c,19167,0,0x0,6
tick,0x10058c214,21000,0,0x0,5
new,MemoryChunk,0xc429f1c0000,262144
new,MemoryChunk,0x19bd46140000,262144
tick,0x1008f7a04,22250,0,0x0,5
new,MemoryChunk,0x3c71b40c0000,262144
new,MemoryChunk,0x16645fa40000,262144
tick,0x1006a80d0,23500,0,0x0,5
tick,0x100463100,24792,0,0x0,5
tick,0x100964ca4,26000,0,0x0,6
tick,0x1a5329070,27292,0,0x0,6
tick,0x1a5323cdc,28667,0,0x0,6
tick,0x100843014,29792,0,0x0,2
tick,0x1037f8e50,31042,0,0x0,2
code-creation,Eval,10,31958,0x16645fa75896,5, node:internal/main/run_main_module:1:1,0x16645fa75750,~
script-source,382,node:internal/main/run_main_module,'use strict';\n\nconst { RegExpPrototypeExec } = primordials;\n\nconst {\n  prepareMainThreadExecution\x2C\n  markBootstrapComplete\n} = require('internal/process/pre_execution');\n\nprepareMainThreadExecution(true);\n\nmarkBootstrapComplete();\n\n// Necessary to reset RegExp statics before user code runs.\nRegExpPrototypeExec(/^/\x2C '');\n\n// Note: this loads the module through the ESM loader if the module is\n// determined to be an ES module. This hangs from the CJS module loader\n// because we currently allow monkey-patching of the module loaders\n// in the preloaded scripts through require('module').\n// runMain here might be monkey-patched by users in --require.\n// XXX: the monkey-patchability here should probably be deprecated.\nrequire('internal/modules/cjs/loader').Module.runMain(process.argv[1]);\n
code-source-info,0x16645fa75896,382,0,792,C0O0C4O792,,
code-creation,JS,10,32000,0x16645fa7595e,82, node:internal/main/run_main_module:1:1,0x16645fa75810,~
code-source-info,0x16645fa7595e,382,0,792,C0O23C5O127C8O127C13O71C18O101C23O171C25O171C29O206C32O292C41O292C46O720C49O720C54O758C59O765C64O782C71O786C75O766C81O791,,
tick,0x1004acb58,32292,0,0x0,6
tick,0x100197900,33667,0,0x0,0
code-creation,JS,10,34625,0x16645fa75f46,46,prepareMainThreadExecution node:internal/process/pre_execution:38:36,0x5d9fd2e6138,~
script-source,71,node:internal/process/pre_execution,'use strict';\n\nconst {\n  NumberParseInt\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  SafeMap\x2C\n  StringPrototypeStartsWith\x2C\n  globalThis\x2C\n} = primordials;\n\nconst {\n  getOptionValue\x2C\n  refreshOptions\x2C\n} = require('internal/options');\nconst { reconnectZeroFillToggle } = require('internal/buffer');\nconst {\n  defineOperation\x2C\n  exposeInterface\x2C\n  exposeLazyInterfaces\x2C\n  defineReplaceableLazyAttribute\x2C\n} = require('internal/util');\n\nconst {\n  ERR_INVALID_THIS\x2C\n  ERR_MANIFEST_ASSERT_INTEGRITY\x2C\n  ERR_NO_CRYPTO\x2C\n} = require('internal/errors').codes;\nconst assert = require('internal/assert');\nconst {\n  namespace: {\n    addSerializeCallback\x2C\n    isBuildingSnapshot\x2C\n  }\x2C\n} = require('internal/v8/startup_snapshot');\n\nfunction prepareMainThreadExecution(expandArgv1 = false\x2C initializeModules = true) {\n  prepareExecution({\n    expandArgv1\x2C\n    initializeModules\x2C\n    isMainThread: true\n  });\n}\n\nfunction prepareWorkerThreadExecution() {\n  prepareExecution({\n    expandArgv1: false\x2C\n    initializeModules: false\x2C  // Will need to initialize it after policy setup\n    isMainThread: false\n  });\n}\n\nfunction prepareExecution(options) {\n  const { expandArgv1\x2C initializeModules\x2C isMainThread } = options;\n\n  refreshRuntimeOptions();\n  reconnectZeroFillToggle();\n\n  // Patch the process object with legacy properties and normalizations\n  patchProcessObject(expandArgv1);\n  setupTraceCategoryState();\n  setupPerfHooks();\n  setupInspectorHooks();\n  setupWarningHandler();\n  setupFetch();\n  setupWebCrypto();\n  setupCustomEvent();\n\n  // Resolve the coverage directory to an absolute path\x2C and\n  // overwrite process.env so that the original path gets passed\n  // to child processes even when they switch cwd.\n  if (process.env.NODE_V8_COVERAGE) {\n    process.env.NODE_V8_COVERAGE =\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\n  }\n\n  setupDebugEnv();\n  // Process initial diagnostic reporting configuration\x2C if present.\n  initializeReport();\n  initializeSourceMapsHandlers();\n  initializeDeprecations();\n  initializeWASI();\n\n  require('internal/dns/utils').initializeDns();\n\n  if (isMainThread) {\n    assert(internalBinding('worker').isMainThread);\n    // Worker threads will get the manifest in the message handler.\n    const policy = readPolicyFromDisk();\n    if (policy) {\n      require('internal/process/policy')\n        .setup(policy.manifestSrc\x2C policy.manifestURL);\n    }\n\n    // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\n    setupStacktracePrinterOnSigint();\n    initializeReportSignalHandlers();  // Main-thread-only.\n    initializeHeapSnapshotSignalHandlers();\n    // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\n    // spawned by our child_process module\x2C then initialize IPC.\n    // This attaches some internal event listeners and creates:\n    // process.send()\x2C process.channel\x2C process.connected\x2C\n    // process.disconnect().\n    setupChildProcessIpcChannel();\n    // If this is a worker in cluster mode\x2C start up the communication\n    // channel. This needs to be done before any user code gets executed\n    // (including preload modules).\n    initializeClusterIPC();\n\n    // TODO(joyeecheung): do this for worker threads as well.\n    require('internal/v8/startup_snapshot').runDeserializeCallbacks();\n  } else {\n    assert(!internalBinding('worker').isMainThread);\n    // The setup should be called in LOAD_SCRIPT message handler.\n    assert(!initializeModules);\n  }\n\n  if (initializeModules) {\n    setupUserModules();\n  }\n}\n\nfunction setupUserModules() {\n  initializeCJSLoader();\n  initializeESMLoader();\n  const CJSLoader = require('internal/modules/cjs/loader');\n  assert(!CJSLoader.hasLoadedAnyUserCJSModule);\n  loadPreloadModules();\n  // Need to be done after --require setup.\n  initializeFrozenIntrinsics();\n}\n\nfunction refreshRuntimeOptions() {\n  refreshOptions();\n}\n\nfunction patchProcessObject(expandArgv1) {\n  const binding = internalBinding('process_methods');\n  binding.patchProcessObject(process);\n\n  require('internal/process/per_thread').refreshHrtimeBuffer();\n\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\n    __proto__: null\x2C\n    enumerable: true\x2C\n    // Only set it to true during snapshot building.\n    configurable: getOptionValue('--build-snapshot')\x2C\n    value: process.argv[0]\n  });\n\n  process.exitCode = undefined;\n  process._exiting = false;\n  process.argv[0] = process.execPath;\n\n  if (expandArgv1 && process.argv[1] &&\n      !StringPrototypeStartsWith(process.argv[1]\x2C '-')) {\n    // Expand process.argv[1] into a full path.\n    const path = require('path');\n    try {\n      process.argv[1] = path.resolve(process.argv[1]);\n    } catch {\n      // Continue regardless of error.\n    }\n  }\n\n  // We need to initialize the global console here again with process.stdout\n  // and friends for snapshot deserialization.\n  const globalConsole = require('internal/console/global');\n  const { initializeGlobalConsole } = require('internal/console/constructor');\n  initializeGlobalConsole(globalConsole);\n\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\n  // except some that we need to be able to mutate during run time.\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\n}\n\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\n  const value = getOptionValue(option);\n  if (value) {\n    ObjectDefineProperty(process\x2C name\x2C {\n      __proto__: null\x2C\n      writable: false\x2C\n      configurable: true\x2C\n      enumerable\x2C\n      value\n    });\n  }\n}\n\nfunction setupWarningHandler() {\n  const {\n    onWarning\x2C\n    resetForSerialization\n  } = require('internal/process/warning');\n  if (getOptionValue('--warnings') &&\n    process.env.NODE_NO_WARNINGS !== '1') {\n    process.on('warning'\x2C onWarning);\n\n    // The code above would add the listener back during deserialization\x2C\n    // if applicable.\n    if (isBuildingSnapshot()) {\n      addSerializeCallback(() => {\n        process.removeListener('warning'\x2C onWarning);\n        resetForSerialization();\n      });\n    }\n  }\n}\n\n// https://fetch.spec.whatwg.org/\nfunction setupFetch() {\n  if (process.config.variables.node_no_browser_globals ||\n      getOptionValue('--no-experimental-fetch')) {\n    return;\n  }\n\n  let undici;\n  function lazyUndici() {\n    if (undici) {\n      return undici;\n    }\n\n    undici = require('internal/deps/undici/undici');\n    return undici;\n  }\n\n  async function fetch(input\x2C init = undefined) {\n    return lazyUndici().fetch(input\x2C init);\n  }\n\n  defineOperation(globalThis\x2C 'fetch'\x2C fetch);\n\n  function lazyInterface(name) {\n    return {\n      configurable: true\x2C\n      enumerable: false\x2C\n      get() {\n        return lazyUndici()[name];\n      }\x2C\n      set(value) {\n        exposeInterface(globalThis\x2C name\x2C value);\n      }\n    };\n  }\n\n  ObjectDefineProperties(globalThis\x2C {\n    FormData: lazyInterface('FormData')\x2C\n    Headers: lazyInterface('Headers')\x2C\n    Request: lazyInterface('Request')\x2C\n    Response: lazyInterface('Response')\x2C\n  });\n\n  // The WebAssembly Web API: https://webassembly.github.io/spec/web-api\n  internalBinding('wasm_web_api').setImplementation((streamState\x2C source) => {\n    require('internal/wasm_web_api').wasmStreamingCallback(streamState\x2C source);\n  });\n}\n\n// TODO(aduh95): move this to internal/bootstrap/browser when the CLI flag is\n//               removed.\nfunction setupWebCrypto() {\n  if (process.config.variables.node_no_browser_globals ||\n      getOptionValue('--no-experimental-global-webcrypto')) {\n    return;\n  }\n\n  if (internalBinding('config').hasOpenSSL) {\n    defineReplaceableLazyAttribute(\n      globalThis\x2C\n      'internal/crypto/webcrypto'\x2C\n      ['crypto']\x2C\n      false\x2C\n      function cryptoThisCheck() {\n        if (this !== globalThis && this != null)\n          throw new ERR_INVALID_THIS(\n            'nullish or must be the global object');\n      }\n    );\n    exposeLazyInterfaces(\n      globalThis\x2C 'internal/crypto/webcrypto'\x2C\n      ['Crypto'\x2C 'CryptoKey'\x2C 'SubtleCrypto']\n    );\n  } else {\n    ObjectDefineProperty(globalThis\x2C 'crypto'\x2C\n                         { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor({\n                           get crypto() {\n                             throw new ERR_NO_CRYPTO();\n                           }\n                         }\x2C 'crypto') });\n\n  }\n}\n\n// TODO(daeyeon): move this to internal/bootstrap/browser when the CLI flag is\n//                removed.\nfunction setupCustomEvent() {\n  if (process.config.variables.node_no_browser_globals ||\n      getOptionValue('--no-experimental-global-customevent')) {\n    return;\n  }\n  const { CustomEvent } = require('internal/event_target');\n  exposeInterface(globalThis\x2C 'CustomEvent'\x2C CustomEvent);\n}\n\n// Setup User-facing NODE_V8_COVERAGE environment variable that writes\n// ScriptCoverage to a specified file.\nfunction setupCoverageHooks(dir) {\n  const cwd = require('internal/process/execution').tryGetCwd();\n  const { resolve } = require('path');\n  const coverageDirectory = resolve(cwd\x2C dir);\n  const { sourceMapCacheToObject } =\n    require('internal/source_map/source_map_cache');\n\n  if (process.features.inspector) {\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\n  } else {\n    process.emitWarning('The inspector is disabled\x2C ' +\n                        'coverage could not be collected'\x2C\n                        'Warning');\n    return '';\n  }\n  return coverageDirectory;\n}\n\nfunction setupStacktracePrinterOnSigint() {\n  if (!getOptionValue('--trace-sigint')) {\n    return;\n  }\n  const { SigintWatchdog } = require('internal/watchdog');\n\n  const watchdog = new SigintWatchdog();\n  watchdog.start();\n}\n\nfunction initializeReport() {\n  ObjectDefineProperty(process\x2C 'report'\x2C {\n    __proto__: null\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n    get() {\n      const { report } = require('internal/process/report');\n      return report;\n    }\n  });\n}\n\nfunction setupDebugEnv() {\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\n  if (getOptionValue('--expose-internals')) {\n    require('internal/bootstrap/loaders').BuiltinModule.exposeInternals();\n  }\n}\n\n// This has to be called after initializeReport() is called\nfunction initializeReportSignalHandlers() {\n  if (getOptionValue('--report-on-signal')) {\n    const { addSignalHandler } = require('internal/process/report');\n    addSignalHandler();\n  }\n}\n\nfunction initializeHeapSnapshotSignalHandlers() {\n  const signal = getOptionValue('--heapsnapshot-signal');\n\n  if (!signal)\n    return;\n\n  require('internal/validators').validateSignalName(signal);\n  const { writeHeapSnapshot } = require('v8');\n\n  function doWriteHeapSnapshot() {\n    writeHeapSnapshot();\n  }\n  process.on(signal\x2C doWriteHeapSnapshot);\n\n  // The code above would add the listener back during deserialization\x2C\n  // if applicable.\n  if (isBuildingSnapshot()) {\n    addSerializeCallback(() => {\n      process.removeListener(signal\x2C doWriteHeapSnapshot);\n    });\n  }\n}\n\nfunction setupTraceCategoryState() {\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\n}\n\nfunction setupPerfHooks() {\n  require('internal/perf/utils').refreshTimeOrigin();\n}\n\nfunction setupInspectorHooks() {\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\n  // we cannot immediately call into JS to enable the hooks\x2C which could\n  // interrupt the JS execution of bootstrap. So instead we save the\n  // notification in the inspector agent if it's sent in the middle of\n  // bootstrap\x2C and process the notification later here.\n  if (internalBinding('config').hasInspector) {\n    const {\n      enable\x2C\n      disable\n    } = require('internal/inspector_async_hook');\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\n  }\n}\n\n// In general deprecations are initialized wherever the APIs are implemented\x2C\n// this is used to deprecate APIs implemented in C++ where the deprecation\n// utilities are not easily accessible.\nfunction initializeDeprecations() {\n  const { deprecate } = require('internal/util');\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\n\n  // DEP0103: access to `process.binding('util').isX` type checkers\n  // TODO(addaleax): Turn into a full runtime deprecation.\n  const utilBinding = internalBinding('util');\n  const types = require('internal/util/types');\n  for (const name of [\n    'isArrayBuffer'\x2C\n    'isArrayBufferView'\x2C\n    'isAsyncFunction'\x2C\n    'isDataView'\x2C\n    'isDate'\x2C\n    'isExternal'\x2C\n    'isMap'\x2C\n    'isMapIterator'\x2C\n    'isNativeError'\x2C\n    'isPromise'\x2C\n    'isRegExp'\x2C\n    'isSet'\x2C\n    'isSetIterator'\x2C\n    'isTypedArray'\x2C\n    'isUint8Array'\x2C\n    'isAnyArrayBuffer'\x2C\n  ]) {\n    utilBinding[name] = pendingDeprecation ?\n      deprecate(types[name]\x2C\n                'Accessing native typechecking bindings of Node ' +\n                'directly is deprecated. ' +\n                `Please use \\`util.types.${name}\\` instead.`\x2C\n                'DEP0103') :\n      types[name];\n  }\n\n  // TODO(joyeecheung): this is a legacy property exposed to process.\n  // Now that we use the config binding to carry this information\x2C remove\n  // it from the process. We may consider exposing it properly in\n  // process.features.\n  const { noBrowserGlobals } = internalBinding('config');\n  if (noBrowserGlobals) {\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\n      __proto__: null\x2C\n      writable: false\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      value: noBrowserGlobals\n    });\n  }\n\n  if (pendingDeprecation) {\n    process.binding = deprecate(process.binding\x2C\n                                'process.binding() is deprecated. ' +\n                                'Please use public APIs instead.'\x2C 'DEP0111');\n\n    process._tickCallback = deprecate(process._tickCallback\x2C\n                                      'process._tickCallback() is deprecated'\x2C\n                                      'DEP0134');\n  }\n}\n\nfunction setupChildProcessIpcChannel() {\n  if (process.env.NODE_CHANNEL_FD) {\n    const assert = require('internal/assert');\n\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\n    assert(fd >= 0);\n\n    // Make sure it's not accidentally inherited by child processes.\n    delete process.env.NODE_CHANNEL_FD;\n\n    const serializationMode =\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\n\n    require('child_process')._forkChild(fd\x2C serializationMode);\n    assert(process.send);\n  }\n}\n\nfunction initializeClusterIPC() {\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\n    const cluster = require('cluster');\n    cluster._setupWorker();\n    // Make sure it's not accidentally inherited by child processes.\n    delete process.env.NODE_UNIQUE_ID;\n  }\n}\n\nfunction readPolicyFromDisk() {\n  const experimentalPolicy = getOptionValue('--experimental-policy');\n  if (experimentalPolicy) {\n    process.emitWarning('Policies are experimental.'\x2C\n                        'ExperimentalWarning');\n    const { pathToFileURL\x2C URL } = require('internal/url');\n    // URL here as it is slightly different parsing\n    // no bare specifiers for now\n    let manifestURL;\n    if (require('path').isAbsolute(experimentalPolicy)) {\n      manifestURL = new URL(`file://${experimentalPolicy}`);\n    } else {\n      const cwdURL = pathToFileURL(process.cwd());\n      cwdURL.pathname += '/';\n      manifestURL = new URL(experimentalPolicy\x2C cwdURL);\n    }\n    const fs = require('fs');\n    const src = fs.readFileSync(manifestURL\x2C 'utf8');\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\n    if (experimentalPolicyIntegrity) {\n      const SRI = require('internal/policy/sri');\n      const { createHash\x2C timingSafeEqual } = require('crypto');\n      const realIntegrities = new SafeMap();\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\n      let foundMatch = false;\n      for (let i = 0; i < integrityEntries.length; i++) {\n        const {\n          algorithm\x2C\n          value: expected\n        } = integrityEntries[i];\n        const hash = createHash(algorithm);\n        hash.update(src);\n        const digest = hash.digest();\n        if (digest.length === expected.length &&\n          timingSafeEqual(digest\x2C expected)) {\n          foundMatch = true;\n          break;\n        }\n        realIntegrities.set(algorithm\x2C digest.toString('base64'));\n      }\n      if (!foundMatch) {\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL\x2C realIntegrities);\n      }\n    }\n    return {\n      manifestSrc: src\x2C manifestURL: manifestURL.href\n    };\n  }\n}\n\nfunction initializeWASI() {\n  const { BuiltinModule } = require('internal/bootstrap/loaders');\n  const mod = BuiltinModule.map.get('wasi');\n  mod.canBeRequiredByUsers =\n    getOptionValue('--experimental-wasi-unstable-preview1');\n}\n\nfunction initializeCJSLoader() {\n  const { initializeCJS } = require('internal/modules/cjs/loader');\n  initializeCJS();\n}\n\nfunction initializeESMLoader() {\n  const { initializeESM } = require('internal/modules/esm/utils');\n  initializeESM();\n\n  // Patch the vm module when --experimental-vm-modules is on.\n  // Please update the comments in vm.js when this block changes.\n  if (getOptionValue('--experimental-vm-modules')) {\n    const {\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\n    } = require('internal/vm/module');\n    const vm = require('vm');\n    vm.Module = Module;\n    vm.SourceTextModule = SourceTextModule;\n    vm.SyntheticModule = SyntheticModule;\n  }\n}\n\nfunction initializeSourceMapsHandlers() {\n  const { setSourceMapsEnabled\x2C getSourceMapsEnabled } =\n    require('internal/source_map/source_map_cache');\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\n  // Initialize the environment flag of source maps.\n  getSourceMapsEnabled();\n}\n\nfunction initializeFrozenIntrinsics() {\n  if (getOptionValue('--frozen-intrinsics')) {\n    process.emitWarning('The --frozen-intrinsics flag is experimental'\x2C\n                        'ExperimentalWarning');\n    require('internal/freeze_intrinsics')();\n  }\n}\n\nfunction loadPreloadModules() {\n  // For user code\x2C we preload modules if `-r` is passed\n  const preloadModules = getOptionValue('--require');\n  if (preloadModules && preloadModules.length > 0) {\n    const {\n      Module: {\n        _preloadModules\n      }\x2C\n    } = require('internal/modules/cjs/loader');\n    _preloadModules(preloadModules);\n  }\n}\n\nfunction markBootstrapComplete() {\n  internalBinding('performance').markBootstrapComplete();\n}\n\nmodule.exports = {\n  setupUserModules\x2C\n  prepareMainThreadExecution\x2C\n  prepareWorkerThreadExecution\x2C\n  markBootstrapComplete\n};\n
code-source-info,0x16645fa75f46,71,791,932,C20O843C30O866C36O883C40O843C45O931,,
tick,0x1a532274c,35333,0,0x0,3,0x0,0x16645fa75977
code-creation,JS,10,35417,0x16645fa7765e,347,prepareExecution node:internal/process/pre_execution:54:26,0x5d9fd2e6550,~
code-source-info,0x16645fa7765e
code-creation,JS,10,35458,0x16645fa77986,10,refreshRuntimeOptions node:internal/process/pre_execution:134:31,0x5d9fd2e65f0,~
code-source-info,0x16645fa77986,71,3850,3876,C0O3857C5O3857C9O3875,,
code-creation,JS,10,35458,0x16645fa77a6e,22,refreshOptions node:internal/options:39:24,0x5d9fd2d2d48,~
script-source,61,node:internal/options,'use strict';\n\nconst {\n  getCLIOptions\x2C\n  getEmbedderOptions: getEmbedderOptionsFromBinding\x2C\n} = internalBinding('options');\n\nlet warnOnAllowUnauthorized = true;\n\nlet optionsMap;\nlet aliasesMap;\nlet embedderOptions;\n\n// getCLIOptions() would serialize the option values from C++ land.\n// It would error if the values are queried before bootstrap is\n// complete so that we don't accidentally include runtime-dependent\n// states into a runtime-independent snapshot.\nfunction getCLIOptionsFromBinding() {\n  if (!optionsMap) {\n    ({ options: optionsMap } = getCLIOptions());\n  }\n  return optionsMap;\n}\n\nfunction getAliasesFromBinding() {\n  if (!aliasesMap) {\n    ({ aliases: aliasesMap } = getCLIOptions());\n  }\n  return aliasesMap;\n}\n\nfunction getEmbedderOptions() {\n  if (!embedderOptions) {\n    embedderOptions = getEmbedderOptionsFromBinding();\n  }\n  return embedderOptions;\n}\n\nfunction refreshOptions() {\n  optionsMap = undefined;\n  aliasesMap = undefined;\n}\n\nfunction getOptionValue(optionName) {\n  const options = getCLIOptionsFromBinding();\n  if (optionName.startsWith('--no-')) {\n    const option = options.get('--' + optionName.slice(5));\n    return option && !option.value;\n  }\n  return options.get(optionName)?.value;\n}\n\nfunction getAllowUnauthorized() {\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\n\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\n    warnOnAllowUnauthorized = false;\n    process.emitWarning(\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\n      'environment variable to \\'0\\' makes TLS connections ' +\n      'and HTTPS requests insecure by disabling ' +\n      'certificate verification.');\n  }\n  return allowUnauthorized;\n}\n\nmodule.exports = {\n  get options() {\n    return getCLIOptionsFromBinding();\n  }\x2C\n  get aliases() {\n    return getAliasesFromBinding();\n  }\x2C\n  getOptionValue\x2C\n  getAllowUnauthorized\x2C\n  getEmbedderOptions\x2C\n  refreshOptions\n};\n
code-source-info,0x16645fa77a6e,61,902,960,C0O909C4O920C10O935C14O946C21O959,,
code-creation,JS,10,35625,0x16645fa77dd6,19,reconnectZeroFillToggle node:internal/buffer:1074:33,0xd5ac0c7e6f0,~
script-source,30,node:internal/buffer,'use strict';\n\nconst {\n  BigInt\x2C\n  Float32Array\x2C\n  Float64Array\x2C\n  MathFloor\x2C\n  Number\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst {\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_OUT_OF_RANGE\n} = require('internal/errors').codes;\nconst { validateNumber } = require('internal/validators');\nconst {\n  asciiSlice\x2C\n  base64Slice\x2C\n  base64urlSlice\x2C\n  latin1Slice\x2C\n  hexSlice\x2C\n  ucs2Slice\x2C\n  utf8Slice\x2C\n  asciiWrite\x2C\n  base64Write\x2C\n  base64urlWrite\x2C\n  latin1Write\x2C\n  hexWrite\x2C\n  ucs2Write\x2C\n  utf8Write\x2C\n  getZeroFillToggle\n} = internalBinding('buffer');\n\nconst {\n  privateSymbols: {\n    untransferable_object_private_symbol\x2C\n  }\x2C\n} = internalBinding('util');\n\n// Temporary buffers to convert numbers.\nconst float32Array = new Float32Array(1);\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\nconst float64Array = new Float64Array(1);\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\n\n// Check endianness.\nfloat32Array[0] = -1; // 0xBF800000\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\n// check this with `os.endianness()` because that is determined at compile time.\nconst bigEndian = uInt8Float32Array[3] === 0;\n\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\n  validateNumber(offset\x2C 'offset');\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\n    boundsError(offset\x2C buf.length - (byteLength + 1));\n}\n\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : '';\n    let range;\n    if (byteLength > 3) {\n      if (min === 0 || min === 0n) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`;\n    }\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\n  }\n  checkBounds(buf\x2C offset\x2C byteLength);\n}\n\nfunction boundsError(value\x2C length\x2C type) {\n  if (MathFloor(value) !== value) {\n    validateNumber(value\x2C type);\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\n  }\n\n  if (length < 0)\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\n\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\n                             value);\n}\n\n// Read integers.\nfunction readBigUInt64LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24;\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24;\n\n  return BigInt(lo) + (BigInt(hi) << 32n);\n}\n\nfunction readBigUInt64BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset];\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last;\n\n  return (BigInt(hi) << 32n) + BigInt(lo);\n}\n\nfunction readBigInt64LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24); // Overflow\n  return (BigInt(val) << 32n) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24);\n}\n\nfunction readBigInt64BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset];\n  return (BigInt(val) << 32n) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last);\n}\n\nfunction readUIntLE(offset\x2C byteLength) {\n  if (offset === undefined)\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\n  if (byteLength === 6)\n    return readUInt48LE(this\x2C offset);\n  if (byteLength === 5)\n    return readUInt40LE(this\x2C offset);\n  if (byteLength === 3)\n    return readUInt24LE(this\x2C offset);\n  if (byteLength === 4)\n    return this.readUInt32LE(offset);\n  if (byteLength === 2)\n    return this.readUInt16LE(offset);\n  if (byteLength === 1)\n    return this.readUInt8(offset);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction readUInt48LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 5];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 6);\n\n  return first +\n    buf[++offset] * 2 ** 8 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 24 +\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\n}\n\nfunction readUInt40LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 4];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 5);\n\n  return first +\n    buf[++offset] * 2 ** 8 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 24 +\n    last * 2 ** 32;\n}\n\nfunction readUInt32LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  return first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24;\n}\n\nfunction readUInt24LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 2];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 3);\n\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\n}\n\nfunction readUInt16LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 1];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 2);\n\n  return first + last * 2 ** 8;\n}\n\nfunction readUInt8(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const val = this[offset];\n  if (val === undefined)\n    boundsError(offset\x2C this.length - 1);\n\n  return val;\n}\n\nfunction readUIntBE(offset\x2C byteLength) {\n  if (offset === undefined)\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\n  if (byteLength === 6)\n    return readUInt48BE(this\x2C offset);\n  if (byteLength === 5)\n    return readUInt40BE(this\x2C offset);\n  if (byteLength === 3)\n    return readUInt24BE(this\x2C offset);\n  if (byteLength === 4)\n    return this.readUInt32BE(offset);\n  if (byteLength === 2)\n    return this.readUInt16BE(offset);\n  if (byteLength === 1)\n    return this.readUInt8(offset);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction readUInt48BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 5];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 6);\n\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\n    buf[++offset] * 2 ** 24 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readUInt40BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 4];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 5);\n\n  return first * 2 ** 32 +\n    buf[++offset] * 2 ** 24 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readUInt32BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  return first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readUInt24BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 2];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 3);\n\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\n}\n\nfunction readUInt16BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 1];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 2);\n\n  return first * 2 ** 8 + last;\n}\n\nfunction readIntLE(offset\x2C byteLength) {\n  if (offset === undefined)\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\n  if (byteLength === 6)\n    return readInt48LE(this\x2C offset);\n  if (byteLength === 5)\n    return readInt40LE(this\x2C offset);\n  if (byteLength === 3)\n    return readInt24LE(this\x2C offset);\n  if (byteLength === 4)\n    return this.readInt32LE(offset);\n  if (byteLength === 2)\n    return this.readInt16LE(offset);\n  if (byteLength === 1)\n    return this.readInt8(offset);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction readInt48LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 5];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 6);\n\n  const val = buf[offset + 4] + last * 2 ** 8;\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\n    first +\n    buf[++offset] * 2 ** 8 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 24;\n}\n\nfunction readInt40LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 4];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 5);\n\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\n    first +\n    buf[++offset] * 2 ** 8 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 24;\n}\n\nfunction readInt32LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  return first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    (last << 24); // Overflow\n}\n\nfunction readInt24LE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 2];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 3);\n\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\n  return val | (val & 2 ** 23) * 0x1fe;\n}\n\nfunction readInt16LE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 1];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 2);\n\n  const val = first + last * 2 ** 8;\n  return val | (val & 2 ** 15) * 0x1fffe;\n}\n\nfunction readInt8(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const val = this[offset];\n  if (val === undefined)\n    boundsError(offset\x2C this.length - 1);\n\n  return val | (val & 2 ** 7) * 0x1fffffe;\n}\n\nfunction readIntBE(offset\x2C byteLength) {\n  if (offset === undefined)\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\n  if (byteLength === 6)\n    return readInt48BE(this\x2C offset);\n  if (byteLength === 5)\n    return readInt40BE(this\x2C offset);\n  if (byteLength === 3)\n    return readInt24BE(this\x2C offset);\n  if (byteLength === 4)\n    return this.readInt32BE(offset);\n  if (byteLength === 2)\n    return this.readInt16BE(offset);\n  if (byteLength === 1)\n    return this.readInt8(offset);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction readInt48BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 5];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 6);\n\n  const val = buf[++offset] + first * 2 ** 8;\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\n    buf[++offset] * 2 ** 24 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readInt40BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 4];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 5);\n\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\n    buf[++offset] * 2 ** 24 +\n    buf[++offset] * 2 ** 16 +\n    buf[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readInt32BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  return (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last;\n}\n\nfunction readInt24BE(buf\x2C offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = buf[offset];\n  const last = buf[offset + 2];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C buf.length - 3);\n\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\n  return val | (val & 2 ** 23) * 0x1fe;\n}\n\nfunction readInt16BE(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 1];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 2);\n\n  const val = first * 2 ** 8 + last;\n  return val | (val & 2 ** 15) * 0x1fffe;\n}\n\n// Read floats\nfunction readFloatBackwards(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  uInt8Float32Array[3] = first;\n  uInt8Float32Array[2] = this[++offset];\n  uInt8Float32Array[1] = this[++offset];\n  uInt8Float32Array[0] = last;\n  return float32Array[0];\n}\n\nfunction readFloatForwards(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 3];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 4);\n\n  uInt8Float32Array[0] = first;\n  uInt8Float32Array[1] = this[++offset];\n  uInt8Float32Array[2] = this[++offset];\n  uInt8Float32Array[3] = last;\n  return float32Array[0];\n}\n\nfunction readDoubleBackwards(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  uInt8Float64Array[7] = first;\n  uInt8Float64Array[6] = this[++offset];\n  uInt8Float64Array[5] = this[++offset];\n  uInt8Float64Array[4] = this[++offset];\n  uInt8Float64Array[3] = this[++offset];\n  uInt8Float64Array[2] = this[++offset];\n  uInt8Float64Array[1] = this[++offset];\n  uInt8Float64Array[0] = last;\n  return float64Array[0];\n}\n\nfunction readDoubleForwards(offset = 0) {\n  validateNumber(offset\x2C 'offset');\n  const first = this[offset];\n  const last = this[offset + 7];\n  if (first === undefined || last === undefined)\n    boundsError(offset\x2C this.length - 8);\n\n  uInt8Float64Array[0] = first;\n  uInt8Float64Array[1] = this[++offset];\n  uInt8Float64Array[2] = this[++offset];\n  uInt8Float64Array[3] = this[++offset];\n  uInt8Float64Array[4] = this[++offset];\n  uInt8Float64Array[5] = this[++offset];\n  uInt8Float64Array[6] = this[++offset];\n  uInt8Float64Array[7] = last;\n  return float64Array[0];\n}\n\n// Write integers.\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\n\n  let lo = Number(value & 0xffffffffn);\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  let hi = Number(value >> 32n & 0xffffffffn);\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  return offset;\n}\n\nfunction writeBigUInt64LE(value\x2C offset = 0) {\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\n}\n\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\n\n  let lo = Number(value & 0xffffffffn);\n  buf[offset + 7] = lo;\n  lo = lo >> 8;\n  buf[offset + 6] = lo;\n  lo = lo >> 8;\n  buf[offset + 5] = lo;\n  lo = lo >> 8;\n  buf[offset + 4] = lo;\n  let hi = Number(value >> 32n & 0xffffffffn);\n  buf[offset + 3] = hi;\n  hi = hi >> 8;\n  buf[offset + 2] = hi;\n  hi = hi >> 8;\n  buf[offset + 1] = hi;\n  hi = hi >> 8;\n  buf[offset] = hi;\n  return offset + 8;\n}\n\nfunction writeBigUInt64BE(value\x2C offset = 0) {\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\n}\n\nfunction writeBigInt64LE(value\x2C offset = 0) {\n  return writeBigU_Int64LE(\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\n}\n\nfunction writeBigInt64BE(value\x2C offset = 0) {\n  return writeBigU_Int64BE(\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\n}\n\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\n  if (byteLength === 6)\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\n  if (byteLength === 5)\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\n  if (byteLength === 3)\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\n  if (byteLength === 4)\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\n  if (byteLength === 2)\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\n  if (byteLength === 1)\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\n\n  const newVal = MathFloor(value * 2 ** -32);\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  buf[offset++] = newVal;\n  buf[offset++] = (newVal >>> 8);\n  return offset;\n}\n\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\n\n  const newVal = value;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\n  return offset;\n}\n\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\n\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  return offset;\n}\n\nfunction writeUInt32LE(value\x2C offset = 0) {\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\n}\n\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\n\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  value = value >>> 8;\n  buf[offset++] = value;\n  return offset;\n}\n\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\n\n  buf[offset++] = value;\n  buf[offset++] = (value >>> 8);\n  return offset;\n}\n\nfunction writeUInt16LE(value\x2C offset = 0) {\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\n}\n\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  // `checkInt()` can not be used here because it checks two entries.\n  validateNumber(offset\x2C 'offset');\n  if (value > max || value < min) {\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\n  }\n  if (buf[offset] === undefined)\n    boundsError(offset\x2C buf.length - 1);\n\n  buf[offset] = value;\n  return offset + 1;\n}\n\nfunction writeUInt8(value\x2C offset = 0) {\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\n}\n\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\n  if (byteLength === 6)\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\n  if (byteLength === 5)\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\n  if (byteLength === 3)\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\n  if (byteLength === 4)\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\n  if (byteLength === 2)\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\n  if (byteLength === 1)\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\n\n  const newVal = MathFloor(value * 2 ** -32);\n  buf[offset++] = (newVal >>> 8);\n  buf[offset++] = newVal;\n  buf[offset + 3] = value;\n  value = value >>> 8;\n  buf[offset + 2] = value;\n  value = value >>> 8;\n  buf[offset + 1] = value;\n  value = value >>> 8;\n  buf[offset] = value;\n  return offset + 4;\n}\n\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\n\n  buf[offset++] = MathFloor(value * 2 ** -32);\n  buf[offset + 3] = value;\n  value = value >>> 8;\n  buf[offset + 2] = value;\n  value = value >>> 8;\n  buf[offset + 1] = value;\n  value = value >>> 8;\n  buf[offset] = value;\n  return offset + 4;\n}\n\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\n\n  buf[offset + 3] = value;\n  value = value >>> 8;\n  buf[offset + 2] = value;\n  value = value >>> 8;\n  buf[offset + 1] = value;\n  value = value >>> 8;\n  buf[offset] = value;\n  return offset + 4;\n}\n\nfunction writeUInt32BE(value\x2C offset = 0) {\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\n}\n\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\n\n  buf[offset + 2] = value;\n  value = value >>> 8;\n  buf[offset + 1] = value;\n  value = value >>> 8;\n  buf[offset] = value;\n  return offset + 3;\n}\n\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\n  value = +value;\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\n\n  buf[offset++] = (value >>> 8);\n  buf[offset++] = value;\n  return offset;\n}\n\nfunction writeUInt16BE(value\x2C offset = 0) {\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\n}\n\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\n  if (byteLength === 6)\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\n  if (byteLength === 5)\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\n  if (byteLength === 3)\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\n  if (byteLength === 4)\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\n  if (byteLength === 2)\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\n  if (byteLength === 1)\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction writeInt32LE(value\x2C offset = 0) {\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\n}\n\nfunction writeInt16LE(value\x2C offset = 0) {\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\n}\n\nfunction writeInt8(value\x2C offset = 0) {\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\n}\n\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\n  if (byteLength === 6)\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\n  if (byteLength === 5)\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\n  if (byteLength === 3)\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\n  if (byteLength === 4)\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\n  if (byteLength === 2)\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\n  if (byteLength === 1)\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\n\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\n}\n\nfunction writeInt32BE(value\x2C offset = 0) {\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\n}\n\nfunction writeInt16BE(value\x2C offset = 0) {\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\n}\n\n// Write floats.\nfunction writeDoubleForwards(val\x2C offset = 0) {\n  val = +val;\n  checkBounds(this\x2C offset\x2C 7);\n\n  float64Array[0] = val;\n  this[offset++] = uInt8Float64Array[0];\n  this[offset++] = uInt8Float64Array[1];\n  this[offset++] = uInt8Float64Array[2];\n  this[offset++] = uInt8Float64Array[3];\n  this[offset++] = uInt8Float64Array[4];\n  this[offset++] = uInt8Float64Array[5];\n  this[offset++] = uInt8Float64Array[6];\n  this[offset++] = uInt8Float64Array[7];\n  return offset;\n}\n\nfunction writeDoubleBackwards(val\x2C offset = 0) {\n  val = +val;\n  checkBounds(this\x2C offset\x2C 7);\n\n  float64Array[0] = val;\n  this[offset++] = uInt8Float64Array[7];\n  this[offset++] = uInt8Float64Array[6];\n  this[offset++] = uInt8Float64Array[5];\n  this[offset++] = uInt8Float64Array[4];\n  this[offset++] = uInt8Float64Array[3];\n  this[offset++] = uInt8Float64Array[2];\n  this[offset++] = uInt8Float64Array[1];\n  this[offset++] = uInt8Float64Array[0];\n  return offset;\n}\n\nfunction writeFloatForwards(val\x2C offset = 0) {\n  val = +val;\n  checkBounds(this\x2C offset\x2C 3);\n\n  float32Array[0] = val;\n  this[offset++] = uInt8Float32Array[0];\n  this[offset++] = uInt8Float32Array[1];\n  this[offset++] = uInt8Float32Array[2];\n  this[offset++] = uInt8Float32Array[3];\n  return offset;\n}\n\nfunction writeFloatBackwards(val\x2C offset = 0) {\n  val = +val;\n  checkBounds(this\x2C offset\x2C 3);\n\n  float32Array[0] = val;\n  this[offset++] = uInt8Float32Array[3];\n  this[offset++] = uInt8Float32Array[2];\n  this[offset++] = uInt8Float32Array[1];\n  this[offset++] = uInt8Float32Array[0];\n  return offset;\n}\n\nclass FastBuffer extends Uint8Array {\n  // Using an explicit constructor here is necessary to avoid relying on\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\n  // eslint-disable-next-line no-useless-constructor\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\n    super(bufferOrLength\x2C byteOffset\x2C length);\n  }\n}\n\nfunction addBufferPrototypeMethods(proto) {\n  proto.readBigUInt64LE = readBigUInt64LE;\n  proto.readBigUInt64BE = readBigUInt64BE;\n  proto.readBigUint64LE = readBigUInt64LE;\n  proto.readBigUint64BE = readBigUInt64BE;\n  proto.readBigInt64LE = readBigInt64LE;\n  proto.readBigInt64BE = readBigInt64BE;\n  proto.writeBigUInt64LE = writeBigUInt64LE;\n  proto.writeBigUInt64BE = writeBigUInt64BE;\n  proto.writeBigUint64LE = writeBigUInt64LE;\n  proto.writeBigUint64BE = writeBigUInt64BE;\n  proto.writeBigInt64LE = writeBigInt64LE;\n  proto.writeBigInt64BE = writeBigInt64BE;\n\n  proto.readUIntLE = readUIntLE;\n  proto.readUInt32LE = readUInt32LE;\n  proto.readUInt16LE = readUInt16LE;\n  proto.readUInt8 = readUInt8;\n  proto.readUIntBE = readUIntBE;\n  proto.readUInt32BE = readUInt32BE;\n  proto.readUInt16BE = readUInt16BE;\n  proto.readUintLE = readUIntLE;\n  proto.readUint32LE = readUInt32LE;\n  proto.readUint16LE = readUInt16LE;\n  proto.readUint8 = readUInt8;\n  proto.readUintBE = readUIntBE;\n  proto.readUint32BE = readUInt32BE;\n  proto.readUint16BE = readUInt16BE;\n  proto.readIntLE = readIntLE;\n  proto.readInt32LE = readInt32LE;\n  proto.readInt16LE = readInt16LE;\n  proto.readInt8 = readInt8;\n  proto.readIntBE = readIntBE;\n  proto.readInt32BE = readInt32BE;\n  proto.readInt16BE = readInt16BE;\n\n  proto.writeUIntLE = writeUIntLE;\n  proto.writeUInt32LE = writeUInt32LE;\n  proto.writeUInt16LE = writeUInt16LE;\n  proto.writeUInt8 = writeUInt8;\n  proto.writeUIntBE = writeUIntBE;\n  proto.writeUInt32BE = writeUInt32BE;\n  proto.writeUInt16BE = writeUInt16BE;\n  proto.writeUintLE = writeUIntLE;\n  proto.writeUint32LE = writeUInt32LE;\n  proto.writeUint16LE = writeUInt16LE;\n  proto.writeUint8 = writeUInt8;\n  proto.writeUintBE = writeUIntBE;\n  proto.writeUint32BE = writeUInt32BE;\n  proto.writeUint16BE = writeUInt16BE;\n  proto.writeIntLE = writeIntLE;\n  proto.writeInt32LE = writeInt32LE;\n  proto.writeInt16LE = writeInt16LE;\n  proto.writeInt8 = writeInt8;\n  proto.writeIntBE = writeIntBE;\n  proto.writeInt32BE = writeInt32BE;\n  proto.writeInt16BE = writeInt16BE;\n\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\n\n  proto.asciiSlice = asciiSlice;\n  proto.base64Slice = base64Slice;\n  proto.base64urlSlice = base64urlSlice;\n  proto.latin1Slice = latin1Slice;\n  proto.hexSlice = hexSlice;\n  proto.ucs2Slice = ucs2Slice;\n  proto.utf8Slice = utf8Slice;\n  proto.asciiWrite = asciiWrite;\n  proto.base64Write = base64Write;\n  proto.base64urlWrite = base64urlWrite;\n  proto.latin1Write = latin1Write;\n  proto.hexWrite = hexWrite;\n  proto.ucs2Write = ucs2Write;\n  proto.utf8Write = utf8Write;\n}\n\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\n// because Buffer needs this and that would introduce a cyclic dependency.\nfunction markAsUntransferable(obj) {\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\n    return;  // This object is a primitive and therefore already untransferable.\n  obj[untransferable_object_private_symbol] = true;\n}\n\n// A toggle used to access the zero fill setting of the array buffer allocator\n// in C++.\n// |zeroFill| can be undefined when running inside an isolate where we\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\nlet zeroFill = getZeroFillToggle();\nfunction createUnsafeBuffer(size) {\n  zeroFill[0] = 0;\n  try {\n    return new FastBuffer(size);\n  } finally {\n    zeroFill[0] = 1;\n  }\n}\n\n// The connection between the JS land zero fill toggle and the\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\n// is deserialized from the snapshot\x2C because V8 owns the underlying\n// memory of this toggle. This resets the connection.\nfunction reconnectZeroFillToggle() {\n  zeroFill = getZeroFillToggle();\n}\n\nmodule.exports = {\n  FastBuffer\x2C\n  addBufferPrototypeMethods\x2C\n  markAsUntransferable\x2C\n  createUnsafeBuffer\x2C\n  readUInt16BE\x2C\n  readUInt32BE\x2C\n  reconnectZeroFillToggle\n};\n
code-source-info,0x16645fa77dd6,30,30712,30752,C0O30719C5O30730C11O30728C18O30751,,
tick,0x1a535bc24,36708,0,0x0,3,0x0,0x16645fa77678,0x16645fa75f6e,0x16645fa75977
code-creation,JS,10,36875,0x16645fa7a6de,460,patchProcessObject node:internal/process/pre_execution:138:28,0x5d9fd2e6640,~
code-source-info,0x16645fa7a6de
tick,0x1000e50e0,37292,0,0x0,0,0x286f2a244bf7,0x16645fa7a706,0x16645fa7767e,0x16645fa75f6e,0x16645fa75977
code-creation,JS,10,37375,0x16645fa7ad26,82,getOptionValue node:internal/options:44:24,0x5d9fd2d2d98,~
code-source-info,0x16645fa7ad26,61,985,1228,C0O1018C3O1018C7O1063C15O1063C22O1113C30O1135C38O1135C43O1122C47O1113C53O1150C55O1175C60O1181C61O1203C66O1203C74O1218C81O1226,,
code-creation,JS,10,37375,0x16645fa7ae7e,33,getCLIOptionsFromBinding node:internal/options:18:34,0x5d9fd2d2b80,~
code-source-info,0x16645fa7ae7e,61,497,598,C0O504C6O527C11O554C15O539C28O578C32O596,,
code-creation,JS,10,37625,0x16645fa7b4c6,37,set node:internal/bootstrap/node:117:8,0x18a4fd08b6e0,~
script-source,16,node:internal/bootstrap/node,// Hello\x2C and welcome to hacking node.js!\n//\n// This file is invoked by `Realm::BootstrapNode()` in `src/node_realm.cc`\x2C\n// and is responsible for setting up Node.js core before main scripts\n// under `lib/internal/main/` are executed.\n//\n// By default\x2C Node.js binaries come with an embedded V8 startup snapshot\n// that is generated at build-time with a `node_mksnapshot` executable.\n// The snapshot generation code can be found in `SnapshotBuilder::Generate()`\n// from `src/node_snapshotable.cc`.\n// This snapshot captures the V8 heap initialized by scripts under\n// `lib/internal/bootstrap/`\x2C including this file. When initializing the main\n// thread\x2C Node.js deserializes the heap from the snapshot\x2C instead of actually\n// running this script and others in `lib/internal/bootstrap/`. To disable this\n// behavior\x2C pass `--no-node-snapshot` when starting the process so that\n// Node.js actually runs this script to initialize the heap.\n//\n// This script is expected not to perform any asynchronous operations itself\n// when being executed - those should be done in either\n// `lib/internal/process/pre_execution.js` or in main scripts. It should not\n// query any run-time states (e.g. command line arguments\x2C environment\n// variables) when being executed - functions in this script that are invoked\n// at a later time can\x2C however\x2C query those states lazily.\n// The majority of the code here focuses on setting up the global object and\n// the process object in a synchronous\x2C environment-independent manner.\n//\n// Scripts run before this file:\n// - `lib/internal/per_context/primordials.js`: this saves copies of JavaScript\n//   builtins that won't be affected by user land monkey-patching for internal\n//   modules to use.\n// - `lib/internal/per_context/domexception.js`: implementation of the\n//   `DOMException` class.\n// - `lib/internal/per_context/messageport.js`: JS-side components of the\n//   `MessagePort` implementation.\n// - `lib/internal/bootstrap/loaders.js`: this sets up internal binding and\n//   module loaders\x2C including `process.binding()`\x2C `process._linkedBinding()`\x2C\n//   `internalBinding()` and `BuiltinModule`.\n//\n// The initialization done in this script is included in both the main thread\n// and the worker threads. After this\x2C further initialization is done based\n// on the configuration of the Node.js instance by executing the scripts in\n// `lib/internal/bootstrap/switches/`.\n//\n// Then\x2C depending on how the Node.js instance is launched\x2C one of the main\n// scripts in `lib/internal/main` will be selected by C++ to start the actual\n// execution. They may run additional setups exported by\n// `lib/internal/process/pre_execution.js` depending on the run-time states.\n\n'use strict';\n\n// This file is compiled as if it's wrapped in a function with arguments\n// passed by `BuiltinLoader::CompileAndCall()`.\n/* global process\x2C require\x2C internalBinding\x2C primordials */\n\nsetupPrepareStackTrace();\n\nconst {\n  FunctionPrototypeCall\x2C\n  JSONParse\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectSetPrototypeOf\x2C\n  ObjectFreeze\x2C\n  SymbolToStringTag\x2C\n  globalThis\x2C\n} = primordials;\nconst config = internalBinding('config');\nconst internalTimers = require('internal/timers');\nconst {\n  defineOperation\x2C\n  deprecate\x2C\n  defineLazyProperties\x2C\n  exposeLazyInterfaces\x2C\n} = require('internal/util');\nconst {\n  privateSymbols: {\n    exiting_aliased_Uint32Array\x2C\n  }\x2C\n} = internalBinding('util');\n\nsetupProcessObject();\n\nsetupGlobalProxy();\nsetupBuffer();\n\nprocess.domain = null;\n{\n  const exitingAliasedUint32Array = process[exiting_aliased_Uint32Array];\n  ObjectDefineProperty(process\x2C '_exiting'\x2C {\n    __proto__: null\x2C\n    get() {\n      return exitingAliasedUint32Array[0] === 1;\n    }\x2C\n    set(value) {\n      exitingAliasedUint32Array[0] = value ? 1 : 0;\n    }\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n  });\n}\nprocess._exiting = false;\n\n{\n  const warnIntegerCoercionDeprecation = deprecate(\n    () => {}\x2C\n    'Implicit coercion to integer for exit code is deprecated.'\x2C\n    'DEP0164'\n  );\n\n  let exitCode;\n\n  ObjectDefineProperty(process\x2C 'exitCode'\x2C {\n    __proto__: null\x2C\n    get() {\n      return exitCode;\n    }\x2C\n    set(code) {\n      if (perThreadSetup.isDeprecatedExitCode(code)) {\n        warnIntegerCoercionDeprecation();\n      }\n      exitCode = code;\n    }\x2C\n    enumerable: true\x2C\n    configurable: false\x2C\n  });\n}\n\n// process.config is serialized config.gypi\nconst binding = internalBinding('builtins');\n\nconst processConfig = JSONParse(binding.config\x2C (_key\x2C value) => {\n  // The `reviver` argument of the JSONParse method will visit all the values of\n  // the parsed config\x2C including the "root" object\x2C so there is no need to\n  // explicitly freeze the config outside of this method\n  return ObjectFreeze(value);\n});\n\nObjectDefineProperty(process\x2C 'config'\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  configurable: true\x2C\n  value: processConfig\x2C\n});\n\nrequire('internal/worker/js_transferable').setup();\n\n// Bootstrappers for all threads\x2C including worker threads and main thread\nconst perThreadSetup = require('internal/process/per_thread');\nconst rawMethods = internalBinding('process_methods');\n\n// Set up methods on the process object for all threads\n{\n  process.dlopen = rawMethods.dlopen;\n  process.uptime = rawMethods.uptime;\n\n  // TODO(joyeecheung): either remove them or make them public\n  process._getActiveRequests = rawMethods._getActiveRequests;\n  process._getActiveHandles = rawMethods._getActiveHandles;\n  process.getActiveResourcesInfo = rawMethods.getActiveResourcesInfo;\n\n  // TODO(joyeecheung): remove these\n  process.reallyExit = rawMethods.reallyExit;\n  process._kill = rawMethods._kill;\n\n  const wrapped = perThreadSetup.wrapProcessMethods(rawMethods);\n  process._rawDebug = wrapped._rawDebug;\n  process.cpuUsage = wrapped.cpuUsage;\n  process.resourceUsage = wrapped.resourceUsage;\n  process.memoryUsage = wrapped.memoryUsage;\n  process.constrainedMemory = rawMethods.constrainedMemory;\n  process.kill = wrapped.kill;\n  process.exit = wrapped.exit;\n\n  process.hrtime = perThreadSetup.hrtime;\n  process.hrtime.bigint = perThreadSetup.hrtimeBigInt;\n\n  process.openStdin = function() {\n    process.stdin.resume();\n    return process.stdin;\n  };\n}\n\nconst credentials = internalBinding('credentials');\nif (credentials.implementsPosixCredentials) {\n  process.getuid = credentials.getuid;\n  process.geteuid = credentials.geteuid;\n  process.getgid = credentials.getgid;\n  process.getegid = credentials.getegid;\n  process.getgroups = credentials.getgroups;\n}\n\n// Setup the callbacks that node::AsyncWrap will call when there are hooks to\n// process. They use the same functions as the JS embedder API. These callbacks\n// are setup immediately to prevent async_wrap.setupHooks() from being hijacked\n// and the cost of doing so is negligible.\nconst { nativeHooks } = require('internal/async_hooks');\ninternalBinding('async_wrap').setupHooks(nativeHooks);\n\nconst {\n  setupTaskQueue\x2C\n  queueMicrotask\n} = require('internal/process/task_queues');\n\n// Non-standard extensions:\ndefineOperation(globalThis\x2C 'queueMicrotask'\x2C queueMicrotask);\n\nconst timers = require('timers');\ndefineOperation(globalThis\x2C 'clearImmediate'\x2C timers.clearImmediate);\ndefineOperation(globalThis\x2C 'setImmediate'\x2C timers.setImmediate);\n\ndefineLazyProperties(\n  globalThis\x2C\n  'internal/structured_clone'\x2C\n  ['structuredClone']\n);\n\nexposeLazyInterfaces(\n  globalThis\x2C\n  'internal/worker/io'\x2C\n  ['BroadcastChannel']\n);\n// Set the per-Environment callback that will be called\n// when the TrackingTraceStateObserver updates trace state.\n// Note that when NODE_USE_V8_PLATFORM is true\x2C the observer is\n// attached to the per-process TracingController.\nconst { setTraceCategoryStateUpdateHandler } = internalBinding('trace_events');\nsetTraceCategoryStateUpdateHandler(perThreadSetup.toggleTraceCategoryState);\n\n// process.allowedNodeEnvironmentFlags\nObjectDefineProperty(process\x2C 'allowedNodeEnvironmentFlags'\x2C {\n  __proto__: null\x2C\n  get() {\n    const flags = perThreadSetup.buildAllowedFlags();\n    process.allowedNodeEnvironmentFlags = flags;\n    return process.allowedNodeEnvironmentFlags;\n  }\x2C\n  // If the user tries to set this to another value\x2C override\n  // this completely to that value.\n  set(value) {\n    ObjectDefineProperty(this\x2C 'allowedNodeEnvironmentFlags'\x2C {\n      __proto__: null\x2C\n      value\x2C\n      configurable: true\x2C\n      enumerable: true\x2C\n      writable: true\n    });\n  }\x2C\n  enumerable: true\x2C\n  configurable: true\n});\n\n// process.assert\nprocess.assert = deprecate(\n  perThreadSetup.assert\x2C\n  'process.assert() is deprecated. Please use the `assert` module instead.'\x2C\n  'DEP0100');\n\n// TODO(joyeecheung): this property has not been well-maintained\x2C should we\n// deprecate it in favor of a better API?\nconst { isDebugBuild\x2C hasOpenSSL\x2C hasInspector } = config;\nconst features = {\n  inspector: hasInspector\x2C\n  debug: isDebugBuild\x2C\n  uv: true\x2C\n  ipv6: true\x2C  // TODO(bnoordhuis) ping libuv\n  tls_alpn: hasOpenSSL\x2C\n  tls_sni: hasOpenSSL\x2C\n  tls_ocsp: hasOpenSSL\x2C\n  tls: hasOpenSSL\x2C\n  // This needs to be dynamic because --no-node-snapshot disables the\n  // code cache even if the binary is built with embedded code cache.\n  get cached_builtins() {\n    return binding.hasCachedBuiltins();\n  }\n};\n\nObjectDefineProperty(process\x2C 'features'\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  writable: false\x2C\n  configurable: false\x2C\n  value: features\n});\n\n{\n  const {\n    onGlobalUncaughtException\x2C\n    setUncaughtExceptionCaptureCallback\x2C\n    hasUncaughtExceptionCaptureCallback\n  } = require('internal/process/execution');\n\n  // For legacy reasons this is still called `_fatalException`\x2C even\n  // though it is now a global uncaught exception handler.\n  // The C++ land node::errors::TriggerUncaughtException grabs it\n  // from the process object because it has been monkey-patchable.\n  // TODO(joyeecheung): investigate whether process._fatalException\n  // can be deprecated.\n  process._fatalException = onGlobalUncaughtException;\n  process.setUncaughtExceptionCaptureCallback =\n    setUncaughtExceptionCaptureCallback;\n  process.hasUncaughtExceptionCaptureCallback =\n    hasUncaughtExceptionCaptureCallback;\n}\n\nconst { emitWarning } = require('internal/process/warning');\nprocess.emitWarning = emitWarning;\n\n// We initialize the tick callbacks and the timer callbacks last during\n// bootstrap to make sure that any operation done before this are synchronous.\n// If any ticks or timers are scheduled before this they are unlikely to work.\n{\n  const { nextTick\x2C runNextTicks } = setupTaskQueue();\n  process.nextTick = nextTick;\n  // Used to emulate a tick manually in the JS land.\n  // A better name for this function would be `runNextTicks` but\n  // it has been exposed to the process object so we keep this legacy name\n  // TODO(joyeecheung): either remove it or make it public\n  process._tickCallback = runNextTicks;\n\n  const { setupTimers } = internalBinding('timers');\n  const {\n    processImmediate\x2C\n    processTimers\x2C\n  } = internalTimers.getTimerCallbacks(runNextTicks);\n  // Sets two per-Environment callbacks that will be run from libuv:\n  // - processImmediate will be run in the callback of the per-Environment\n  //   check handle.\n  // - processTimers will be run in the callback of the per-Environment timer.\n  setupTimers(processImmediate\x2C processTimers);\n  // Note: only after this point are the timers effective\n}\n\nfunction setupPrepareStackTrace() {\n  const {\n    setEnhanceStackForFatalException\x2C\n    setPrepareStackTraceCallback\n  } = internalBinding('errors');\n  const {\n    prepareStackTrace\x2C\n    fatalExceptionStackEnhancers: {\n      beforeInspector\x2C\n      afterInspector\n    }\n  } = require('internal/errors');\n  // Tell our PrepareStackTraceCallback passed to the V8 API\n  // to call prepareStackTrace().\n  setPrepareStackTraceCallback(prepareStackTrace);\n  // Set the function used to enhance the error stack for printing\n  setEnhanceStackForFatalException(beforeInspector\x2C afterInspector);\n}\n\nfunction setupProcessObject() {\n  const EventEmitter = require('events');\n  const origProcProto = ObjectGetPrototypeOf(process);\n  ObjectSetPrototypeOf(origProcProto\x2C EventEmitter.prototype);\n  FunctionPrototypeCall(EventEmitter\x2C process);\n  ObjectDefineProperty(process\x2C SymbolToStringTag\x2C {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    writable: true\x2C\n    configurable: false\x2C\n    value: 'process'\n  });\n\n  // Create global.process as getters so that we have a\n  // deprecation path for these in ES Modules.\n  // See https://github.com/nodejs/node/pull/26334.\n  let _process = process;\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\n    __proto__: null\x2C\n    get() {\n      return _process;\n    }\x2C\n    set(value) {\n      _process = value;\n    }\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n  });\n}\n\nfunction setupGlobalProxy() {\n  ObjectDefineProperty(globalThis\x2C SymbolToStringTag\x2C {\n    __proto__: null\x2C\n    value: 'global'\x2C\n    writable: false\x2C\n    enumerable: false\x2C\n    configurable: true\n  });\n  globalThis.global = globalThis;\n}\n\nfunction setupBuffer() {\n  const {\n    Buffer\x2C\n  } = require('buffer');\n  const bufferBinding = internalBinding('buffer');\n\n  // Only after this point can C++ use Buffer::New()\n  bufferBinding.setBufferPrototype(Buffer.prototype);\n  delete bufferBinding.setBufferPrototype;\n  delete bufferBinding.zeroFill;\n\n  // Create global.Buffer as getters so that we have a\n  // deprecation path for these in ES Modules.\n  // See https://github.com/nodejs/node/pull/26334.\n  let _Buffer = Buffer;\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\n    __proto__: null\x2C\n    get() {\n      return _Buffer;\n    }\x2C\n    set(value) {\n      _Buffer = value;\n    }\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n  });\n}\n
code-source-info,0x16645fa7b4c6,16,4150,4292,C0O4165C7O4184C12O4184C19O4222C24O4222C27O4270C29O4279C36O4291,,
code-creation,JS,10,38125,0x16645fa7c31e,72,isDeprecatedExitCode node:internal/process/per_thread:438:30,0x286f2a245590,~
script-source,32,node:internal/process/per_thread,'use strict';\n\n// This files contains process bootstrappers that can be\n// run when setting up each thread\x2C including the main\n// thread and the worker threads.\n\nconst {\n  ArrayPrototypeEvery\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSplice\x2C\n  BigUint64Array\x2C\n  Float64Array\x2C\n  Number\x2C\n  NumberIsInteger\x2C\n  NumberMAX_SAFE_INTEGER\x2C\n  NumberMIN_SAFE_INTEGER\x2C\n  ObjectFreeze\x2C\n  ObjectDefineProperty\x2C\n  ReflectApply\x2C\n  RegExpPrototypeExec\x2C\n  SafeArrayIterator\x2C\n  Set\x2C\n  SetPrototypeEntries\x2C\n  SetPrototypeValues\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeStartsWith\x2C\n  Symbol\x2C\n  SymbolIterator\x2C\n  Uint32Array\x2C\n} = primordials;\n\nconst {\n  errnoException\x2C\n  codes: {\n    ERR_ASSERTION\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_UNKNOWN_SIGNAL\n  }\n} = require('internal/errors');\nconst format = require('internal/util/inspect').format;\nconst {\n  validateArray\x2C\n  validateNumber\x2C\n  validateObject\x2C\n} = require('internal/validators');\nconst constants = internalBinding('constants').os.signals;\n\nconst kInternal = Symbol('internal properties');\n\nfunction assert(x\x2C msg) {\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\n}\nconst { exitCodes: { kNoFailure } } = internalBinding('errors');\n\nconst binding = internalBinding('process_methods');\n\nlet hrValues;\nlet hrBigintValues;\n\nfunction refreshHrtimeBuffer() {\n  // The 3 entries filled in by the original process.hrtime contains\n  // the upper/lower 32 bits of the second part of the value\x2C\n  // and the remaining nanoseconds of the value.\n  hrValues = new Uint32Array(binding.hrtimeBuffer);\n  // Use a BigUint64Array in the closure because this is actually a bit\n  // faster than simply returning a BigInt from C++ in V8 7.1.\n  hrBigintValues = new BigUint64Array(binding.hrtimeBuffer\x2C 0\x2C 1);\n}\n\n// Create the buffers.\nrefreshHrtimeBuffer();\n\nfunction hrtime(time) {\n  binding.hrtime();\n\n  if (time !== undefined) {\n    validateArray(time\x2C 'time');\n    if (time.length !== 2) {\n      throw new ERR_OUT_OF_RANGE('time'\x2C 2\x2C time.length);\n    }\n\n    const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\n    const nsec = hrValues[2] - time[1];\n    const needsBorrow = nsec < 0;\n    return [needsBorrow ? sec - 1 : sec\x2C needsBorrow ? nsec + 1e9 : nsec];\n  }\n\n  return [\n    hrValues[0] * 0x100000000 + hrValues[1]\x2C\n    hrValues[2]\x2C\n  ];\n}\n\nfunction hrtimeBigInt() {\n  binding.hrtimeBigInt();\n  return hrBigintValues[0];\n}\n\nfunction nop() {}\n\n// The execution of this function itself should not cause any side effects.\nfunction wrapProcessMethods(binding) {\n  const {\n    cpuUsage: _cpuUsage\x2C\n    memoryUsage: _memoryUsage\x2C\n    rss\x2C\n    resourceUsage: _resourceUsage\n  } = binding;\n\n  function _rawDebug(...args) {\n    binding._rawDebug(ReflectApply(format\x2C null\x2C args));\n  }\n\n  // Create the argument array that will be passed to the native function.\n  const cpuValues = new Float64Array(2);\n\n  // Replace the native function with the JS version that calls the native\n  // function.\n  function cpuUsage(prevValue) {\n    // If a previous value was passed in\x2C ensure it has the correct shape.\n    if (prevValue) {\n      if (!previousValueIsValid(prevValue.user)) {\n        validateObject(prevValue\x2C 'prevValue');\n\n        validateNumber(prevValue.user\x2C 'prevValue.user');\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user'\x2C\n                                                   prevValue.user);\n      }\n\n      if (!previousValueIsValid(prevValue.system)) {\n        validateNumber(prevValue.system\x2C 'prevValue.system');\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system'\x2C\n                                                   prevValue.system);\n      }\n    }\n\n    // Call the native function to get the current values.\n    _cpuUsage(cpuValues);\n\n    // If a previous value was passed in\x2C return diff of current from previous.\n    if (prevValue) {\n      return {\n        user: cpuValues[0] - prevValue.user\x2C\n        system: cpuValues[1] - prevValue.system\n      };\n    }\n\n    // If no previous value passed in\x2C return current value.\n    return {\n      user: cpuValues[0]\x2C\n      system: cpuValues[1]\n    };\n  }\n\n  // Ensure that a previously passed in value is valid. Currently\x2C the native\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\n  function previousValueIsValid(num) {\n    return typeof num === 'number' &&\n        num <= NumberMAX_SAFE_INTEGER &&\n        num >= 0;\n  }\n\n  const memValues = new Float64Array(5);\n  function memoryUsage() {\n    _memoryUsage(memValues);\n    return {\n      rss: memValues[0]\x2C\n      heapTotal: memValues[1]\x2C\n      heapUsed: memValues[2]\x2C\n      external: memValues[3]\x2C\n      arrayBuffers: memValues[4]\n    };\n  }\n\n  memoryUsage.rss = rss;\n\n  const { deprecate } = require('internal/util');\n  const warnIntegerCoercionDeprecationSync = deprecate(\n    () => {}\x2C\n    'Implicit coercion to integer for exit code is deprecated.'\x2C\n    'DEP0164'\x2C\n    true\n  );\n\n  function exit(code) {\n    const {\n      handleProcessExit\x2C\n    } = require('internal/modules/esm/handle_process_exit');\n    process.off('exit'\x2C handleProcessExit);\n\n    if (isDeprecatedExitCode(code)) {\n      // Emit the deprecation warning synchronously since deprecation warning is\n      // generally emitted in a next tick but we have no next tick timing here.\n      warnIntegerCoercionDeprecationSync();\n    }\n\n    if (code || code === 0)\n      process.exitCode = code;\n\n    if (!process._exiting) {\n      process._exiting = true;\n      process.emit('exit'\x2C process.exitCode || kNoFailure);\n    }\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\n    // in the user land. Either document it\x2C or deprecate it in favor of a\n    // better public alternative.\n    process.reallyExit(process.exitCode || kNoFailure);\n\n    // If this is a worker\x2C v8::Isolate::TerminateExecution() is called above.\n    // That function spoofs the stack pointer to cause the stack guard\n    // check to throw the termination exception. Because v8 performs\n    // stack guard check upon every function call\x2C we give it a chance.\n    //\n    // Without this\x2C user code after `process.exit()` would take effect.\n    // test/parallel/test-worker-voluntarily-exit-followed-by-addition.js\n    // test/parallel/test-worker-voluntarily-exit-followed-by-throw.js\n    nop();\n  }\n\n  function kill(pid\x2C sig) {\n    let err;\n\n    // eslint-disable-next-line eqeqeq\n    if (pid != (pid | 0)) {\n      throw new ERR_INVALID_ARG_TYPE('pid'\x2C 'number'\x2C pid);\n    }\n\n    // Preserve null signal\n    if (sig === (sig | 0)) {\n      // XXX(joyeecheung): we have to use process._kill here because\n      // it's monkey-patched by tests.\n      err = process._kill(pid\x2C sig);\n    } else {\n      sig = sig || 'SIGTERM';\n      if (constants[sig]) {\n        err = process._kill(pid\x2C constants[sig]);\n      } else {\n        throw new ERR_UNKNOWN_SIGNAL(sig);\n      }\n    }\n\n    if (err)\n      throw errnoException(err\x2C 'kill');\n\n    return true;\n  }\n\n  const resourceValues = new Float64Array(16);\n  function resourceUsage() {\n    _resourceUsage(resourceValues);\n    return {\n      userCPUTime: resourceValues[0]\x2C\n      systemCPUTime: resourceValues[1]\x2C\n      maxRSS: resourceValues[2]\x2C\n      sharedMemorySize: resourceValues[3]\x2C\n      unsharedDataSize: resourceValues[4]\x2C\n      unsharedStackSize: resourceValues[5]\x2C\n      minorPageFault: resourceValues[6]\x2C\n      majorPageFault: resourceValues[7]\x2C\n      swappedOut: resourceValues[8]\x2C\n      fsRead: resourceValues[9]\x2C\n      fsWrite: resourceValues[10]\x2C\n      ipcSent: resourceValues[11]\x2C\n      ipcReceived: resourceValues[12]\x2C\n      signalsCount: resourceValues[13]\x2C\n      voluntaryContextSwitches: resourceValues[14]\x2C\n      involuntaryContextSwitches: resourceValues[15]\n    };\n  }\n\n\n  return {\n    _rawDebug\x2C\n    cpuUsage\x2C\n    resourceUsage\x2C\n    memoryUsage\x2C\n    kill\x2C\n    exit\n  };\n}\n\nconst replaceUnderscoresRegex = /_/g;\nconst leadingDashesRegex = /^--?/;\nconst trailingValuesRegex = /=.*$/;\n\n// This builds the initial process.allowedNodeEnvironmentFlags\n// from data in the config binding.\nfunction buildAllowedFlags() {\n  const {\n    envSettings: { kAllowedInEnvvar }\x2C\n    types: { kBoolean }\x2C\n  } = internalBinding('options');\n  const { options\x2C aliases } = require('internal/options');\n\n  const allowedNodeEnvironmentFlags = [];\n  for (const { 0: name\x2C 1: info } of options) {\n    if (info.envVarSettings === kAllowedInEnvvar) {\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C name);\n      if (info.type === kBoolean) {\n        const negatedName = `--no-${name.slice(2)}`;\n        ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C negatedName);\n      }\n    }\n  }\n\n  function isAccepted(to) {\n    if (!StringPrototypeStartsWith(to\x2C '-') || to === '--') return true;\n    const recursiveExpansion = aliases.get(to);\n    if (recursiveExpansion) {\n      if (recursiveExpansion[0] === to)\n        ArrayPrototypeSplice(recursiveExpansion\x2C 0\x2C 1);\n      return ArrayPrototypeEvery(recursiveExpansion\x2C isAccepted);\n    }\n    return options.get(to).envVarSettings === kAllowedInEnvvar;\n  }\n  for (const { 0: from\x2C 1: expansion } of aliases) {\n    if (ArrayPrototypeEvery(expansion\x2C isAccepted)) {\n      let canonical = from;\n      if (StringPrototypeEndsWith(canonical\x2C '='))\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 1);\n      if (StringPrototypeEndsWith(canonical\x2C ' <arg>'))\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 4);\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C canonical);\n    }\n  }\n\n  const trimLeadingDashes =\n    (flag) => StringPrototypeReplace(flag\x2C leadingDashesRegex\x2C '');\n\n  // Save these for comparison against flags provided to\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags\x2C\n                                      trimLeadingDashes);\n\n  class NodeEnvironmentFlagsSet extends Set {\n    constructor(array) {\n      super();\n      this[kInternal] = { array };\n    }\n\n    add() {\n      // No-op\x2C `Set` API compatible\n      return this;\n    }\n\n    delete() {\n      // No-op\x2C `Set` API compatible\n      return false;\n    }\n\n    clear() {\n      // No-op\x2C `Set` API compatible\n    }\n\n    has(key) {\n      // This will return `true` based on various possible\n      // permutations of a flag\x2C including present/missing leading\n      // dash(es) and/or underscores-for-dashes.\n      // Strips any values after `=`\x2C inclusive.\n      // TODO(addaleax): It might be more flexible to run the option parser\n      // on a dummy option set and see whether it rejects the argument or\n      // not.\n      if (typeof key === 'string') {\n        key = StringPrototypeReplace(key\x2C replaceUnderscoresRegex\x2C '-');\n        if (RegExpPrototypeExec(leadingDashesRegex\x2C key) !== null) {\n          key = StringPrototypeReplace(key\x2C trailingValuesRegex\x2C '');\n          return ArrayPrototypeIncludes(this[kInternal].array\x2C key);\n        }\n        return ArrayPrototypeIncludes(nodeFlags\x2C key);\n      }\n      return false;\n    }\n\n    entries() {\n      this[kInternal].set ??=\n        new Set(new SafeArrayIterator(this[kInternal].array));\n      return SetPrototypeEntries(this[kInternal].set);\n    }\n\n    forEach(callback\x2C thisArg = undefined) {\n      ArrayPrototypeForEach(\n        this[kInternal].array\x2C\n        (v) => ReflectApply(callback\x2C thisArg\x2C [v\x2C v\x2C this])\n      );\n    }\n\n    get size() {\n      return this[kInternal].array.length;\n    }\n\n    values() {\n      this[kInternal].set ??=\n        new Set(new SafeArrayIterator(this[kInternal].array));\n      return SetPrototypeValues(this[kInternal].set);\n    }\n  }\n  const flagSetValues = NodeEnvironmentFlagsSet.prototype.values;\n  ObjectDefineProperty(NodeEnvironmentFlagsSet.prototype\x2C SymbolIterator\x2C {\n    __proto__: null\x2C\n    value: flagSetValues\x2C\n  });\n  ObjectDefineProperty(NodeEnvironmentFlagsSet.prototype\x2C 'keys'\x2C {\n    __proto__: null\x2C\n    value: flagSetValues\x2C\n  });\n\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\n\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\n    allowedNodeEnvironmentFlags\n  ));\n}\n\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\n// trace event category is enabled.\nlet traceEventsAsyncHook;\n// Dynamically enable/disable the traceEventsAsyncHook\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\n  if (asyncHooksEnabled) {\n    if (!traceEventsAsyncHook) {\n      traceEventsAsyncHook =\n        require('internal/trace_events_async_hooks').createHook();\n    }\n    traceEventsAsyncHook.enable();\n  } else if (traceEventsAsyncHook) {\n    traceEventsAsyncHook.disable();\n  }\n}\n\nfunction isDeprecatedExitCode(code) {\n  if (code !== null && code !== undefined) {\n    const value =\n      typeof code === 'string' && code !== '' ? Number(code) : code;\n    // Check if the value is an integer.\n    if (\n      typeof value !== 'number' ||\n      !NumberIsInteger(value) ||\n      value < NumberMIN_SAFE_INTEGER ||\n      value > NumberMAX_SAFE_INTEGER\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = {\n  toggleTraceCategoryState\x2C\n  assert\x2C\n  buildAllowedFlags\x2C\n  wrapProcessMethods\x2C\n  hrtime\x2C\n  hrtimeBigInt\x2C\n  refreshHrtimeBuffer\x2C\n  isDeprecatedExitCode\x2C\n};\n
code-source-info,0x16645fa7c31e,32,12839,13229,C0O12850C8O12917C16O12950C23O12959C26O12959C35O13025C41O13072C44O13072C52O13112C54O13110C61O13152C63O13150C68O13189C69O13201C70O13214C71O13227,,
tick,0x10020ada4,38583,0,0x0,3,0x0,0x16645fa7b4d2,0x16645fa7a743,0x16645fa7767e,0x16645fa75f6e,0x16645fa75977
code-creation,JS,10,38917,0x16645fa7d376,176,resolve node:path:1095:10,0x286f2a2603d8,~
script-source,39,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  FunctionPrototypeBind\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeLastIndexOf\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeToLowerCase\x2C\n} = primordials;\n\nconst {\n  CHAR_UPPERCASE_A\x2C\n  CHAR_LOWERCASE_A\x2C\n  CHAR_UPPERCASE_Z\x2C\n  CHAR_LOWERCASE_Z\x2C\n  CHAR_DOT\x2C\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_BACKWARD_SLASH\x2C\n  CHAR_COLON\x2C\n  CHAR_QUESTION_MARK\x2C\n} = require('internal/constants');\nconst {\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst platformIsWin32 = (process.platform === 'win32');\n\nfunction isPathSeparator(code) {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code) {\n  return code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code) {\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\n  let res = '';\n  let lastSegmentLength = 0;\n  let lastSlash = -1;\n  let dots = 0;\n  let code = 0;\n  for (let i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = StringPrototypeCharCodeAt(path\x2C i);\n    else if (isPathSeparator(code))\n      break;\n    else\n      code = CHAR_FORWARD_SLASH;\n\n    if (isPathSeparator(code)) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 ||\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\n          if (res.length > 2) {\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\n            if (lastSlashIndex === -1) {\n              res = '';\n              lastSegmentLength = 0;\n            } else {\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\n              lastSegmentLength =\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\n            }\n            lastSlash = i;\n            dots = 0;\n            continue;\n          } else if (res.length !== 0) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          res += res.length > 0 ? `${separator}..` : '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\n        else\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === CHAR_DOT && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction formatExt(ext) {\n  return ext ? `${ext[0] === '.' ? '' : '.'}${ext}` : '';\n}\n\n/**\n * @param {string} sep\n * @param {{\n *  dir?: string;\n *  root?: string;\n *  base?: string;\n *  name?: string;\n *  ext?: string;\n *  }} pathObject\n * @returns {string}\n */\nfunction _format(sep\x2C pathObject) {\n  validateObject(pathObject\x2C 'pathObject');\n  const dir = pathObject.dir || pathObject.root;\n  const base = pathObject.base ||\n    `${pathObject.name || ''}${formatExt(pathObject.ext)}`;\n  if (!dir) {\n    return base;\n  }\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nconst win32 = {\n  /**\n   * path.resolve([from ...]\x2C to)\n   * @param {...string} args\n   * @returns {string}\n   */\n  resolve(...args) {\n    let resolvedDevice = '';\n    let resolvedTail = '';\n    let resolvedAbsolute = false;\n\n    for (let i = args.length - 1; i >= -1; i--) {\n      let path;\n      if (i >= 0) {\n        path = args[i];\n        validateString(path\x2C 'path');\n\n        // Skip empty entries\n        if (path.length === 0) {\n          continue;\n        }\n      } else if (resolvedDevice.length === 0) {\n        path = process.cwd();\n      } else {\n        // Windows has the concept of drive-specific current working\n        // directories. If we've resolved a drive letter but not yet an\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\n        // the drive cwd is not available. We're sure the device is not\n        // a UNC path at this points\x2C because UNC paths are always absolute.\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\n\n        // Verify that a cwd was found and that it actually points\n        // to our drive. If not\x2C default to the drive's root.\n        if (path === undefined ||\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\n            StringPrototypeToLowerCase(resolvedDevice) &&\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\n          path = `${resolvedDevice}\\\\`;\n        }\n      }\n\n      const len = path.length;\n      let rootEnd = 0;\n      let device = '';\n      let isAbsolute = false;\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\n\n      // Try to match a root\n      if (len === 1) {\n        if (isPathSeparator(code)) {\n          // `path` contains just a path separator\n          rootEnd = 1;\n          isAbsolute = true;\n        }\n      } else if (isPathSeparator(code)) {\n        // Possible UNC root\n\n        // If we started with a separator\x2C we know we at least have an\n        // absolute path of some kind (UNC or otherwise)\n        isAbsolute = true;\n\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n          // Matched double path separator at beginning\n          let j = 2;\n          let last = j;\n          // Match 1 or more non-path separators\n          while (j < len &&\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\n            // Matched!\n            last = j;\n            // Match 1 or more path separators\n            while (j < len &&\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j < len && j !== last) {\n              // Matched!\n              last = j;\n              // Match 1 or more non-path separators\n              while (j < len &&\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n                j++;\n              }\n              if (j === len || j !== last) {\n                // We matched a UNC root\n                device =\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\n                rootEnd = j;\n              }\n            }\n          }\n        } else {\n          rootEnd = 1;\n        }\n      } else if (isWindowsDeviceRoot(code) &&\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n        // Possible device root\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\n        rootEnd = 2;\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\n          // Treat separator following drive name as an absolute path\n          // indicator\n          isAbsolute = true;\n          rootEnd = 3;\n        }\n      }\n\n      if (device.length > 0) {\n        if (resolvedDevice.length > 0) {\n          if (StringPrototypeToLowerCase(device) !==\n              StringPrototypeToLowerCase(resolvedDevice))\n            // This path points to another device so it is not applicable\n            continue;\n        } else {\n          resolvedDevice = device;\n        }\n      }\n\n      if (resolvedAbsolute) {\n        if (resolvedDevice.length > 0)\n          break;\n      } else {\n        resolvedTail =\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\n        resolvedAbsolute = isAbsolute;\n        if (isAbsolute && resolvedDevice.length > 0) {\n          break;\n        }\n      }\n    }\n\n    // At this point the path should be resolved to a full absolute path\x2C\n    // but handle relative paths to be safe (might happen when process.cwd()\n    // fails)\n\n    // Normalize the tail path\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\n                                   isPathSeparator);\n\n    return resolvedAbsolute ?\n      `${resolvedDevice}\\\\${resolvedTail}` :\n      `${resolvedDevice}${resolvedTail}` || '.';\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  normalize(path) {\n    validateString(path\x2C 'path');\n    const len = path.length;\n    if (len === 0)\n      return '.';\n    let rootEnd = 0;\n    let device;\n    let isAbsolute = false;\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\n\n    // Try to match a root\n    if (len === 1) {\n      // `path` contains just a single char\x2C exit early to avoid\n      // unnecessary work\n      return isPosixPathSeparator(code) ? '\\\\' : path;\n    }\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n\n      // If we started with a separator\x2C we know we at least have an absolute\n      // path of some kind (UNC or otherwise)\n      isAbsolute = true;\n\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len &&\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len &&\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len &&\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              // Return the normalized version of the UNC root since there\n              // is nothing left to process\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\n            }\n            if (j !== last) {\n              // We matched a UNC root with leftovers\n              device =\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\n              rootEnd = j;\n            }\n          }\n        }\n      } else {\n        rootEnd = 1;\n      }\n    } else if (isWindowsDeviceRoot(code) &&\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      // Possible device root\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\n      rootEnd = 2;\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\n        // Treat separator following drive name as an absolute path\n        // indicator\n        isAbsolute = true;\n        rootEnd = 3;\n      }\n    }\n\n    let tail = rootEnd < len ?\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\n      '';\n    if (tail.length === 0 && !isAbsolute)\n      tail = '.';\n    if (tail.length > 0 &&\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\n      tail += '\\\\';\n    if (device === undefined) {\n      return isAbsolute ? `\\\\${tail}` : tail;\n    }\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {boolean}\n   */\n  isAbsolute(path) {\n    validateString(path\x2C 'path');\n    const len = path.length;\n    if (len === 0)\n      return false;\n\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\n    return isPathSeparator(code) ||\n      // Possible device root\n      (len > 2 &&\n      isWindowsDeviceRoot(code) &&\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\n  }\x2C\n\n  /**\n   * @param {...string} args\n   * @returns {string}\n   */\n  join(...args) {\n    if (args.length === 0)\n      return '.';\n\n    let joined;\n    let firstPart;\n    for (let i = 0; i < args.length; ++i) {\n      const arg = args[i];\n      validateString(arg\x2C 'path');\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = firstPart = arg;\n        else\n          joined += `\\\\${arg}`;\n      }\n    }\n\n    if (joined === undefined)\n      return '.';\n\n    // Make sure that the joined path doesn't start with two slashes\x2C because\n    // normalize() will mistake it for a UNC path then.\n    //\n    // This step is skipped when it is very clear that the user actually\n    // intended to point at a UNC path. This is assumed when the first\n    // non-empty string arguments starts with exactly two slashes followed by\n    // at least one more non-slash character.\n    //\n    // Note that for normalize() to treat a path as a UNC path it needs to\n    // have at least 2 components\x2C so we don't filter for that here.\n    // This means that the user can use join to construct UNC paths from\n    // a server name and a share name; for example:\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\n    let needsReplace = true;\n    let slashCount = 0;\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\n      ++slashCount;\n      const firstLen = firstPart.length;\n      if (firstLen > 1 &&\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\n        ++slashCount;\n        if (firstLen > 2) {\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\n            ++slashCount;\n          else {\n            // We matched a UNC path in the first part\n            needsReplace = false;\n          }\n        }\n      }\n    }\n    if (needsReplace) {\n      // Find any more consecutive slashes we need to replace\n      while (slashCount < joined.length &&\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\n        slashCount++;\n      }\n\n      // Replace the slashes if needed\n      if (slashCount >= 2)\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\n    }\n\n    return win32.normalize(joined);\n  }\x2C\n\n  /**\n   * It will solve the relative path from `from` to `to`\x2C for instance\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n   * @param {string} from\n   * @param {string} to\n   * @returns {string}\n   */\n  relative(from\x2C to) {\n    validateString(from\x2C 'from');\n    validateString(to\x2C 'to');\n\n    if (from === to)\n      return '';\n\n    const fromOrig = win32.resolve(from);\n    const toOrig = win32.resolve(to);\n\n    if (fromOrig === toOrig)\n      return '';\n\n    from = StringPrototypeToLowerCase(fromOrig);\n    to = StringPrototypeToLowerCase(toOrig);\n\n    if (from === to)\n      return '';\n\n    // Trim any leading backslashes\n    let fromStart = 0;\n    while (fromStart < from.length &&\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\n      fromStart++;\n    }\n    // Trim trailing backslashes (applicable to UNC paths only)\n    let fromEnd = from.length;\n    while (\n      fromEnd - 1 > fromStart &&\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\n    ) {\n      fromEnd--;\n    }\n    const fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    let toStart = 0;\n    while (toStart < to.length &&\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\n      toStart++;\n    }\n    // Trim trailing backslashes (applicable to UNC paths only)\n    let toEnd = to.length;\n    while (toEnd - 1 > toStart &&\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\n      toEnd--;\n    }\n    const toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    const length = fromLen < toLen ? fromLen : toLen;\n    let lastCommonSep = -1;\n    let i = 0;\n    for (; i < length; i++) {\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\n        break;\n      else if (fromCode === CHAR_BACKWARD_SLASH)\n        lastCommonSep = i;\n    }\n\n    // We found a mismatch before the first common path separator was seen\x2C so\n    // return the original `to`.\n    if (i !== length) {\n      if (lastCommonSep === -1)\n        return toOrig;\n    } else {\n      if (toLen > length) {\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\n            CHAR_BACKWARD_SLASH) {\n          // We get here if `from` is the exact base path for `to`.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\n        }\n        if (i === 2) {\n          // We get here if `from` is the device root.\n          // For example: from='C:\\\\'; to='C:\\\\foo'\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\n        }\n      }\n      if (fromLen > length) {\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\n            CHAR_BACKWARD_SLASH) {\n          // We get here if `to` is the exact base path for `from`.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n          lastCommonSep = i;\n        } else if (i === 2) {\n          // We get here if `to` is the device root.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n          lastCommonSep = 3;\n        }\n      }\n      if (lastCommonSep === -1)\n        lastCommonSep = 0;\n    }\n\n    let out = '';\n    // Generate the relative path based on the path difference between `to` and\n    // `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd ||\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\n        out += out.length === 0 ? '..' : '\\\\..';\n      }\n    }\n\n    toStart += lastCommonSep;\n\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\n\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\n      ++toStart;\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  toNamespacedPath(path) {\n    // Note: this will *probably* throw somewhere.\n    if (typeof path !== 'string' || path.length === 0)\n      return path;\n\n    const resolvedPath = win32.resolve(path);\n\n    if (resolvedPath.length <= 2)\n      return path;\n\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\n      // Possible UNC root\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\n        }\n      }\n    } else if (\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\n    ) {\n      // Matched device root\x2C convert the path to a long UNC path\n      return `\\\\\\\\?\\\\${resolvedPath}`;\n    }\n\n    return path;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  dirname(path) {\n    validateString(path\x2C 'path');\n    const len = path.length;\n    if (len === 0)\n      return '.';\n    let rootEnd = -1;\n    let offset = 0;\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\n\n    if (len === 1) {\n      // `path` contains just a path separator\x2C exit early to avoid\n      // unnecessary work or a dot.\n      return isPathSeparator(code) ? path : '.';\n    }\n\n    // Try to match a root\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n\n      rootEnd = offset = 1;\n\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len &&\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len &&\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len &&\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              return path;\n            }\n            if (j !== last) {\n              // We matched a UNC root with leftovers\n\n              // Offset by 1 to include the separator after the UNC root to\n              // treat it as a "normal root" on top of a (UNC) root\n              rootEnd = offset = j + 1;\n            }\n          }\n        }\n      }\n    // Possible device root\n    } else if (isWindowsDeviceRoot(code) &&\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      rootEnd =\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\n      offset = rootEnd;\n    }\n\n    let end = -1;\n    let matchedSlash = true;\n    for (let i = len - 1; i >= offset; --i) {\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) {\n      if (rootEnd === -1)\n        return '.';\n\n      end = rootEnd;\n    }\n    return StringPrototypeSlice(path\x2C 0\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @param {string} [suffix]\n   * @returns {string}\n   */\n  basename(path\x2C suffix) {\n    if (suffix !== undefined)\n      validateString(suffix\x2C 'ext');\n    validateString(path\x2C 'path');\n    let start = 0;\n    let end = -1;\n    let matchedSlash = true;\n\n    // Check for a drive letter prefix so as not to mistake the following\n    // path separator as an extra separator at the end of the path that can be\n    // disregarded\n    if (path.length >= 2 &&\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      start = 2;\n    }\n\n    if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\n      if (suffix === path)\n        return '';\n      let extIdx = suffix.length - 1;\n      let firstNonSlashEnd = -1;\n      for (let i = path.length - 1; i >= start; --i) {\n        const code = StringPrototypeCharCodeAt(path\x2C i);\n        if (isPathSeparator(code)) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string\x2C stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator\x2C remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === StringPrototypeCharCodeAt(suffix\x2C extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension\x2C so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match\x2C so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end)\n        end = firstNonSlashEnd;\n      else if (end === -1)\n        end = path.length;\n      return StringPrototypeSlice(path\x2C start\x2C end);\n    }\n    for (let i = path.length - 1; i >= start; --i) {\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // path component\n        matchedSlash = false;\n        end = i + 1;\n      }\n    }\n\n    if (end === -1)\n      return '';\n    return StringPrototypeSlice(path\x2C start\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  extname(path) {\n    validateString(path\x2C 'path');\n    let start = 0;\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n\n    // Check for a drive letter prefix so as not to mistake the following\n    // path separator as an extra separator at the end of the path that can be\n    // disregarded\n\n    if (path.length >= 2 &&\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\n      start = startPart = 2;\n    }\n\n    for (let i = path.length - 1; i >= start; --i) {\n      const code = StringPrototypeCharCodeAt(path\x2C i);\n      if (isPathSeparator(code)) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 ||\n        end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        (preDotState === 1 &&\n         startDot === end - 1 &&\n         startDot === startPart + 1)) {\n      return '';\n    }\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\n  }\x2C\n\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\n\n  /**\n   * @param {string} path\n   * @returns {{\n   *  dir: string;\n   *  root: string;\n   *  base: string;\n   *  name: string;\n   *  ext: string;\n   *  }}\n   */\n  parse(path) {\n    validateString(path\x2C 'path');\n\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\n    if (path.length === 0)\n      return ret;\n\n    const len = path.length;\n    let rootEnd = 0;\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\n\n    if (len === 1) {\n      if (isPathSeparator(code)) {\n        // `path` contains just a path separator\x2C exit early to avoid\n        // unnecessary work\n        ret.root = ret.dir = path;\n        return ret;\n      }\n      ret.base = ret.name = path;\n      return ret;\n    }\n    // Try to match a root\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n\n      rootEnd = 1;\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len &&\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len &&\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len &&\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              rootEnd = j;\n            } else if (j !== last) {\n              // We matched a UNC root with leftovers\n              rootEnd = j + 1;\n            }\n          }\n        }\n      }\n    } else if (isWindowsDeviceRoot(code) &&\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      // Possible device root\n      if (len <= 2) {\n        // `path` contains just a drive root\x2C exit early to avoid\n        // unnecessary work\n        ret.root = ret.dir = path;\n        return ret;\n      }\n      rootEnd = 2;\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\n        if (len === 3) {\n          // `path` contains just a drive root\x2C exit early to avoid\n          // unnecessary work\n          ret.root = ret.dir = path;\n          return ret;\n        }\n        rootEnd = 3;\n      }\n    }\n    if (rootEnd > 0)\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\n\n    let startDot = -1;\n    let startPart = rootEnd;\n    let end = -1;\n    let matchedSlash = true;\n    let i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= rootEnd; --i) {\n      code = StringPrototypeCharCodeAt(path\x2C i);\n      if (isPathSeparator(code)) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (end !== -1) {\n      if (startDot === -1 ||\n          // We saw a non-dot character immediately before the dot\n          preDotState === 0 ||\n          // The (right-most) trimmed path component is exactly '..'\n          (preDotState === 1 &&\n           startDot === end - 1 &&\n           startDot === startPart + 1)) {\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\n      } else {\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\n      }\n    }\n\n    // If the directory is the root\x2C use the entire root as the `dir` including\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n    if (startPart > 0 && startPart !== rootEnd)\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\n    else\n      ret.dir = ret.root;\n\n    return ret;\n  }\x2C\n\n  sep: '\\\\'\x2C\n  delimiter: ';'\x2C\n  win32: null\x2C\n  posix: null\n};\n\nconst posixCwd = (() => {\n  if (platformIsWin32) {\n    // Converts Windows' backslash path separators to POSIX forward slashes\n    // and truncates any drive indicator\n    const regexp = /\\\\/g;\n    return () => {\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\n    };\n  }\n\n  // We're already on POSIX\x2C no need for any transformations\n  return () => process.cwd();\n})();\n\nconst posix = {\n  /**\n   * path.resolve([from ...]\x2C to)\n   * @param {...string} args\n   * @returns {string}\n   */\n  resolve(...args) {\n    let resolvedPath = '';\n    let resolvedAbsolute = false;\n\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      const path = i >= 0 ? args[i] : posixCwd();\n\n      validateString(path\x2C 'path');\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = `${path}/${resolvedPath}`;\n      resolvedAbsolute =\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    }\n\n    // At this point the path should be resolved to a full absolute path\x2C but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\n                                   isPosixPathSeparator);\n\n    if (resolvedAbsolute) {\n      return `/${resolvedPath}`;\n    }\n    return resolvedPath.length > 0 ? resolvedPath : '.';\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  normalize(path) {\n    validateString(path\x2C 'path');\n\n    if (path.length === 0)\n      return '.';\n\n    const isAbsolute =\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    const trailingSeparator =\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\n\n    // Normalize the path\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\n\n    if (path.length === 0) {\n      if (isAbsolute)\n        return '/';\n      return trailingSeparator ? './' : '.';\n    }\n    if (trailingSeparator)\n      path += '/';\n\n    return isAbsolute ? `/${path}` : path;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {boolean}\n   */\n  isAbsolute(path) {\n    validateString(path\x2C 'path');\n    return path.length > 0 &&\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n  }\x2C\n\n  /**\n   * @param {...string} args\n   * @returns {string}\n   */\n  join(...args) {\n    if (args.length === 0)\n      return '.';\n    let joined;\n    for (let i = 0; i < args.length; ++i) {\n      const arg = args[i];\n      validateString(arg\x2C 'path');\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += `/${arg}`;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  }\x2C\n\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @returns {string}\n   */\n  relative(from\x2C to) {\n    validateString(from\x2C 'from');\n    validateString(to\x2C 'to');\n\n    if (from === to)\n      return '';\n\n    // Trim leading forward slashes.\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to)\n      return '';\n\n    const fromStart = 1;\n    const fromEnd = from.length;\n    const fromLen = fromEnd - fromStart;\n    const toStart = 1;\n    const toLen = to.length - toStart;\n\n    // Compare paths to find the longest common path from root\n    const length = (fromLen < toLen ? fromLen : toLen);\n    let lastCommonSep = -1;\n    let i = 0;\n    for (; i < length; i++) {\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\n        break;\n      else if (fromCode === CHAR_FORWARD_SLASH)\n        lastCommonSep = i;\n    }\n    if (i === length) {\n      if (toLen > length) {\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\n          // We get here if `from` is the exact base path for `to`.\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\n        }\n        if (i === 0) {\n          // We get here if `from` is the root\n          // For example: from='/'; to='/foo'\n          return StringPrototypeSlice(to\x2C toStart + i);\n        }\n      } else if (fromLen > length) {\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\n            CHAR_FORWARD_SLASH) {\n          // We get here if `to` is the exact base path for `from`.\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\n          lastCommonSep = i;\n        } else if (i === 0) {\n          // We get here if `to` is the root.\n          // For example: from='/foo/bar'; to='/'\n          lastCommonSep = 0;\n        }\n      }\n    }\n\n    let out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`.\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd ||\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\n        out += out.length === 0 ? '..' : '/..';\n      }\n    }\n\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\n    // the common path parts.\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  toNamespacedPath(path) {\n    // Non-op on posix systems\n    return path;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  dirname(path) {\n    validateString(path\x2C 'path');\n    if (path.length === 0)\n      return '.';\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    let end = -1;\n    let matchedSlash = true;\n    for (let i = path.length - 1; i >= 1; --i) {\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1)\n      return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1)\n      return '//';\n    return StringPrototypeSlice(path\x2C 0\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @param {string} [suffix]\n   * @returns {string}\n   */\n  basename(path\x2C suffix) {\n    if (suffix !== undefined)\n      validateString(suffix\x2C 'ext');\n    validateString(path\x2C 'path');\n\n    let start = 0;\n    let end = -1;\n    let matchedSlash = true;\n\n    if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\n      if (suffix === path)\n        return '';\n      let extIdx = suffix.length - 1;\n      let firstNonSlashEnd = -1;\n      for (let i = path.length - 1; i >= 0; --i) {\n        const code = StringPrototypeCharCodeAt(path\x2C i);\n        if (code === CHAR_FORWARD_SLASH) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string\x2C stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator\x2C remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === StringPrototypeCharCodeAt(suffix\x2C extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension\x2C so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match\x2C so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end)\n        end = firstNonSlashEnd;\n      else if (end === -1)\n        end = path.length;\n      return StringPrototypeSlice(path\x2C start\x2C end);\n    }\n    for (let i = path.length - 1; i >= 0; --i) {\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // path component\n        matchedSlash = false;\n        end = i + 1;\n      }\n    }\n\n    if (end === -1)\n      return '';\n    return StringPrototypeSlice(path\x2C start\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  extname(path) {\n    validateString(path\x2C 'path');\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n    for (let i = path.length - 1; i >= 0; --i) {\n      const code = StringPrototypeCharCodeAt(path\x2C i);\n      if (code === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 ||\n        end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        (preDotState === 1 &&\n         startDot === end - 1 &&\n         startDot === startPart + 1)) {\n      return '';\n    }\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\n  }\x2C\n\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\n\n  /**\n   * @param {string} path\n   * @returns {{\n   *   dir: string;\n   *   root: string;\n   *   base: string;\n   *   name: string;\n   *   ext: string;\n   *   }}\n   */\n  parse(path) {\n    validateString(path\x2C 'path');\n\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\n    if (path.length === 0)\n      return ret;\n    const isAbsolute =\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    let start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    let i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      const code = StringPrototypeCharCodeAt(path\x2C i);\n      if (code === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (end !== -1) {\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\n      if (startDot === -1 ||\n          // We saw a non-dot character immediately before the dot\n          preDotState === 0 ||\n          // The (right-most) trimmed path component is exactly '..'\n          (preDotState === 1 &&\n          startDot === end - 1 &&\n          startDot === startPart + 1)) {\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\n      } else {\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\n      }\n    }\n\n    if (startPart > 0)\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\n    else if (isAbsolute)\n      ret.dir = '/';\n\n    return ret;\n  }\x2C\n\n  sep: '/'\x2C\n  delimiter: ':'\x2C\n  win32: null\x2C\n  posix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\n// Legacy internal API\x2C docs-only deprecated: DEP0080\nwin32._makeLong = win32.toNamespacedPath;\nposix._makeLong = posix.toNamespacedPath;\n\nmodule.exports = platformIsWin32 ? win32 : posix;\n
code-source-info,0x16645fa7d376,39,33903,34813,C0O33903C3O33938C6O33969C8O33999C12O34006C16O34019C18O34013C25O34023C27O34067C28O34069C35O34080C42O34086C45O34086C49O34105C57O34105C62O34179C68O34186C73O34203C75O34228C87O34254C92O34276C99O34303C107O34342C109O34338C113O34042C118O33981C122O34558C127O34604C138O34573C144O34690C148O34720C153O34731C157O34746C158O34777C164O34784C175O34809,,
tick,0x10020ada4,40500,0,0x0,3,0x0,0x16645fa7a7c0,0x16645fa7767e,0x16645fa75f6e,0x16645fa75977
code-creation,JS,10,40833,0x3c71b40f9646,13, node:path:1086:10,0x286f2a260388,~
code-source-info,0x3c71b40f9646,39,33752,33771,C0O33766C3O33766C8O33766C12O33771,,
code-creation,JS,10,40833,0x3c71b40f9746,40,wrappedCwd node:internal/bootstrap/switches/does_own_process_state:124:20,0x5d9fd2e8238,~
script-source,72,node:internal/bootstrap/switches/does_own_process_state,'use strict';\n\nconst credentials = internalBinding('credentials');\nconst rawMethods = internalBinding('process_methods');\n\nprocess.abort = rawMethods.abort;\nprocess.umask = wrappedUmask;\nprocess.chdir = wrappedChdir;\nprocess.cwd = wrappedCwd;\n\nif (credentials.implementsPosixCredentials) {\n  const wrapped = wrapPosixCredentialSetters(credentials);\n\n  process.initgroups = wrapped.initgroups;\n  process.setgroups = wrapped.setgroups;\n  process.setegid = wrapped.setegid;\n  process.seteuid = wrapped.seteuid;\n  process.setgid = wrapped.setgid;\n  process.setuid = wrapped.setuid;\n}\n\n// ---- keep the attachment of the wrappers above so that it's easier to ----\n// ----              compare the setups side-by-side                    -----\n\nconst {\n  parseFileMode\x2C\n  validateArray\x2C\n  validateString\n} = require('internal/validators');\n\nfunction wrapPosixCredentialSetters(credentials) {\n  const {\n    codes: {\n      ERR_INVALID_ARG_TYPE\x2C\n      ERR_UNKNOWN_CREDENTIAL\n    }\n  } = require('internal/errors');\n  const {\n    validateUint32\n  } = require('internal/validators');\n\n  const {\n    initgroups: _initgroups\x2C\n    setgroups: _setgroups\x2C\n    setegid: _setegid\x2C\n    seteuid: _seteuid\x2C\n    setgid: _setgid\x2C\n    setuid: _setuid\n  } = credentials;\n\n  function initgroups(user\x2C extraGroup) {\n    validateId(user\x2C 'user');\n    validateId(extraGroup\x2C 'extraGroup');\n    // Result is 0 on success\x2C 1 if user is unknown\x2C 2 if group is unknown.\n    const result = _initgroups(user\x2C extraGroup);\n    if (result === 1) {\n      throw new ERR_UNKNOWN_CREDENTIAL('User'\x2C user);\n    } else if (result === 2) {\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C extraGroup);\n    }\n  }\n\n  function setgroups(groups) {\n    validateArray(groups\x2C 'groups');\n    for (let i = 0; i < groups.length; i++) {\n      validateId(groups[i]\x2C `groups[${i}]`);\n    }\n    // Result is 0 on success. A positive integer indicates that the\n    // corresponding group was not found.\n    const result = _setgroups(groups);\n    if (result > 0) {\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C groups[result - 1]);\n    }\n  }\n\n  function wrapIdSetter(type\x2C method) {\n    return function(id) {\n      validateId(id\x2C 'id');\n      if (typeof id === 'number') id >>>= 0;\n      // Result is 0 on success\x2C 1 if credential is unknown.\n      const result = method(id);\n      if (result === 1) {\n        throw new ERR_UNKNOWN_CREDENTIAL(type\x2C id);\n      }\n    };\n  }\n\n  function validateId(id\x2C name) {\n    if (typeof id === 'number') {\n      validateUint32(id\x2C name);\n    } else if (typeof id !== 'string') {\n      throw new ERR_INVALID_ARG_TYPE(name\x2C ['number'\x2C 'string']\x2C id);\n    }\n  }\n\n  return {\n    initgroups\x2C\n    setgroups\x2C\n    setegid: wrapIdSetter('Group'\x2C _setegid)\x2C\n    seteuid: wrapIdSetter('User'\x2C _seteuid)\x2C\n    setgid: wrapIdSetter('Group'\x2C _setgid)\x2C\n    setuid: wrapIdSetter('User'\x2C _setuid)\n  };\n}\n\n// Cache the working directory to prevent lots of lookups. If the working\n// directory is changed by `chdir`\x2C it'll be updated.\nlet cachedCwd = '';\n\nfunction wrappedChdir(directory) {\n  validateString(directory\x2C 'directory');\n  rawMethods.chdir(directory);\n  // Mark cache that it requires an update.\n  cachedCwd = '';\n}\n\nfunction wrappedUmask(mask) {\n  if (mask !== undefined) {\n    mask = parseFileMode(mask\x2C 'mask');\n  }\n  return rawMethods.umask(mask);\n}\n\nfunction wrappedCwd() {\n  if (cachedCwd === '')\n    cachedCwd = rawMethods.cwd();\n  return cachedCwd;\n}\n
code-source-info,0x3c71b40f9746,72,3343,3427,C0O3350C7O3364C12O3376C17O3399C22O3399C29O3386C35O3408C39O3425,,
code-creation,JS,10,41042,0x3c71b40f9dae,444,normalizeString node:path:66:25,0x286f2a25ff78,~
code-source-info,0x3c71b40f9dae
tick,0x1a5222fbc,41083,0,0x0,3,0x0,0x16645fa7d400,0x16645fa7a7c0,0x16645fa7767e,0x16645fa75f6e,0x16645fa75977
code-creation,JS,10,41292,0x3c71b40fa136,8,isPosixPathSeparator node:path:56:30,0x286f2a25fed8,~
code-source-info,0x3c71b40fa136,39,1854,1902,C0O1865C2O1881C4O1877C7O1900,,
code-creation,JS,10,41667,0x3c71b40fa446,376,initializeGlobalConsole node:internal/console/constructor:687:33,0x286f2a26ac90,~
script-source,44,node:internal/console/constructor,'use strict';\n\n// The Console constructor is not actually used to construct the global\n// console. It's exported for backwards compatibility.\n\nconst {\n  ArrayFrom\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeUnshift\x2C\n  Boolean\x2C\n  ErrorCaptureStackTrace\x2C\n  FunctionPrototypeBind\x2C\n  MathFloor\x2C\n  Number\x2C\n  NumberPrototypeToFixed\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectValues\x2C\n  ReflectApply\x2C\n  ReflectConstruct\x2C\n  ReflectOwnKeys\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  SafeWeakMap\x2C\n  SafeSet\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypePadStart\x2C\n  StringPrototypeRepeat\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  Symbol\x2C\n  SymbolHasInstance\x2C\n  SymbolToStringTag\x2C\n} = primordials;\n\nconst { trace } = internalBinding('trace_events');\nconst {\n  isStackOverflowError\x2C\n  codes: {\n    ERR_CONSOLE_WRITABLE_STREAM\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  validateArray\x2C\n  validateInteger\x2C\n  validateObject\x2C\n} = require('internal/validators');\nconst { previewEntries } = internalBinding('util');\nconst { Buffer: { isBuffer } } = require('buffer');\nconst {\n  inspect\x2C\n  formatWithOptions\n} = require('internal/util/inspect');\nconst {\n  isTypedArray\x2C isSet\x2C isMap\x2C isSetIterator\x2C isMapIterator\x2C\n} = require('internal/util/types');\nconst {\n  CHAR_LOWERCASE_B: kTraceBegin\x2C\n  CHAR_LOWERCASE_E: kTraceEnd\x2C\n  CHAR_LOWERCASE_N: kTraceInstant\x2C\n  CHAR_UPPERCASE_C: kTraceCount\x2C\n} = require('internal/constants');\nconst kCounts = Symbol('counts');\n\nconst kTraceConsoleCategory = 'node\x2Cnode.console';\n\nconst kSecond = 1000;\nconst kMinute = 60 * kSecond;\nconst kHour = 60 * kMinute;\nconst kMaxGroupIndentation = 1000;\n\n// Lazy loaded for startup performance.\nlet cliTable;\n\n// Track amount of indentation required via `console.group()`.\nconst kGroupIndent = Symbol('kGroupIndent');\nconst kGroupIndentationWidth = Symbol('kGroupIndentWidth');\nconst kFormatForStderr = Symbol('kFormatForStderr');\nconst kFormatForStdout = Symbol('kFormatForStdout');\nconst kGetInspectOptions = Symbol('kGetInspectOptions');\nconst kColorMode = Symbol('kColorMode');\nconst kIsConsole = Symbol('kIsConsole');\nconst kWriteToConsole = Symbol('kWriteToConsole');\nconst kBindProperties = Symbol('kBindProperties');\nconst kBindStreamsEager = Symbol('kBindStreamsEager');\nconst kBindStreamsLazy = Symbol('kBindStreamsLazy');\nconst kUseStdout = Symbol('kUseStdout');\nconst kUseStderr = Symbol('kUseStderr');\n\nconst optionsMap = new SafeWeakMap();\n\nfunction Console(options /* or: stdout\x2C stderr\x2C ignoreErrors = true */) {\n  // We have to test new.target here to see if this function is called\n  // with new\x2C because we need to define a custom instanceof to accommodate\n  // the global console.\n  if (new.target === undefined) {\n    return ReflectConstruct(Console\x2C arguments);\n  }\n\n  if (!options || typeof options.write === 'function') {\n    options = {\n      stdout: options\x2C\n      stderr: arguments[1]\x2C\n      ignoreErrors: arguments[2]\n    };\n  }\n\n  const {\n    stdout\x2C\n    stderr = stdout\x2C\n    ignoreErrors = true\x2C\n    colorMode = 'auto'\x2C\n    inspectOptions\x2C\n    groupIndentation\x2C\n  } = options;\n\n  if (!stdout || typeof stdout.write !== 'function') {\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stdout');\n  }\n  if (!stderr || typeof stderr.write !== 'function') {\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stderr');\n  }\n\n  if (typeof colorMode !== 'boolean' && colorMode !== 'auto')\n    throw new ERR_INVALID_ARG_VALUE('colorMode'\x2C colorMode);\n\n  if (groupIndentation !== undefined) {\n    validateInteger(groupIndentation\x2C 'groupIndentation'\x2C\n                    0\x2C kMaxGroupIndentation);\n  }\n\n  if (inspectOptions !== undefined) {\n    validateObject(inspectOptions\x2C 'options.inspectOptions');\n\n    if (inspectOptions.colors !== undefined &&\n        options.colorMode !== undefined) {\n      throw new ERR_INCOMPATIBLE_OPTION_PAIR(\n        'options.inspectOptions.color'\x2C 'colorMode');\n    }\n    optionsMap.set(this\x2C inspectOptions);\n  }\n\n  // Bind the prototype functions to this Console instance\n  ArrayPrototypeForEach(ObjectKeys(Console.prototype)\x2C (key) => {\n    // We have to bind the methods grabbed from the instance instead of from\n    // the prototype so that users extending the Console can override them\n    // from the prototype chain of the subclass.\n    this[key] = FunctionPrototypeBind(this[key]\x2C this);\n    ObjectDefineProperty(this[key]\x2C 'name'\x2C {\n      __proto__: null\x2C\n      value: key\n    });\n  });\n\n  this[kBindStreamsEager](stdout\x2C stderr);\n  this[kBindProperties](ignoreErrors\x2C colorMode\x2C groupIndentation);\n}\n\nconst consolePropAttributes = {\n  writable: true\x2C\n  enumerable: false\x2C\n  configurable: true\n};\n\n// Fixup global.console instanceof global.console.Console\nObjectDefineProperty(Console\x2C SymbolHasInstance\x2C {\n  __proto__: null\x2C\n  value(instance) {\n    return instance[kIsConsole];\n  }\n});\n\nconst kColorInspectOptions = { colors: true };\nconst kNoColorInspectOptions = {};\n\nObjectDefineProperties(Console.prototype\x2C {\n  [kBindStreamsEager]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    // Eager version for the Console constructor\n    value: function(stdout\x2C stderr) {\n      ObjectDefineProperties(this\x2C {\n        '_stdout': { __proto__: null\x2C ...consolePropAttributes\x2C value: stdout }\x2C\n        '_stderr': { __proto__: null\x2C ...consolePropAttributes\x2C value: stderr }\x2C\n      });\n    }\n  }\x2C\n  [kBindStreamsLazy]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    // Lazily load the stdout and stderr from an object so we don't\n    // create the stdio streams when they are not even accessed\n    value: function(object) {\n      let stdout;\n      let stderr;\n      ObjectDefineProperties(this\x2C {\n        '_stdout': {\n          __proto__: null\x2C\n          enumerable: false\x2C\n          configurable: true\x2C\n          get() {\n            if (!stdout) stdout = object.stdout;\n            return stdout;\n          }\x2C\n          set(value) { stdout = value; }\n        }\x2C\n        '_stderr': {\n          __proto__: null\x2C\n          enumerable: false\x2C\n          configurable: true\x2C\n          get() {\n            if (!stderr) { stderr = object.stderr; }\n            return stderr;\n          }\x2C\n          set(value) { stderr = value; }\n        }\n      });\n    }\n  }\x2C\n  [kBindProperties]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    value: function(ignoreErrors\x2C colorMode\x2C groupIndentation = 2) {\n      ObjectDefineProperties(this\x2C {\n        '_stdoutErrorHandler': {\n          __proto__: null\x2C\n          ...consolePropAttributes\x2C\n          value: createWriteErrorHandler(this\x2C kUseStdout)\n        }\x2C\n        '_stderrErrorHandler': {\n          ...consolePropAttributes\x2C\n          __proto__: null\x2C\n          value: createWriteErrorHandler(this\x2C kUseStderr)\n        }\x2C\n        '_ignoreErrors': {\n          __proto__: null\x2C\n          ...consolePropAttributes\x2C\n          value: Boolean(ignoreErrors)\n        }\x2C\n        '_times': { __proto__: null\x2C ...consolePropAttributes\x2C value: new SafeMap() }\x2C\n        // Corresponds to https://console.spec.whatwg.org/#count-map\n        [kCounts]: { __proto__: null\x2C ...consolePropAttributes\x2C value: new SafeMap() }\x2C\n        [kColorMode]: { __proto__: null\x2C ...consolePropAttributes\x2C value: colorMode }\x2C\n        [kIsConsole]: { __proto__: null\x2C ...consolePropAttributes\x2C value: true }\x2C\n        [kGroupIndent]: { __proto__: null\x2C ...consolePropAttributes\x2C value: '' }\x2C\n        [kGroupIndentationWidth]: {\n          __proto__: null\x2C\n          ...consolePropAttributes\x2C\n          value: groupIndentation\n        }\x2C\n        [SymbolToStringTag]: {\n          __proto__: null\x2C\n          writable: false\x2C\n          enumerable: false\x2C\n          configurable: true\x2C\n          value: 'console'\n        }\n      });\n    }\n  }\x2C\n  [kWriteToConsole]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    value: function(streamSymbol\x2C string) {\n      const ignoreErrors = this._ignoreErrors;\n      const groupIndent = this[kGroupIndent];\n\n      const useStdout = streamSymbol === kUseStdout;\n      const stream = useStdout ? this._stdout : this._stderr;\n      const errorHandler = useStdout ?\n        this._stdoutErrorHandler : this._stderrErrorHandler;\n\n      if (groupIndent.length !== 0) {\n        if (StringPrototypeIncludes(string\x2C '\\n')) {\n          string = RegExpPrototypeSymbolReplace(/\\n/g\x2C string\x2C `\\n${groupIndent}`);\n        }\n        string = groupIndent + string;\n      }\n      string += '\\n';\n\n      if (ignoreErrors === false) return stream.write(string);\n\n      // There may be an error occurring synchronously (e.g. for files or TTYs\n      // on POSIX systems) or asynchronously (e.g. pipes on POSIX systems)\x2C so\n      // handle both situations.\n      try {\n        // Add and later remove a noop error handler to catch synchronous\n        // errors.\n        if (stream.listenerCount('error') === 0)\n          stream.once('error'\x2C noop);\n\n        stream.write(string\x2C errorHandler);\n      } catch (e) {\n        // Console is a debugging utility\x2C so it swallowing errors is not\n        // desirable even in edge cases such as low stack space.\n        if (isStackOverflowError(e))\n          throw e;\n        // Sorry\x2C there's no proper way to pass along the error here.\n      } finally {\n        stream.removeListener('error'\x2C noop);\n      }\n    }\n  }\x2C\n  [kGetInspectOptions]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    value: function(stream) {\n      let color = this[kColorMode];\n      if (color === 'auto') {\n        color = stream.isTTY && (\n          typeof stream.getColorDepth === 'function' ?\n            stream.getColorDepth() > 2 : true);\n      }\n\n      const options = optionsMap.get(this);\n      if (options) {\n        if (options.colors === undefined) {\n          options.colors = color;\n        }\n        return options;\n      }\n\n      return color ? kColorInspectOptions : kNoColorInspectOptions;\n    }\n  }\x2C\n  [kFormatForStdout]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    value: function(args) {\n      const opts = this[kGetInspectOptions](this._stdout);\n      ArrayPrototypeUnshift(args\x2C opts);\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\n    }\n  }\x2C\n  [kFormatForStderr]: {\n    __proto__: null\x2C\n    ...consolePropAttributes\x2C\n    value: function(args) {\n      const opts = this[kGetInspectOptions](this._stderr);\n      ArrayPrototypeUnshift(args\x2C opts);\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\n    }\n  }\x2C\n});\n\n// Make a function that can serve as the callback passed to `stream.write()`.\nfunction createWriteErrorHandler(instance\x2C streamSymbol) {\n  return (err) => {\n    // This conditional evaluates to true if and only if there was an error\n    // that was not already emitted (which happens when the _write callback\n    // is invoked asynchronously).\n    const stream = streamSymbol === kUseStdout ?\n      instance._stdout : instance._stderr;\n    if (err !== null && !stream._writableState.errorEmitted) {\n      // If there was an error\x2C it will be emitted on `stream` as\n      // an `error` event. Adding a `once` listener will keep that error\n      // from becoming an uncaught exception\x2C but since the handler is\n      // removed after the event\x2C non-console.* writes won't be affected.\n      // we are only adding noop if there is no one else listening for 'error'\n      if (stream.listenerCount('error') === 0) {\n        stream.once('error'\x2C noop);\n      }\n    }\n  };\n}\n\nconst consoleMethods = {\n  log(...args) {\n    this[kWriteToConsole](kUseStdout\x2C this[kFormatForStdout](args));\n  }\x2C\n\n\n  warn(...args) {\n    this[kWriteToConsole](kUseStderr\x2C this[kFormatForStderr](args));\n  }\x2C\n\n\n  dir(object\x2C options) {\n    this[kWriteToConsole](kUseStdout\x2C inspect(object\x2C {\n      customInspect: false\x2C\n      ...this[kGetInspectOptions](this._stdout)\x2C\n      ...options\n    }));\n  }\x2C\n\n  time(label = 'default') {\n    // Coerces everything other than Symbol to a string\n    label = `${label}`;\n    if (this._times.has(label)) {\n      process.emitWarning(`Label '${label}' already exists for console.time()`);\n      return;\n    }\n    trace(kTraceBegin\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\n    this._times.set(label\x2C process.hrtime());\n  }\x2C\n\n  timeEnd(label = 'default') {\n    // Coerces everything other than Symbol to a string\n    label = `${label}`;\n    const found = timeLogImpl(this\x2C 'timeEnd'\x2C label);\n    trace(kTraceEnd\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\n    if (found) {\n      this._times.delete(label);\n    }\n  }\x2C\n\n  timeLog(label = 'default'\x2C ...data) {\n    // Coerces everything other than Symbol to a string\n    label = `${label}`;\n    timeLogImpl(this\x2C 'timeLog'\x2C label\x2C data);\n    trace(kTraceInstant\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\n  }\x2C\n\n  trace: function trace(...args) {\n    const err = {\n      name: 'Trace'\x2C\n      message: this[kFormatForStderr](args)\n    };\n    ErrorCaptureStackTrace(err\x2C trace);\n    this.error(err.stack);\n  }\x2C\n\n  assert(expression\x2C ...args) {\n    if (!expression) {\n      args[0] = `Assertion failed${args.length === 0 ? '' : `: ${args[0]}`}`;\n      // The arguments will be formatted in warn() again\n      ReflectApply(this.warn\x2C this\x2C args);\n    }\n  }\x2C\n\n  // Defined by: https://console.spec.whatwg.org/#clear\n  clear() {\n    // It only makes sense to clear if _stdout is a TTY.\n    // Otherwise\x2C do nothing.\n    if (this._stdout.isTTY && process.env.TERM !== 'dumb') {\n      // The require is here intentionally to avoid readline being\n      // required too early when console is first loaded.\n      const {\n        cursorTo\x2C\n        clearScreenDown\x2C\n      } = require('internal/readline/callbacks');\n      cursorTo(this._stdout\x2C 0\x2C 0);\n      clearScreenDown(this._stdout);\n    }\n  }\x2C\n\n  // Defined by: https://console.spec.whatwg.org/#count\n  count(label = 'default') {\n    // Ensures that label is a string\x2C and only things that can be\n    // coerced to strings. e.g. Symbol is not allowed\n    label = `${label}`;\n    const counts = this[kCounts];\n    let count = counts.get(label);\n    if (count === undefined)\n      count = 1;\n    else\n      count++;\n    counts.set(label\x2C count);\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C count);\n    this.log(`${label}: ${count}`);\n  }\x2C\n\n  // Defined by: https://console.spec.whatwg.org/#countreset\n  countReset(label = 'default') {\n    const counts = this[kCounts];\n    if (!counts.has(label)) {\n      process.emitWarning(`Count for '${label}' does not exist`);\n      return;\n    }\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C 0);\n    counts.delete(`${label}`);\n  }\x2C\n\n  group(...data) {\n    if (data.length > 0) {\n      ReflectApply(this.log\x2C this\x2C data);\n    }\n    this[kGroupIndent] +=\n      StringPrototypeRepeat(' '\x2C this[kGroupIndentationWidth]);\n  }\x2C\n\n  groupEnd() {\n    this[kGroupIndent] = StringPrototypeSlice(\n      this[kGroupIndent]\x2C\n      0\x2C\n      this[kGroupIndent].length - this[kGroupIndentationWidth]\n    );\n  }\x2C\n\n  // https://console.spec.whatwg.org/#table\n  table(tabularData\x2C properties) {\n    if (properties !== undefined)\n      validateArray(properties\x2C 'properties');\n\n    if (tabularData === null || typeof tabularData !== 'object')\n      return this.log(tabularData);\n\n    cliTable ??= require('internal/cli_table');\n    const final = (k\x2C v) => this.log(cliTable(k\x2C v));\n\n    const _inspect = (v) => {\n      const depth = v !== null &&\n                    typeof v === 'object' &&\n                    !isArray(v) &&\n                    ObjectKeys(v).length > 2 ? -1 : 0;\n      const opt = {\n        depth\x2C\n        maxArrayLength: 3\x2C\n        breakLength: Infinity\x2C\n        ...this[kGetInspectOptions](this._stdout)\n      };\n      return inspect(v\x2C opt);\n    };\n    const getIndexArray = (length) => ArrayFrom(\n      { length }\x2C (_\x2C i) => _inspect(i));\n\n    const mapIter = isMapIterator(tabularData);\n    let isKeyValue = false;\n    let i = 0;\n    if (mapIter) {\n      const res = previewEntries(tabularData\x2C true);\n      tabularData = res[0];\n      isKeyValue = res[1];\n    }\n\n    if (isKeyValue || isMap(tabularData)) {\n      const keys = [];\n      const values = [];\n      let length = 0;\n      if (mapIter) {\n        for (; i < tabularData.length / 2; ++i) {\n          ArrayPrototypePush(keys\x2C _inspect(tabularData[i * 2]));\n          ArrayPrototypePush(values\x2C _inspect(tabularData[i * 2 + 1]));\n          length++;\n        }\n      } else {\n        for (const { 0: k\x2C 1: v } of tabularData) {\n          ArrayPrototypePush(keys\x2C _inspect(k));\n          ArrayPrototypePush(values\x2C _inspect(v));\n          length++;\n        }\n      }\n      return final([\n        iterKey\x2C keyKey\x2C valuesKey\x2C\n      ]\x2C [\n        getIndexArray(length)\x2C\n        keys\x2C\n        values\x2C\n      ]);\n    }\n\n    const setIter = isSetIterator(tabularData);\n    if (setIter)\n      tabularData = previewEntries(tabularData);\n\n    const setlike = setIter || mapIter || isSet(tabularData);\n    if (setlike) {\n      const values = [];\n      let length = 0;\n      for (const v of tabularData) {\n        ArrayPrototypePush(values\x2C _inspect(v));\n        length++;\n      }\n      return final([iterKey\x2C valuesKey]\x2C [getIndexArray(length)\x2C values]);\n    }\n\n    const map = { __proto__: null };\n    let hasPrimitives = false;\n    const valuesKeyArray = [];\n    const indexKeyArray = ObjectKeys(tabularData);\n\n    for (; i < indexKeyArray.length; i++) {\n      const item = tabularData[indexKeyArray[i]];\n      const primitive = item === null ||\n          (typeof item !== 'function' && typeof item !== 'object');\n      if (properties === undefined && primitive) {\n        hasPrimitives = true;\n        valuesKeyArray[i] = _inspect(item);\n      } else {\n        const keys = properties || ObjectKeys(item);\n        for (const key of keys) {\n          map[key] ??= [];\n          if ((primitive && properties) ||\n               !ObjectPrototypeHasOwnProperty(item\x2C key))\n            map[key][i] = '';\n          else\n            map[key][i] = _inspect(item[key]);\n        }\n      }\n    }\n\n    const keys = ObjectKeys(map);\n    const values = ObjectValues(map);\n    if (hasPrimitives) {\n      ArrayPrototypePush(keys\x2C valuesKey);\n      ArrayPrototypePush(values\x2C valuesKeyArray);\n    }\n    ArrayPrototypeUnshift(keys\x2C indexKey);\n    ArrayPrototypeUnshift(values\x2C indexKeyArray);\n\n    return final(keys\x2C values);\n  }\x2C\n};\n\n// Returns true if label was found\nfunction timeLogImpl(self\x2C name\x2C label\x2C data) {\n  const time = self._times.get(label);\n  if (time === undefined) {\n    process.emitWarning(`No such label '${label}' for console.${name}()`);\n    return false;\n  }\n  const duration = process.hrtime(time);\n  const ms = duration[0] * 1000 + duration[1] / 1e6;\n\n  const formatted = formatTime(ms);\n\n  if (data === undefined) {\n    self.log('%s: %s'\x2C label\x2C formatted);\n  } else {\n    self.log('%s: %s'\x2C label\x2C formatted\x2C ...new SafeArrayIterator(data));\n  }\n  return true;\n}\n\nfunction pad(value) {\n  return StringPrototypePadStart(`${value}`\x2C 2\x2C '0');\n}\n\nfunction formatTime(ms) {\n  let hours = 0;\n  let minutes = 0;\n  let seconds = 0;\n\n  if (ms >= kSecond) {\n    if (ms >= kMinute) {\n      if (ms >= kHour) {\n        hours = MathFloor(ms / kHour);\n        ms = ms % kHour;\n      }\n      minutes = MathFloor(ms / kMinute);\n      ms = ms % kMinute;\n    }\n    seconds = ms / kSecond;\n  }\n\n  if (hours !== 0 || minutes !== 0) {\n    ({ 0: seconds\x2C 1: ms } = StringPrototypeSplit(\n      NumberPrototypeToFixed(seconds\x2C 3)\x2C\n      '.'\n    ));\n    const res = hours !== 0 ? `${hours}:${pad(minutes)}` : minutes;\n    return `${res}:${pad(seconds)}.${ms} (${hours !== 0 ? 'h:m' : ''}m:ss.mmm)`;\n  }\n\n  if (seconds !== 0) {\n    return `${NumberPrototypeToFixed(seconds\x2C 3)}s`;\n  }\n\n  return `${Number(NumberPrototypeToFixed(ms\x2C 3))}ms`;\n}\n\nconst keyKey = 'Key';\nconst valuesKey = 'Values';\nconst indexKey = '(index)';\nconst iterKey = '(iteration index)';\n\nconst isArray = (v) => ArrayIsArray(v) || isTypedArray(v) || isBuffer(v);\n\nfunction noop() {}\n\nfor (const method of ReflectOwnKeys(consoleMethods))\n  Console.prototype[method] = consoleMethods[method];\n\nConsole.prototype.debug = Console.prototype.log;\nConsole.prototype.info = Console.prototype.log;\nConsole.prototype.dirxml = Console.prototype.log;\nConsole.prototype.error = Console.prototype.warn;\nConsole.prototype.groupCollapsed = Console.prototype.group;\n\nfunction initializeGlobalConsole(globalConsole) {\n  globalConsole[kBindStreamsLazy](process);\n  globalConsole[kBindProperties](true\x2C 'auto');\n\n  const {\n    namespace: {\n      addSerializeCallback\x2C\n      isBuildingSnapshot\x2C\n    }\n  } = require('internal/v8/startup_snapshot');\n\n  if (!internalBinding('config').hasInspector || !isBuildingSnapshot()) {\n    return;\n  }\n  const { console: consoleFromVM } = internalBinding('inspector');\n  const nodeConsoleKeys = ObjectKeys(Console.prototype);\n  const vmConsoleKeys = ObjectKeys(consoleFromVM);\n  const originalKeys = new SafeSet(vmConsoleKeys.concat(nodeConsoleKeys));\n  const inspectorConsoleKeys = new SafeSet();\n  for (const key of ObjectKeys(globalConsole)) {\n    if (!originalKeys.has(key)) {\n      inspectorConsoleKeys.add(key);\n    }\n  }\n  // During deserialization these should be reinstalled to console by\n  // V8 when the inspector client is created.\n  addSerializeCallback(() => {\n    for (const key of inspectorConsoleKeys) {\n      globalConsole[key] = undefined;\n    }\n  });\n}\n\nmodule.exports = {\n  Console\x2C\n  kBindStreamsLazy\x2C\n  kBindProperties\x2C\n  initializeGlobalConsole\x2C\n  formatTime // exported for tests\n};\n
code-source-info,0x3c71b40fa446,44,20394,21400,C0O20394C12O20414C19O20428C21O20427C30O20445C35O20458C42O20472C44O20471C53O20488C59O20598C67O20598C72O20530C77O20538C82O20566C87O20642C95O20647C100O20672C106O20690C111O20718C112O20725C113O20767C121O20767C126O20749C131O20823C143O20842C148O20823C153O20878C160O20878C165O20928C172O20954C177O20954C185O20928C191O21011C198O21011C203O21011C205O21046C215O21046C237O21039C267O21039C270O21097C276O21097C283O21115C287O21136C293O21136C298O21028C365O21274C370O21274C375O21399,,
tick,0x1a532274c,42458,0,0x0,3,0x0,0x16645fa7a7ea,0x16645fa7767e,0x16645fa75f6e,0x16645fa75977
code-creation,JS,10,42458,0x3c71b40fc106,94,value node:internal/console/constructor:200:20,0x286f2a26a2e8,~
code-source-info,0x3c71b40fc106,44,5717,6351,C0O5717C15O5738C16O5738C18O5756C19O5756C21O5770C33O5820C38O5918C46O6025C60O6086C65O6184C73O6295C87O5770C93O6350,,
code-creation,JS,10,42833,0x3c71b40fc76e,414,value node:internal/console/constructor:230:20,0x286f2a26a3a8,~
code-source-info,0x3c71b40fc76e,44,6450,7844,C17O6506C27O6568C34O6610C52O6680C55O6650C73O6749C86O6846C89O6816C104O6894C111O6936C126O6976C129O6976C144O7027C151O7049C166O7083C169O7079C187O7174C191O7184C198O7206C213O7240C216O7236C235O7262C239O7275C246O7297C261O7327C275O7349C279O7362C286O7384C300O7414C314O7431C318O7446C325O7468C340O7498C354O7513C358O7538C365O7580C380O7620C394O7657C398O7677C407O6506C413O7843,,
code-creation,JS,10,43042,0x3c71b40fcce6,18,createWriteErrorHandler node:internal/console/constructor:354:33,0x286f2a26a650,~
code-source-info,0x3c71b40fcce6,44,10636,11493,C0O10636C13O10665C17O11491,,
code-creation,JS,10,43292,0x3c71b40fd226,25,isBuildingSnapshot node:internal/v8/startup_snapshot:17:28,0x3b5f1dad1db8,~
script-source,53,node:internal/v8/startup_snapshot,'use strict';\n\nconst {\n  validateFunction\x2C\n} = require('internal/validators');\nconst {\n  ERR_NOT_BUILDING_SNAPSHOT\x2C\n  ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION\n} = require('internal/errors');\n\nconst {\n  setSerializeCallback\x2C\n  setDeserializeCallback\x2C\n  setDeserializeMainFunction: _setDeserializeMainFunction\x2C\n} = internalBinding('mksnapshot');\n\nfunction isBuildingSnapshot() {\n  // For now this is the only way to build a snapshot.\n  return require('internal/options').getOptionValue('--build-snapshot');\n}\n\nfunction throwIfNotBuildingSnapshot() {\n  if (!isBuildingSnapshot()) {\n    throw new ERR_NOT_BUILDING_SNAPSHOT();\n  }\n}\n\nconst deserializeCallbacks = [];\nlet deserializeCallbackIsSet = false;\nfunction runDeserializeCallbacks() {\n  while (deserializeCallbacks.length > 0) {\n    const { 0: callback\x2C 1: data } = deserializeCallbacks.shift();\n    callback(data);\n  }\n}\n\nfunction addDeserializeCallback(callback\x2C data) {\n  throwIfNotBuildingSnapshot();\n  validateFunction(callback\x2C 'callback');\n  if (!deserializeCallbackIsSet) {\n    // TODO(joyeecheung): when the main function handling is done in JS\x2C\n    // the deserialize callbacks can always be invoked. For now only\n    // store it in C++ when it's actually used to avoid unnecessary\n    // C++ -> JS costs.\n    setDeserializeCallback(runDeserializeCallbacks);\n    deserializeCallbackIsSet = true;\n  }\n  deserializeCallbacks.push([callback\x2C data]);\n}\n\nconst serializeCallbacks = [];\nfunction runSerializeCallbacks() {\n  while (serializeCallbacks.length > 0) {\n    const { 0: callback\x2C 1: data } = serializeCallbacks.shift();\n    callback(data);\n  }\n}\n\nfunction addSerializeCallback(callback\x2C data) {\n  throwIfNotBuildingSnapshot();\n  validateFunction(callback\x2C 'callback');\n  serializeCallbacks.push([callback\x2C data]);\n}\n\nfunction initializeCallbacks() {\n  // Only run the serialize callbacks in snapshot building mode\x2C otherwise\n  // they throw.\n  if (isBuildingSnapshot()) {\n    setSerializeCallback(runSerializeCallbacks);\n  }\n}\n\nlet deserializeMainIsSet = false;\nfunction setDeserializeMainFunction(callback\x2C data) {\n  throwIfNotBuildingSnapshot();\n  // TODO(joyeecheung): In lib/internal/bootstrap/node.js\x2C create a default\n  // main function to run the lib/internal/main scripts and make sure that\n  // the main function set in the snapshot building process takes precedence.\n  validateFunction(callback\x2C 'callback');\n  if (deserializeMainIsSet) {\n    throw new ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION();\n  }\n  deserializeMainIsSet = true;\n\n  _setDeserializeMainFunction(function deserializeMain() {\n    const {\n      prepareMainThreadExecution\x2C\n      markBootstrapComplete\n    } = require('internal/process/pre_execution');\n\n    // This should be in sync with run_main_module.js until we make that\n    // a built-in main function.\n    prepareMainThreadExecution(true);\n    markBootstrapComplete();\n    callback(data);\n  });\n}\n\nmodule.exports = {\n  initializeCallbacks\x2C\n  runDeserializeCallbacks\x2C\n  // Exposed to require('v8').startupSnapshot\n  namespace: {\n    addDeserializeCallback\x2C\n    addSerializeCallback\x2C\n    setDeserializeMainFunction\x2C\n    isBuildingSnapshot\n  }\n};\n
code-source-info,0x3c71b40fd226,53,376,510,C0O438C6O445C11O472C19O473C24O508,,
code-creation,JS,10,43417,0x3c71b40fd70e,63,addReadOnlyProcessAlias node:internal/process/pre_execution:190:33,0x5d9fd2e6690,~
code-source-info,0x3c71b40fd70e,71,6022,6270,C16O6074C21O6074C26O6100C28O6117C36O6147C43O6233C49O6251C56O6117C62O6269,,
code-creation,JS,10,43458,0x3c71b40fd94e,46,setupTraceCategoryState node:internal/process/pre_execution:399:33,0x5d9fd2e6ad8,~
code-source-info,0x3c71b40fd94e,71,11807,12034,C0O11849C6O11849C11O11822C16O11921C22O11921C27O11892C32O11963C35O11988C40O11963C45O12033,,
code-creation,JS,10,43500,0x3c71b40fdae6,77,toggleTraceCategoryState node:internal/process/per_thread:426:34,0x286f2a245540,~
code-source-info,0x3c71b40fdae6,32,12511,12808,C0O12535C4O12564C10O12599C16O12630C21O12674C26O12675C33O12620C39O12699C44O12720C49O12720C55O12739C61O12771C66O12792C71O12792C76O12807,,
code-creation,JS,10,43500,0x3c71b40fdc5e,22,setupPerfHooks node:internal/process/pre_execution:405:24,0x5d9fd2e6b28,~
code-source-info,0x3c71b40fdc5e,71,12059,12119,C0O12066C6O12066C11O12096C16O12097C21O12118,,
code-creation,JS,10,43500,0x3c71b40fdd56,19,refreshTimeOrigin node:internal/perf/utils:25:27,0x3b5f1dace460,~
script-source,51,node:internal/perf/utils,'use strict';\n\nconst binding = internalBinding('performance');\nconst {\n  milestones\x2C\n  getTimeOrigin\x2C\n} = binding;\n\n// TODO(joyeecheung): we may want to warn about access to\n// this during snapshot building.\nlet timeOrigin = getTimeOrigin();\n\nfunction now() {\n  const hr = process.hrtime();\n  return (hr[0] * 1000 + hr[1] / 1e6) - timeOrigin;\n}\n\nfunction getMilestoneTimestamp(milestoneIdx) {\n  const ns = milestones[milestoneIdx];\n  if (ns === -1)\n    return ns;\n  return ns / 1e6 - timeOrigin;\n}\n\nfunction refreshTimeOrigin() {\n  timeOrigin = getTimeOrigin();\n}\n\nmodule.exports = {\n  now\x2C\n  getMilestoneTimestamp\x2C\n  refreshTimeOrigin\n};\n
code-source-info,0x3c71b40fdd56,51,525,563,C0O532C5O545C11O543C18O562,,
code-creation,JS,10,43542,0x3c71b40fdfc6,62,setupInspectorHooks node:internal/process/pre_execution:409:29,0x5d9fd2e6b78,~
code-source-info,0x3c71b40fdfc6,71,12149,12702,C0O12492C6O12496C11O12521C17O12586C23O12586C28O12556C33O12570C38O12632C44O12632C49O12660C54O12661C61O12701,,
tick,0x1a52c13b4,43583,0,0x0,3,0x0,0x16645fa77691,0x16645fa75f6e,0x16645fa75977
code-creation,JS,10,43625,0x3c71b40fe24e,126,setupWarningHandler node:internal/process/pre_execution:203:29,0x5d9fd2e66e0,~
code-source-info,0x3c71b40fe24e,71,6300,6791,C0O6300C11O6362C19O6362C24O6319C30O6334C36O6401C46O6405C57O6449C62O6453C69O6470C74O6485C79O6493C90O6493C96O6620C103O6624C108O6654C120O6654C125O6790,,
code-creation,JS,10,43667,0x3c71b40fe876,189,setupFetch node:internal/process/pre_execution:224:20,0x5d9fd2e6730,~
code-source-info,0x3c71b40fe876,71,6846,7977,C0O6846C24O6853C29O6865C34O6872C39O6882C49O6915C55O6915C61O6964C62O6971C63O6983C64O6983C66O7241C77O7257C86O7241C91O7533C102O7556C113O7584C124O7624C135O7663C146O7703C154O7533C159O7812C167O7812C172O7843C182O7844C188O7976,,
code-creation,JS,10,43667,0x3c71b40fed86,33,lazyInterface node:internal/process/pre_execution:246:25,0x3c71b40fe688,~
code-source-info,0x3c71b40fed86,71,7311,7529,C0O7311C9O7324C14O7390C22O7448C32O7525,,
code-creation,JS,10,43708,0x3c71b40ff3be,178,setupWebCrypto node:internal/process/pre_execution:274:24,0x5d9fd2e67e0,~
code-source-info,0x3c71b40ff3be,71,8106,9043,C0O8113C3O8125C8O8132C13O8142C21O8175C27O8175C33O8235C34O8242C35O8250C41O8254C46O8279C52O8298C59O8336C77O8298C82O8608C89O8636C100O8608C107O8745C114O8766C127O8835C158O8835C171O8745C177O9042,,
tick,0x100ac4648,44833,0,0x0,0,0x0,0x18a4fd0ba94c,0x3c71b40ff422,0x16645fa776a3,0x16645fa75f6e,0x16645fa75977
new,MemoryChunk,0x1075c0000,262144
code-creation,JS,11,45083,0x1075c8060,2776,defineLazyProperties node:internal/util:514:30,0x18a4fd0b9ed8,^
script-source,21,node:internal/util,'use strict';\n\nconst {\n  ArrayBufferPrototypeGetByteLength\x2C\n  ArrayFrom\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSort\x2C\n  Error\x2C\n  FunctionPrototypeCall\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetOwnPropertyDescriptors\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectFreeze\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ObjectValues\x2C\n  Promise\x2C\n  ReflectApply\x2C\n  ReflectConstruct\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeGetDotAll\x2C\n  RegExpPrototypeGetGlobal\x2C\n  RegExpPrototypeGetHasIndices\x2C\n  RegExpPrototypeGetIgnoreCase\x2C\n  RegExpPrototypeGetMultiline\x2C\n  RegExpPrototypeGetSticky\x2C\n  RegExpPrototypeGetUnicode\x2C\n  RegExpPrototypeGetSource\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  SafeWeakMap\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeToUpperCase\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  SymbolReplace\x2C\n  SymbolSplit\x2C\n} = primordials;\n\nconst {\n  hideStackFrames\x2C\n  codes: {\n    ERR_NO_CRYPTO\x2C\n    ERR_UNKNOWN_SIGNAL\n  }\x2C\n  uvErrmapGet\x2C\n  overrideStackTrace\x2C\n} = require('internal/errors');\nconst { signals } = internalBinding('constants').os;\nconst {\n  isArrayBufferDetached: _isArrayBufferDetached\x2C\n  privateSymbols: {\n    arrow_message_private_symbol\x2C\n    decorated_private_symbol\x2C\n  }\x2C\n  sleep: _sleep\x2C\n  toUSVString: _toUSVString\x2C\n} = internalBinding('util');\nconst { isNativeError } = internalBinding('types');\n\nconst noCrypto = !process.versions.openssl;\n\nconst experimentalWarnings = new SafeSet();\n\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\n\nconst unpairedSurrogateRe =\n  /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/;\nfunction toUSVString(val) {\n  const str = `${val}`;\n  // As of V8 5.5\x2C `str.search()` (and `unpairedSurrogateRe[@@search]()`) are\n  // slower than `unpairedSurrogateRe.exec()`.\n  const match = RegExpPrototypeExec(unpairedSurrogateRe\x2C str);\n  if (!match)\n    return str;\n  return _toUSVString(str\x2C match.index);\n}\n\nlet uvBinding;\n\nfunction lazyUv() {\n  uvBinding ??= internalBinding('uv');\n  return uvBinding;\n}\n\nfunction removeColors(str) {\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\n}\n\nfunction isError(e) {\n  // An error could be an instance of Error while not being a native error\n  // or could be from a different realm and not be instance of Error but still\n  // be a native error.\n  return isNativeError(e) || e instanceof Error;\n}\n\n// Keep a list of deprecation codes that have been warned on so we only warn on\n// each one once.\nconst codesWarned = new SafeSet();\n\nlet validateString;\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set\x2C then it is a no-op.\nfunction deprecate(fn\x2C msg\x2C code\x2C useEmitSync) {\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Lazy-load to avoid a circular dependency.\n  if (validateString === undefined)\n    ({ validateString } = require('internal/validators'));\n\n  if (code !== undefined)\n    validateString(code\x2C 'code');\n\n  let warned = false;\n  function deprecated(...args) {\n    if (!warned) {\n      warned = true;\n      if (code !== undefined) {\n        if (!codesWarned.has(code)) {\n          const emitWarning = useEmitSync ?\n            require('internal/process/warning').emitWarningSync :\n            process.emitWarning;\n          emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\n          codesWarned.add(code);\n        }\n      } else {\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\n      }\n    }\n    if (new.target) {\n      return ReflectConstruct(fn\x2C args\x2C new.target);\n    }\n    return ReflectApply(fn\x2C this\x2C args);\n  }\n\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\n  ObjectSetPrototypeOf(deprecated\x2C fn);\n  if (fn.prototype) {\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\n    // that calling the unwrapped constructor gives an instanceof the wrapped\n    // constructor.\n    deprecated.prototype = fn.prototype;\n  }\n\n  return deprecated;\n}\n\nfunction decorateErrorStack(err) {\n  if (!(isError(err) && err.stack) || err[decorated_private_symbol])\n    return;\n\n  const arrow = err[arrow_message_private_symbol];\n\n  if (arrow) {\n    err.stack = arrow + err.stack;\n    err[decorated_private_symbol] = true;\n  }\n}\n\nfunction assertCrypto() {\n  if (noCrypto)\n    throw new ERR_NO_CRYPTO();\n}\n\n// Return undefined if there is no match.\n// Move the "slow cases" to a separate function to make sure this function gets\n// inlined properly. That prioritizes the common case.\nfunction normalizeEncoding(enc) {\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\n  return slowCases(enc);\n}\n\nfunction slowCases(enc) {\n  switch (enc.length) {\n    case 4:\n      if (enc === 'UTF8') return 'utf8';\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\n      enc = `${enc}`.toLowerCase();\n      if (enc === 'utf8') return 'utf8';\n      if (enc === 'ucs2') return 'utf16le';\n      break;\n    case 3:\n      if (enc === 'hex' || enc === 'HEX' ||\n          `${enc}`.toLowerCase() === 'hex')\n        return 'hex';\n      break;\n    case 5:\n      if (enc === 'ascii') return 'ascii';\n      if (enc === 'ucs-2') return 'utf16le';\n      if (enc === 'UTF-8') return 'utf8';\n      if (enc === 'ASCII') return 'ascii';\n      if (enc === 'UCS-2') return 'utf16le';\n      enc = `${enc}`.toLowerCase();\n      if (enc === 'utf-8') return 'utf8';\n      if (enc === 'ascii') return 'ascii';\n      if (enc === 'ucs-2') return 'utf16le';\n      break;\n    case 6:\n      if (enc === 'base64') return 'base64';\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\n      if (enc === 'BASE64') return 'base64';\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\n      enc = `${enc}`.toLowerCase();\n      if (enc === 'base64') return 'base64';\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\n      break;\n    case 7:\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\n          `${enc}`.toLowerCase() === 'utf16le')\n        return 'utf16le';\n      break;\n    case 8:\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\n        `${enc}`.toLowerCase() === 'utf-16le')\n        return 'utf16le';\n      break;\n    case 9:\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\n          `${enc}`.toLowerCase() === 'base64url')\n        return 'base64url';\n      break;\n    default:\n      if (enc === '') return 'utf8';\n  }\n}\n\nfunction emitExperimentalWarning(feature) {\n  if (experimentalWarnings.has(feature)) return;\n  const msg = `${feature} is an experimental feature and might change at any time`;\n  experimentalWarnings.add(feature);\n  process.emitWarning(msg\x2C 'ExperimentalWarning');\n}\n\nfunction filterDuplicateStrings(items\x2C low) {\n  const map = new SafeMap();\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i];\n    const key = StringPrototypeToLowerCase(item);\n    if (low) {\n      map.set(key\x2C key);\n    } else {\n      map.set(key\x2C item);\n    }\n  }\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\n}\n\nfunction cachedResult(fn) {\n  let result;\n  return () => {\n    if (result === undefined)\n      result = fn();\n    return ArrayPrototypeSlice(result);\n  };\n}\n\n// Useful for Wrapping an ES6 Class with a constructor Function that\n// does not require the new keyword. For instance:\n//   class A { constructor(x) {this.x = x;}}\n//   const B = createClassWrapper(A);\n//   B() instanceof A // true\n//   B() instanceof B // true\nfunction createClassWrapper(type) {\n  function fn(...args) {\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\n  }\n  // Mask the wrapper function name and length values\n  ObjectDefineProperties(fn\x2C {\n    name: { __proto__: null\x2C value: type.name }\x2C\n    length: { __proto__: null\x2C value: type.length }\x2C\n  });\n  ObjectSetPrototypeOf(fn\x2C type);\n  fn.prototype = type.prototype;\n  return fn;\n}\n\nlet signalsToNamesMapping;\nfunction getSignalsToNamesMapping() {\n  if (signalsToNamesMapping !== undefined)\n    return signalsToNamesMapping;\n\n  signalsToNamesMapping = { __proto__: null };\n  for (const key in signals) {\n    signalsToNamesMapping[signals[key]] = key;\n  }\n\n  return signalsToNamesMapping;\n}\n\nfunction convertToValidSignal(signal) {\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\n    return signal;\n\n  if (typeof signal === 'string') {\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\n    if (signalName) return signalName;\n  }\n\n  throw new ERR_UNKNOWN_SIGNAL(signal);\n}\n\nfunction getConstructorOf(obj) {\n  while (obj) {\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\n    if (descriptor !== undefined &&\n        typeof descriptor.value === 'function' &&\n        descriptor.value.name !== '') {\n      return descriptor.value;\n    }\n\n    obj = ObjectGetPrototypeOf(obj);\n  }\n\n  return null;\n}\n\nfunction getSystemErrorName(err) {\n  const entry = uvErrmapGet(err);\n  return entry ? entry[0] : `Unknown system error ${err}`;\n}\n\nfunction getSystemErrorMap() {\n  return lazyUv().getErrorMap();\n}\n\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\n\nlet validateFunction;\n\nfunction promisify(original) {\n  // Lazy-load to avoid a circular dependency.\n  if (validateFunction === undefined)\n    ({ validateFunction } = require('internal/validators'));\n\n  validateFunction(original\x2C 'original');\n\n  if (original[kCustomPromisifiedSymbol]) {\n    const fn = original[kCustomPromisifiedSymbol];\n\n    validateFunction(fn\x2C 'util.promisify.custom');\n\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\n      __proto__: null\x2C\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\n    });\n  }\n\n  // Names to create an object from in case the callback receives multiple\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\n\n  function fn(...args) {\n    return new Promise((resolve\x2C reject) => {\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\n        if (err) {\n          return reject(err);\n        }\n        if (argumentNames !== undefined && values.length > 1) {\n          const obj = {};\n          for (let i = 0; i < argumentNames.length; i++)\n            obj[argumentNames[i]] = values[i];\n          resolve(obj);\n        } else {\n          resolve(values[0]);\n        }\n      });\n      ReflectApply(original\x2C this\x2C args);\n    });\n  }\n\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\n\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\n    __proto__: null\x2C\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\n  });\n\n  const descriptors = ObjectGetOwnPropertyDescriptors(original);\n  const propertiesValues = ObjectValues(descriptors);\n  for (let i = 0; i < propertiesValues.length; i++) {\n    // We want to use null-prototype objects to not rely on globally mutable\n    // %Object.prototype%.\n    ObjectSetPrototypeOf(propertiesValues[i]\x2C null);\n  }\n  return ObjectDefineProperties(fn\x2C descriptors);\n}\n\npromisify.custom = kCustomPromisifiedSymbol;\n\n// The built-in Array#join is slower in v8 6.0\nfunction join(output\x2C separator) {\n  let str = '';\n  if (output.length !== 0) {\n    const lastIndex = output.length - 1;\n    for (let i = 0; i < lastIndex; i++) {\n      // It is faster not to use a template string here\n      str += output[i];\n      str += separator;\n    }\n    str += output[lastIndex];\n  }\n  return str;\n}\n\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\n// between 1.5-10x faster than the two-arg version of Array#splice()\nfunction spliceOne(list\x2C index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nconst kNodeModulesRE = /^(.*)[\\\\/]node_modules[\\\\/]/;\n\nlet getStructuredStack;\n\nfunction isInsideNodeModules() {\n  if (getStructuredStack === undefined) {\n    // Lazy-load to avoid a circular dependency.\n    const { runInNewContext } = require('vm');\n    // Use `runInNewContext()` to get something tamper-proof and\n    // side-effect-free. Since this is currently only used for a deprecated API\x2C\n    // the perf implications should be okay.\n    getStructuredStack = runInNewContext(`(function() {\n      try { Error.stackTraceLimit = Infinity; } catch {}\n      return function structuredStack() {\n        const e = new Error();\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\n        return e.stack;\n      };\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\n  }\n\n  const stack = getStructuredStack();\n\n  // Iterate over all stack frames and look for the first one not coming\n  // from inside Node.js itself:\n  if (ArrayIsArray(stack)) {\n    for (const frame of stack) {\n      const filename = frame.getFileName();\n      // If a filename does not start with / or contain \\\x2C\n      // it's likely from Node.js core.\n      if (RegExpPrototypeExec(/^\\/|\\\\/\x2C filename) === null)\n        continue;\n      return RegExpPrototypeExec(kNodeModulesRE\x2C filename) !== null;\n    }\n  }\n  return false;\n}\n\nfunction once(callback) {\n  let called = false;\n  return function(...args) {\n    if (called) return;\n    called = true;\n    return ReflectApply(callback\x2C this\x2C args);\n  };\n}\n\nlet validateUint32;\n\nfunction sleep(msec) {\n  // Lazy-load to avoid a circular dependency.\n  if (validateUint32 === undefined)\n    ({ validateUint32 } = require('internal/validators'));\n\n  validateUint32(msec\x2C 'msec');\n  _sleep(msec);\n}\n\nfunction createDeferredPromise() {\n  let resolve;\n  let reject;\n  const promise = new Promise((res\x2C rej) => {\n    resolve = res;\n    reject = rej;\n  });\n\n  return { promise\x2C resolve\x2C reject };\n}\n\n// https://heycam.github.io/webidl/#define-the-operations\nfunction defineOperation(target\x2C name\x2C method) {\n  ObjectDefineProperty(target\x2C name\x2C {\n    __proto__: null\x2C\n    writable: true\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n    value: method\n  });\n}\n\n// https://heycam.github.io/webidl/#es-interfaces\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\n  ObjectDefineProperty(target\x2C name\x2C {\n    __proto__: null\x2C\n    writable: true\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: interfaceObject\n  });\n}\n\nfunction defineLazyProperties(target\x2C id\x2C keys\x2C enumerable = true) {\n  const descriptors = { __proto__: null };\n  let mod;\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    let lazyLoadedValue;\n    function set(value) {\n      ObjectDefineProperty(target\x2C key\x2C {\n        __proto__: null\x2C\n        writable: true\x2C\n        value\x2C\n      });\n    }\n    ObjectDefineProperty(set\x2C 'name'\x2C {\n      __proto__: null\x2C\n      value: `set ${key}`\x2C\n    });\n    function get() {\n      mod ??= require(id);\n      if (lazyLoadedValue === undefined) {\n        lazyLoadedValue = mod[key];\n        set(lazyLoadedValue);\n      }\n      return lazyLoadedValue;\n    }\n    ObjectDefineProperty(get\x2C 'name'\x2C {\n      __proto__: null\x2C\n      value: `get ${key}`\x2C\n    });\n    descriptors[key] = {\n      __proto__: null\x2C\n      configurable: true\x2C\n      enumerable\x2C\n      get\x2C\n      set\x2C\n    };\n  }\n  ObjectDefineProperties(target\x2C descriptors);\n}\n\nfunction defineReplaceableLazyAttribute(target\x2C id\x2C keys\x2C writable = true\x2C check) {\n  let mod;\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    let value;\n    let setterCalled = false;\n\n    function get() {\n      if (check !== undefined) {\n        FunctionPrototypeCall(check\x2C this);\n      }\n      if (setterCalled) {\n        return value;\n      }\n      mod ??= require(id);\n      value ??= mod[key];\n      return value;\n    }\n\n    ObjectDefineProperty(get\x2C 'name'\x2C {\n      __proto__: null\x2C\n      value: `get ${key}`\x2C\n    });\n\n    function set(val) {\n      setterCalled = true;\n      value = val;\n    }\n    ObjectDefineProperty(set\x2C 'name'\x2C {\n      __proto__: null\x2C\n      value: `set ${key}`\x2C\n    });\n\n    ObjectDefineProperty(target\x2C key\x2C {\n      __proto__: null\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      get\x2C\n      set: writable ? set : undefined\x2C\n    });\n  }\n}\n\nfunction exposeLazyInterfaces(target\x2C id\x2C keys) {\n  defineLazyProperties(target\x2C id\x2C keys\x2C false);\n}\n\nlet _DOMException;\nconst lazyDOMExceptionClass = () => {\n  _DOMException ??= internalBinding('messaging').DOMException;\n  return _DOMException;\n};\n\nconst lazyDOMException = hideStackFrames((message\x2C name) => {\n  _DOMException ??= internalBinding('messaging').DOMException;\n  return new _DOMException(message\x2C name);\n});\n\nconst kEnumerableProperty = { __proto__: null };\nkEnumerableProperty.enumerable = true;\nObjectFreeze(kEnumerableProperty);\n\nconst kEmptyObject = ObjectFreeze({ __proto__: null });\n\nfunction filterOwnProperties(source\x2C keys) {\n  const filtered = { __proto__: null };\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if (ObjectPrototypeHasOwnProperty(source\x2C key)) {\n      filtered[key] = source[key];\n    }\n  }\n\n  return filtered;\n}\n\n/**\n * Mimics `obj[key] = value` but ignoring potential prototype inheritance.\n * @param {any} obj\n * @param {string} key\n * @param {any} value\n * @returns {any}\n */\nfunction setOwnProperty(obj\x2C key\x2C value) {\n  return ObjectDefineProperty(obj\x2C key\x2C {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    value\x2C\n    writable: true\x2C\n  });\n}\n\nlet internalGlobal;\nfunction getInternalGlobal() {\n  if (internalGlobal == null) {\n    // Lazy-load to avoid a circular dependency.\n    const { runInNewContext } = require('vm');\n    internalGlobal = runInNewContext('this'\x2C undefined\x2C { contextName: 'internal' });\n  }\n  return internalGlobal;\n}\n\nfunction SideEffectFreeRegExpPrototypeExec(regex\x2C string) {\n  const { RegExp: RegExpFromAnotherRealm } = getInternalGlobal();\n  return FunctionPrototypeCall(RegExpFromAnotherRealm.prototype.exec\x2C regex\x2C string);\n}\n\nconst crossRelmRegexes = new SafeWeakMap();\nfunction getCrossRelmRegex(regex) {\n  const cached = crossRelmRegexes.get(regex);\n  if (cached) return cached;\n\n  let flagString = '';\n  if (RegExpPrototypeGetHasIndices(regex)) flagString += 'd';\n  if (RegExpPrototypeGetGlobal(regex)) flagString += 'g';\n  if (RegExpPrototypeGetIgnoreCase(regex)) flagString += 'i';\n  if (RegExpPrototypeGetMultiline(regex)) flagString += 'm';\n  if (RegExpPrototypeGetDotAll(regex)) flagString += 's';\n  if (RegExpPrototypeGetUnicode(regex)) flagString += 'u';\n  if (RegExpPrototypeGetSticky(regex)) flagString += 'y';\n\n  const { RegExp: RegExpFromAnotherRealm } = getInternalGlobal();\n  const crossRelmRegex = new RegExpFromAnotherRealm(RegExpPrototypeGetSource(regex)\x2C flagString);\n  crossRelmRegexes.set(regex\x2C crossRelmRegex);\n  return crossRelmRegex;\n}\n\nfunction SideEffectFreeRegExpPrototypeSymbolReplace(regex\x2C string\x2C replacement) {\n  return getCrossRelmRegex(regex)[SymbolReplace](string\x2C replacement);\n}\n\nfunction SideEffectFreeRegExpPrototypeSymbolSplit(regex\x2C string\x2C limit = undefined) {\n  return getCrossRelmRegex(regex)[SymbolSplit](string\x2C limit);\n}\n\n\nfunction isArrayBufferDetached(value) {\n  if (ArrayBufferPrototypeGetByteLength(value) === 0) {\n    return _isArrayBufferDetached(value);\n  }\n\n  return false;\n}\n\n/**\n * Helper function to lazy-load an initialize-once value.\n * @template T Return value of initializer\n * @param {()=>T} initializer Initializer of the lazily loaded value.\n * @returns {()=>T}\n */\nfunction getLazy(initializer) {\n  let value;\n  let initialized = false;\n  return function() {\n    if (initialized === false) {\n      value = initializer();\n      initialized = true;\n    }\n    return value;\n  };\n}\n\nmodule.exports = {\n  getLazy\x2C\n  assertCrypto\x2C\n  cachedResult\x2C\n  convertToValidSignal\x2C\n  createClassWrapper\x2C\n  createDeferredPromise\x2C\n  decorateErrorStack\x2C\n  defineOperation\x2C\n  defineLazyProperties\x2C\n  defineReplaceableLazyAttribute\x2C\n  deprecate\x2C\n  emitExperimentalWarning\x2C\n  exposeInterface\x2C\n  exposeLazyInterfaces\x2C\n  filterDuplicateStrings\x2C\n  filterOwnProperties\x2C\n  getConstructorOf\x2C\n  getInternalGlobal\x2C\n  getSystemErrorMap\x2C\n  getSystemErrorName\x2C\n  isArrayBufferDetached\x2C\n  isError\x2C\n  isInsideNodeModules\x2C\n  join\x2C\n  lazyDOMException\x2C\n  lazyDOMExceptionClass\x2C\n  normalizeEncoding\x2C\n  once\x2C\n  promisify\x2C\n  SideEffectFreeRegExpPrototypeExec\x2C\n  SideEffectFreeRegExpPrototypeSymbolReplace\x2C\n  SideEffectFreeRegExpPrototypeSymbolSplit\x2C\n  sleep\x2C\n  spliceOne\x2C\n  toUSVString\x2C\n  removeColors\x2C\n\n  // Symbol used to customize promisify conversion\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\n\n  // Symbol used to provide a custom inspect function for an object as an\n  // alternative to using 'inspect'\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\n\n  // Used by the buffer module to capture an internal reference to the\n  // default isEncoding implementation\x2C just in case userland overrides it.\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x2C\n\n  kEmptyObject\x2C\n  kEnumerableProperty\x2C\n  setOwnProperty\x2C\n};\n
code-source-info,0x1075c8060,21,14301,15205,,,
new,MemoryChunk,0x3f1a4fb80000,262144
code-creation,JS,11,45833,0x1075c8ba0,760,requireBuiltin node:internal/bootstrap/loaders:355:24,0x18a4fd087998,^
script-source,15,node:internal/bootstrap/loaders,// This file creates the internal module & binding loaders used by built-in\n// modules. In contrast\x2C user land modules are loaded using\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\n// lib/internal/modules/esm/* (ES Modules).\n//\n// This file is compiled and run by node.cc before bootstrap/node.js\n// was called\x2C therefore the loaders are bootstrapped before we start to\n// actually bootstrap Node.js. It creates the following objects:\n//\n// C++ binding loaders:\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\n//   because it is an object attached to the global process object.\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\n//   about the stability of these bindings\x2C but still have to take care of\n//   compatibility issues caused by them from time to time.\n// - process._linkedBinding(): intended to be used by embedders to add\n//   additional C++ bindings in their applications. These C++ bindings\n//   can be created using NODE_MODULE_CONTEXT_AWARE_CPP() with the flag\n//   NM_F_LINKED.\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\n//   from user land unless through `require('internal/test/binding')`.\n//   These C++ bindings are created using NODE_MODULE_CONTEXT_AWARE_INTERNAL()\n//   and have their nm_flags set to NM_F_INTERNAL.\n//\n// Internal JavaScript module loader:\n// - BuiltinModule: a minimal module system used to load the JavaScript core\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\n//   compiled into the node binary via node_javascript.cc generated by js2c.py\x2C\n//   so they can be loaded faster without the cost of I/O. This class makes the\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\n//   default to core modules\x2C and lets the core modules require itself via\n//   require('internal/bootstrap/loaders') even when this file is not written in\n//   CommonJS style.\n//\n// Other objects:\n// - process.moduleLoadList: an array recording the bindings and the modules\n//   loaded in the process and the order in which they are loaded.\n\n'use strict';\n\n// This file is compiled as if it's wrapped in a function with arguments\n// passed by node::RunBootstrapping()\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\n\nconst {\n  ArrayFrom\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  Error\x2C\n  ObjectDefineProperty\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectGet\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  String\x2C\n  StringPrototypeStartsWith\x2C\n  TypeError\x2C\n} = primordials;\n\n// Set up process.moduleLoadList.\nconst moduleLoadList = [];\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\n  __proto__: null\x2C\n  value: moduleLoadList\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n  writable: false\n});\n\n\n// internalBindingAllowlist contains the name of internalBinding modules\n// that are allowed for access via process.binding()... This is used\n// to provide a transition path for modules that are being moved over to\n// internalBinding.\nconst internalBindingAllowlist = new SafeSet([\n  'async_wrap'\x2C\n  'buffer'\x2C\n  'cares_wrap'\x2C\n  'config'\x2C\n  'constants'\x2C\n  'contextify'\x2C\n  'crypto'\x2C\n  'fs'\x2C\n  'fs_event_wrap'\x2C\n  'http_parser'\x2C\n  'icu'\x2C\n  'inspector'\x2C\n  'js_stream'\x2C\n  'natives'\x2C\n  'os'\x2C\n  'pipe_wrap'\x2C\n  'process_wrap'\x2C\n  'signal_wrap'\x2C\n  'spawn_sync'\x2C\n  'stream_wrap'\x2C\n  'tcp_wrap'\x2C\n  'tls_wrap'\x2C\n  'tty_wrap'\x2C\n  'udp_wrap'\x2C\n  'url'\x2C\n  'util'\x2C\n  'uv'\x2C\n  'v8'\x2C\n  'zlib'\x2C\n]);\n\nconst runtimeDeprecatedList = new SafeSet([\n  'async_wrap'\x2C\n  'crypto'\x2C\n  'http_parser'\x2C\n  'signal_wrap'\x2C\n  'url'\x2C\n  'v8'\x2C\n]);\n\nconst legacyWrapperList = new SafeSet([\n  'util'\x2C\n]);\n\n// Modules that can only be imported via the node: scheme.\nconst schemelessBlockList = new SafeSet([\n  'test'\x2C\n]);\n\n// Set up process.binding() and process._linkedBinding().\n{\n  const bindingObj = { __proto__: null };\n\n  process.binding = function binding(module) {\n    module = String(module);\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\n    // selective fallback to internalBinding for the deprecated ones.\n    if (internalBindingAllowlist.has(module)) {\n      if (runtimeDeprecatedList.has(module)) {\n        runtimeDeprecatedList.delete(module);\n        process.emitWarning(\n          `Access to process.binding('${module}') is deprecated.`\x2C\n          'DeprecationWarning'\x2C\n          'DEP0111');\n      }\n      if (legacyWrapperList.has(module)) {\n        return requireBuiltin('internal/legacy/processbinding')[module]();\n      }\n      return internalBinding(module);\n    }\n    // eslint-disable-next-line no-restricted-syntax\n    throw new Error(`No such module: ${module}`);\n  };\n\n  process._linkedBinding = function _linkedBinding(module) {\n    module = String(module);\n    let mod = bindingObj[module];\n    if (typeof mod !== 'object')\n      mod = bindingObj[module] = getLinkedBinding(module);\n    return mod;\n  };\n}\n\n// Set up internalBinding() in the closure.\n/**\n * @type {InternalBinding}\n */\nlet internalBinding;\n{\n  const bindingObj = { __proto__: null };\n  // eslint-disable-next-line no-global-assign\n  internalBinding = function internalBinding(module) {\n    let mod = bindingObj[module];\n    if (typeof mod !== 'object') {\n      mod = bindingObj[module] = getInternalBinding(module);\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\n    }\n    return mod;\n  };\n}\n\nconst loaderId = 'internal/bootstrap/loaders';\nconst {\n  builtinIds\x2C\n  compileFunction\n} = internalBinding('builtins');\n\nconst getOwn = (target\x2C property\x2C receiver) => {\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\n    ReflectGet(target\x2C property\x2C receiver) :\n    undefined;\n};\n\n/**\n * An internal abstraction for the built-in JavaScript modules of Node.js.\n * Be careful not to expose this to user land unless --expose-internals is\n * used\x2C in which case there is no compatibility guarantee about this class.\n */\nclass BuiltinModule {\n  /**\n   * A map from the module IDs to the module instances.\n   * @type {Map<string\x2C BuiltinModule>}\n   */\n  static map = new SafeMap(\n    ArrayPrototypeMap(builtinIds\x2C (id) => [id\x2C new BuiltinModule(id)])\n  );\n\n  constructor(id) {\n    this.filename = `${id}.js`;\n    this.id = id;\n    this.canBeRequiredByUsers = !StringPrototypeStartsWith(id\x2C 'internal/');\n\n    // The CJS exports object of the module.\n    this.exports = {};\n    // States used to work around circular dependencies.\n    this.loaded = false;\n    this.loading = false;\n\n    // The following properties are used by the ESM implementation and only\n    // initialized when the built-in module is loaded by users.\n    /**\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\n     * @type {ModuleWrap|undefined}\n     */\n    this.module = undefined;\n    /**\n     * Exported names for the ESM imports.\n     * @type {string[]|undefined}\n     */\n    this.exportKeys = undefined;\n  }\n\n  // To be called during pre-execution when --expose-internals is on.\n  // Enables the user-land module loader to access internal modules.\n  static exposeInternals() {\n    for (const { 0: id\x2C 1: mod } of BuiltinModule.map) {\n      // Do not expose this to user land even with --expose-internals.\n      if (id !== loaderId) {\n        mod.canBeRequiredByUsers = true;\n      }\n    }\n  }\n\n  static exists(id) {\n    return BuiltinModule.map.has(id);\n  }\n\n  static canBeRequiredByUsers(id) {\n    const mod = BuiltinModule.map.get(id);\n    return mod && mod.canBeRequiredByUsers;\n  }\n\n  // Determine if a core module can be loaded without the node: prefix. This\n  // function does not validate if the module actually exists.\n  static canBeRequiredWithoutScheme(id) {\n    return !schemelessBlockList.has(id);\n  }\n\n  static getSchemeOnlyModuleNames() {\n    return ArrayFrom(schemelessBlockList);\n  }\n\n  // Used by user-land module loaders to compile and load builtins.\n  compileForPublicLoader() {\n    if (!this.canBeRequiredByUsers) {\n      // No code because this is an assertion against bugs\n      // eslint-disable-next-line no-restricted-syntax\n      throw new Error(`Should not compile ${this.id} for public use`);\n    }\n    this.compileForInternalLoader();\n    if (!this.exportKeys) {\n      // When using --expose-internals\x2C we do not want to reflect the named\n      // exports from core modules as this can trigger unnecessary getters.\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\n    }\n    this.getESMFacade();\n    this.syncExports();\n    return this.exports;\n  }\n\n  getESMFacade() {\n    if (this.module) return this.module;\n    const { ModuleWrap } = internalBinding('module_wrap');\n    // TODO(aduh95): move this to C++\x2C alongside the initialization of the class.\n    ObjectSetPrototypeOf(ModuleWrap.prototype\x2C null);\n    const url = `node:${this.id}`;\n    const builtin = this;\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\n    ArrayPrototypePush(exportsKeys\x2C 'default');\n    this.module = new ModuleWrap(\n      url\x2C undefined\x2C exportsKeys\x2C\n      function() {\n        builtin.syncExports();\n        this.setExport('default'\x2C builtin.exports);\n      });\n    // Ensure immediate sync execution to capture exports now\n    this.module.instantiate();\n    this.module.evaluate(-1\x2C false);\n    return this.module;\n  }\n\n  // Provide named exports for all builtin libraries so that the libraries\n  // may be imported in a nicer way for ESM users. The default export is left\n  // as the entire namespace (module.exports) and updates when this function is\n  // called so that APMs and other behavior are supported.\n  syncExports() {\n    const names = this.exportKeys;\n    if (this.module) {\n      for (let i = 0; i < names.length; i++) {\n        const exportName = names[i];\n        if (exportName === 'default') continue;\n        this.module.setExport(exportName\x2C\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\n      }\n    }\n  }\n\n  compileForInternalLoader() {\n    if (this.loaded || this.loading) {\n      return this.exports;\n    }\n\n    const id = this.id;\n    this.loading = true;\n\n    try {\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\n        requireWithFallbackInDeps : requireBuiltin;\n\n      const fn = compileFunction(id);\n      // Arguments must match the parameters specified in\n      // BuiltinLoader::LookupAndCompile().\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\n\n      this.loaded = true;\n    } finally {\n      this.loading = false;\n    }\n\n    // "NativeModule" is a legacy name of "BuiltinModule". We keep it\n    // here to avoid breaking users who parse process.moduleLoadList.\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\n    return this.exports;\n  }\n}\n\n// Think of this as module.exports in this file even though it is not\n// written in CommonJS style.\nconst loaderExports = {\n  internalBinding\x2C\n  BuiltinModule\x2C\n  require: requireBuiltin\n};\n\nfunction requireBuiltin(id) {\n  if (id === loaderId) {\n    return loaderExports;\n  }\n\n  const mod = BuiltinModule.map.get(id);\n  // Can't load the internal errors module from here\x2C have to use a raw error.\n  // eslint-disable-next-line no-restricted-syntax\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\n  return mod.compileForInternalLoader();\n}\n\n// Allow internal modules from dependencies to require\n// other modules from dependencies by providing fallbacks.\nfunction requireWithFallbackInDeps(request) {\n  if (!BuiltinModule.map.has(request)) {\n    request = `internal/deps/${request}`;\n  }\n  return requireBuiltin(request);\n}\n\n// Pass the exports back to C++ land for C++ internals to use.\nreturn loaderExports;\n
code-source-info,0x1075c8ba0,15,11138,11482,,,
tick,0x1a5325c3c,46250,0,0x0,0,0x0,0x18a4fd0ba94c,0x3c71b40ff422,0x16645fa776a3,0x16645fa75f6e,0x16645fa75977
code-creation,JS,11,46250,0x1075c8f00,1448,compileForInternalLoader node:internal/bootstrap/loaders:318:27,0x18a4fd087728,^
code-source-info,0x1075c8f00,15,10123,10921,,,
code-creation,JS,11,46292,0x1075c9520,648,internalBinding node:internal/bootstrap/loaders:171:45,0x18a4fd087060,^
code-source-info,0x1075c9520,15,5269,5507,,,
code-creation,JS,11,46292,0x1075c9820,144,isPosixPathSeparator node:path:56:30,0x286f2a25fed8,^
code-source-info,0x1075c9820,39,1854,1902,,,
code-creation,JS,11,46333,0x1075c9920,296,SafeMap node:internal/per_context/primordials:396:16,0x18a4fd081290,^
script-source,12,node:internal/per_context/primordials,'use strict';\n\n/* eslint-disable node-core/prefer-primordials */\n\n// This file subclasses and stores the JS builtins that come from the VM\n// so that Node.js's builtin modules do not need to later look these up from\n// the global proxy\x2C which can be mutated by users.\n\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\n// benchmark all changes made in performance-sensitive areas of the codebase.\n// See: https://github.com/nodejs/node/pull/38248\n\nconst {\n  defineProperty: ReflectDefineProperty\x2C\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\n  ownKeys: ReflectOwnKeys\x2C\n} = Reflect;\n\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\n// and `Function.prototype.call` after it may have been mutated by users.\nconst { apply\x2C bind\x2C call } = Function.prototype;\nconst uncurryThis = bind.bind(call);\nprimordials.uncurryThis = uncurryThis;\n\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\n// and `Function.prototype.apply` after it may have been mutated by users.\nconst applyBind = bind.bind(apply);\nprimordials.applyBind = applyBind;\n\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\n// destructuring.\nconst varargsMethods = [\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\n  // on its own for arrays and array-likes with a truthy\n  // @@isConcatSpreadable symbol property.\n  'ArrayOf'\x2C\n  'ArrayPrototypePush'\x2C\n  'ArrayPrototypeUnshift'\x2C\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\n  // and 'FunctionPrototypeApply'.\n  'MathHypot'\x2C\n  'MathMax'\x2C\n  'MathMin'\x2C\n  'StringFromCharCode'\x2C\n  'StringFromCodePoint'\x2C\n  'StringPrototypeConcat'\x2C\n  'TypedArrayOf'\x2C\n];\n\nfunction getNewKey(key) {\n  return typeof key === 'symbol' ?\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\n    `${key[0].toUpperCase()}${key.slice(1)}`;\n}\n\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\n    __proto__: null\x2C\n    value: uncurryThis(get)\x2C\n    enumerable\n  });\n  if (set !== undefined) {\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\n      __proto__: null\x2C\n      value: uncurryThis(set)\x2C\n      enumerable\n    });\n  }\n}\n\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n    if ('get' in desc) {\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n    } else {\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n          __proto__: null\x2C\n          // `src` is bound as the `this` so that the static `this` points\n          // to the object it was defined on\x2C\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\n          value: applyBind(desc.value\x2C src)\x2C\n        });\n      }\n    }\n  }\n}\n\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n    if ('get' in desc) {\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n    } else {\n      const { value } = desc;\n      if (typeof value === 'function') {\n        desc.value = value.bind(src);\n      }\n\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n          __proto__: null\x2C\n          value: applyBind(value\x2C src)\x2C\n        });\n      }\n    }\n  }\n}\n\nfunction copyPrototype(src\x2C dest\x2C prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n    if ('get' in desc) {\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n    } else {\n      const { value } = desc;\n      if (typeof value === 'function') {\n        desc.value = uncurryThis(value);\n      }\n\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n          __proto__: null\x2C\n          value: applyBind(value)\x2C\n        });\n      }\n    }\n  }\n}\n\n// Create copies of configurable value properties of the global object\n[\n  'Proxy'\x2C\n  'globalThis'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  primordials[name] = globalThis[name];\n});\n\n// Create copies of URI handling functions\n[\n  decodeURI\x2C\n  decodeURIComponent\x2C\n  encodeURI\x2C\n  encodeURIComponent\x2C\n].forEach((fn) => {\n  primordials[fn.name] = fn;\n});\n\n// Create copies of legacy functions\n[\n  escape\x2C\n  eval\x2C\n  unescape\x2C\n].forEach((fn) => {\n  primordials[fn.name] = fn;\n});\n\n// Create copies of the namespace objects\n[\n  'JSON'\x2C\n  'Math'\x2C\n  'Proxy'\x2C\n  'Reflect'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  copyPropsRenamed(globalThis[name]\x2C primordials\x2C name);\n});\n\n// Create copies of intrinsic objects\n[\n  'AggregateError'\x2C\n  'Array'\x2C\n  'ArrayBuffer'\x2C\n  'BigInt'\x2C\n  'BigInt64Array'\x2C\n  'BigUint64Array'\x2C\n  'Boolean'\x2C\n  'DataView'\x2C\n  'Date'\x2C\n  'Error'\x2C\n  'EvalError'\x2C\n  'FinalizationRegistry'\x2C\n  'Float32Array'\x2C\n  'Float64Array'\x2C\n  'Function'\x2C\n  'Int16Array'\x2C\n  'Int32Array'\x2C\n  'Int8Array'\x2C\n  'Map'\x2C\n  'Number'\x2C\n  'Object'\x2C\n  'RangeError'\x2C\n  'ReferenceError'\x2C\n  'RegExp'\x2C\n  'Set'\x2C\n  'String'\x2C\n  'Symbol'\x2C\n  'SyntaxError'\x2C\n  'TypeError'\x2C\n  'URIError'\x2C\n  'Uint16Array'\x2C\n  'Uint32Array'\x2C\n  'Uint8Array'\x2C\n  'Uint8ClampedArray'\x2C\n  'WeakMap'\x2C\n  'WeakRef'\x2C\n  'WeakSet'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  const original = globalThis[name];\n  primordials[name] = original;\n  copyPropsRenamed(original\x2C primordials\x2C name);\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n});\n\n// Create copies of intrinsic objects that require a valid `this` to call\n// static methods.\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\n[\n  'Promise'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  const original = globalThis[name];\n  primordials[name] = original;\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n});\n\n// Create copies of abstract intrinsic objects that are not directly exposed\n// on the global object.\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\n[\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\n  { name: 'ArrayIterator'\x2C original: {\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\n  } }\x2C\n  { name: 'StringIterator'\x2C original: {\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\n  } }\x2C\n].forEach(({ name\x2C original }) => {\n  primordials[name] = original;\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\n  // as they need a subclass constructor as the receiver:\n  copyPrototype(original\x2C primordials\x2C name);\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n});\n\nprimordials.IteratorPrototype = Reflect.getPrototypeOf(primordials.ArrayIteratorPrototype);\n\n/* eslint-enable node-core/prefer-primordials */\n\nconst {\n  Array: ArrayConstructor\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeMap\x2C\n  FinalizationRegistry\x2C\n  FunctionPrototypeCall\x2C\n  Map\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectFreeze\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  PromisePrototypeThen\x2C\n  PromiseResolve\x2C\n  ReflectApply\x2C\n  ReflectConstruct\x2C\n  ReflectSet\x2C\n  ReflectGet\x2C\n  RegExp\x2C\n  RegExpPrototype\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeGetDotAll\x2C\n  RegExpPrototypeGetFlags\x2C\n  RegExpPrototypeGetGlobal\x2C\n  RegExpPrototypeGetHasIndices\x2C\n  RegExpPrototypeGetIgnoreCase\x2C\n  RegExpPrototypeGetMultiline\x2C\n  RegExpPrototypeGetSource\x2C\n  RegExpPrototypeGetSticky\x2C\n  RegExpPrototypeGetUnicode\x2C\n  Set\x2C\n  SymbolIterator\x2C\n  SymbolMatch\x2C\n  SymbolMatchAll\x2C\n  SymbolReplace\x2C\n  SymbolSearch\x2C\n  SymbolSpecies\x2C\n  SymbolSplit\x2C\n  WeakMap\x2C\n  WeakRef\x2C\n  WeakSet\x2C\n} = primordials;\n\n// Because these functions are used by `makeSafe`\x2C which is exposed\n// on the `primordials` object\x2C it's important to use const references\n// to the primordials that they use:\nconst createSafeIterator = (factory\x2C next) => {\n  class SafeIterator {\n    constructor(iterable) {\n      this._iterator = factory(iterable);\n    }\n    next() {\n      return next(this._iterator);\n    }\n    [SymbolIterator]() {\n      return this;\n    }\n  }\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\n  ObjectFreeze(SafeIterator.prototype);\n  ObjectFreeze(SafeIterator);\n  return SafeIterator;\n};\n\nprimordials.SafeArrayIterator = createSafeIterator(\n  primordials.ArrayPrototypeSymbolIterator\x2C\n  primordials.ArrayIteratorPrototypeNext\n);\nprimordials.SafeStringIterator = createSafeIterator(\n  primordials.StringPrototypeSymbolIterator\x2C\n  primordials.StringIteratorPrototypeNext\n);\n\nconst copyProps = (src\x2C dest) => {\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\n      ReflectDefineProperty(\n        dest\x2C\n        key\x2C\n        { __proto__: null\x2C ...ReflectGetOwnPropertyDescriptor(src\x2C key) });\n    }\n  });\n};\n\n/**\n * @type {typeof primordials.makeSafe}\n */\nconst makeSafe = (unsafe\x2C safe) => {\n  if (SymbolIterator in unsafe.prototype) {\n    const dummy = new unsafe();\n    let next; // We can reuse the same `next` method.\n\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\n        if (\n          typeof desc.value === 'function' &&\n          desc.value.length === 0 &&\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\n        ) {\n          const createIterator = uncurryThis(desc.value);\n          next ??= uncurryThis(createIterator(dummy).next);\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\n          desc.value = function() {\n            return new SafeIterator(this);\n          };\n        }\n        ReflectDefineProperty(safe.prototype\x2C key\x2C { __proto__: null\x2C ...desc });\n      }\n    });\n  } else {\n    copyProps(unsafe.prototype\x2C safe.prototype);\n  }\n  copyProps(unsafe\x2C safe);\n\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\n  ObjectFreeze(safe.prototype);\n  ObjectFreeze(safe);\n  return safe;\n};\nprimordials.makeSafe = makeSafe;\n\n// Subclass the constructors because we need to use their prototype\n// methods later.\n// Defining the `constructor` is necessary here to avoid the default\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\nprimordials.SafeMap = makeSafe(\n  Map\x2C\n  class SafeMap extends Map {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\n);\nprimordials.SafeWeakMap = makeSafe(\n  WeakMap\x2C\n  class SafeWeakMap extends WeakMap {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\n);\n\nprimordials.SafeSet = makeSafe(\n  Set\x2C\n  class SafeSet extends Set {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\n);\nprimordials.SafeWeakSet = makeSafe(\n  WeakSet\x2C\n  class SafeWeakSet extends WeakSet {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\n);\n\nprimordials.SafeFinalizationRegistry = makeSafe(\n  FinalizationRegistry\x2C\n  class SafeFinalizationRegistry extends FinalizationRegistry {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(cleanupCallback) { super(cleanupCallback); }\n  }\n);\nprimordials.SafeWeakRef = makeSafe(\n  WeakRef\x2C\n  class SafeWeakRef extends WeakRef {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(target) { super(target); }\n  }\n);\n\nconst SafePromise = makeSafe(\n  Promise\x2C\n  class SafePromise extends Promise {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(executor) { super(executor); }\n  }\n);\n\n/**\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\n * rejected). The resolved value cannot be modified from the callback.\n * Prefer using async functions when possible.\n * @param {Promise<any>} thisPromise\n * @param {() => void) | undefined | null} onFinally The callback to execute\n *        when the Promise is settled (fulfilled or rejected).\n * @returns {Promise} A Promise for the completion of the callback.\n */\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\n      .finally(onFinally)\n      .then(a\x2C b)\n  );\n\nprimordials.AsyncIteratorPrototype =\n  primordials.ReflectGetPrototypeOf(\n    primordials.ReflectGetPrototypeOf(\n      async function* () {}).prototype);\n\nconst arrayToSafePromiseIterable = (promises\x2C mapFn) =>\n  new primordials.SafeArrayIterator(\n    ArrayPrototypeMap(\n      promises\x2C\n      (promise\x2C i) =>\n        new SafePromise((a\x2C b) => PromisePrototypeThen(mapFn == null ? promise : mapFn(promise\x2C i)\x2C a\x2C b))\n    )\n  );\n\n/**\n * @template T\x2CU\n * @param {Array<T | PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<Awaited<U>[]>}\n */\nprimordials.SafePromiseAll = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.all(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\n  );\n\n/**\n * Should only be used for internal functions\x2C this would produce similar\n * results as `Promise.all` but without prototype pollution\x2C and the return\n * value is not a genuine Array but an array-like object.\n * @template T\x2CU\n * @param {ArrayLike<T | PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<ArrayLike<Awaited<U>>>}\n */\nprimordials.SafePromiseAllReturnArrayLike = (promises\x2C mapFn) =>\n  new Promise((resolve\x2C reject) => {\n    const { length } = promises;\n\n    const returnVal = ArrayConstructor(length);\n    ObjectSetPrototypeOf(returnVal\x2C null);\n    if (length === 0) resolve(returnVal);\n\n    let pendingPromises = length;\n    for (let i = 0; i < length; i++) {\n      const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\n      PromisePrototypeThen(PromiseResolve(promise)\x2C (result) => {\n        returnVal[i] = result;\n        if (--pendingPromises === 0) resolve(returnVal);\n      }\x2C reject);\n    }\n  });\n\n/**\n * Should only be used when we only care about waiting for all the promises to\n * resolve\x2C not what value they resolve to.\n * @template T\x2CU\n * @param {ArrayLike<T | PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<void>}\n */\nprimordials.SafePromiseAllReturnVoid = (promises\x2C mapFn) =>\n  new Promise((resolve\x2C reject) => {\n    let pendingPromises = promises.length;\n    if (pendingPromises === 0) resolve();\n    for (let i = 0; i < promises.length; i++) {\n      const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\n      PromisePrototypeThen(PromiseResolve(promise)\x2C () => {\n        if (--pendingPromises === 0) resolve();\n      }\x2C reject);\n    }\n  });\n\n/**\n * @template T\x2CU\n * @param {Array<T|PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<PromiseSettledResult<any>[]>}\n */\nprimordials.SafePromiseAllSettled = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.allSettled(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\n  );\n\n/**\n * Should only be used when we only care about waiting for all the promises to\n * settle\x2C not what value they resolve or reject to.\n * @template T\x2CU\n * @param {ArrayLike<T|PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<void>}\n */\nprimordials.SafePromiseAllSettledReturnVoid = async (promises\x2C mapFn) => {\n  for (let i = 0; i < promises.length; i++) {\n    try {\n      await (mapFn != null ? mapFn(promises[i]\x2C i) : promises[i]);\n    } catch {\n      // In all settled\x2C we can ignore errors.\n    }\n  }\n};\n\n/**\n * @template T\x2CU\n * @param {Array<T|PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<Awaited<U>>}\n */\nprimordials.SafePromiseAny = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.any(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\n  );\n\n/**\n * @template T\x2CU\n * @param {Array<T|PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<Awaited<U>>}\n */\nprimordials.SafePromiseRace = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.race(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\n  );\n\n\nconst {\n  exec: OriginalRegExpPrototypeExec\x2C\n  [SymbolMatch]: OriginalRegExpPrototypeSymbolMatch\x2C\n  [SymbolMatchAll]: OriginalRegExpPrototypeSymbolMatchAll\x2C\n  [SymbolReplace]: OriginalRegExpPrototypeSymbolReplace\x2C\n  [SymbolSearch]: OriginalRegExpPrototypeSymbolSearch\x2C\n  [SymbolSplit]: OriginalRegExpPrototypeSymbolSplit\x2C\n} = RegExpPrototype;\n\nclass RegExpLikeForStringSplitting {\n  #regex;\n  constructor() {\n    this.#regex = ReflectConstruct(RegExp\x2C arguments);\n  }\n\n  get lastIndex() {\n    return ReflectGet(this.#regex\x2C 'lastIndex');\n  }\n  set lastIndex(value) {\n    ReflectSet(this.#regex\x2C 'lastIndex'\x2C value);\n  }\n\n  exec() {\n    return ReflectApply(OriginalRegExpPrototypeExec\x2C this.#regex\x2C arguments);\n  }\n}\nObjectSetPrototypeOf(RegExpLikeForStringSplitting.prototype\x2C null);\n\nprimordials.hardenRegExp = function hardenRegExp(pattern) {\n  ObjectDefineProperties(pattern\x2C {\n    [SymbolMatch]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolMatch\x2C\n    }\x2C\n    [SymbolMatchAll]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolMatchAll\x2C\n    }\x2C\n    [SymbolReplace]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolReplace\x2C\n    }\x2C\n    [SymbolSearch]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolSearch\x2C\n    }\x2C\n    [SymbolSplit]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolSplit\x2C\n    }\x2C\n    constructor: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: {\n        [SymbolSpecies]: RegExpLikeForStringSplitting\x2C\n      }\n    }\x2C\n    dotAll: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetDotAll(pattern)\x2C\n    }\x2C\n    exec: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeExec\x2C\n    }\x2C\n    global: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetGlobal(pattern)\x2C\n    }\x2C\n    hasIndices: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetHasIndices(pattern)\x2C\n    }\x2C\n    ignoreCase: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetIgnoreCase(pattern)\x2C\n    }\x2C\n    multiline: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetMultiline(pattern)\x2C\n    }\x2C\n    source: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetSource(pattern)\x2C\n    }\x2C\n    sticky: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetSticky(pattern)\x2C\n    }\x2C\n    unicode: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetUnicode(pattern)\x2C\n    }\x2C\n  });\n  ObjectDefineProperty(pattern\x2C 'flags'\x2C {\n    __proto__: null\x2C\n    configurable: true\x2C\n    value: RegExpPrototypeGetFlags(pattern)\x2C\n  });\n  return pattern;\n};\n\n\nprimordials.SafeStringPrototypeSearch = (str\x2C regexp) => {\n  regexp.lastIndex = 0;\n  const match = RegExpPrototypeExec(regexp\x2C str);\n  return match ? match.index : -1;\n};\n\nObjectSetPrototypeOf(primordials\x2C null);\nObjectFreeze(primordials);\n
code-source-info,0x1075c9920,12,11315,11332,,,
code-creation,JS,11,47083,0x1075c9ac0,664,getOptionValue node:internal/options:44:24,0x5d9fd2d2d98,^
code-source-info,0x1075c9ac0,61,985,1228,,,
code-creation,JS,11,47083,0x1075c9dc0,168,exposeLazyInterfaces node:internal/util:597:30,0x18a4fd0ba8d0,^
code-source-info,0x1075c9dc0,21,16138,16209,,,
code-creation,JS,10,47167,0x3f1a4fb837fe,74,setupCustomEvent node:internal/process/pre_execution:309:26,0x5d9fd2e6858,~
code-source-info,0x3f1a4fb837fe,71,9176,9439,C0O9183C3O9195C8O9202C13O9212C21O9245C27O9245C33O9307C34O9314C35O9345C41O9345C46O9329C51O9381C58O9397C67O9381C73O9438,,
code-creation,JS,10,47167,0x3f1a4fb83a16,75,setupDebugEnv node:internal/process/pre_execution:361:23,0x5d9fd2e69c0,~
code-source-info,0x3f1a4fb83a16,71,10729,10940,C0O10736C6O10736C11O10769C19O10797C24O10801C29O10770C34O10816C42O10820C48O10864C54O10864C59O10901C64O10915C69O10916C74O10939,,
tick,0x10077f364,47333,0,0x0,2,0x0,0x3f1a4fb83a33,0x16645fa776dd,0x16645fa75f6e,0x16645fa75977
code-creation,JS,10,47542,0x3f1a4fb83d7e,153,initializeDebugEnv node:internal/util/debuglog:21:28,0xd5ac0c5a558,~
script-source,27,node:internal/util/debuglog,'use strict';\n\nconst {\n  ObjectDefineProperty\x2C\n  RegExp\x2C\n  RegExpPrototypeExec\x2C\n  SafeArrayIterator\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeToUpperCase\x2C\n} = primordials;\n\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\n\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\nlet debugImpls;\nlet testEnabled;\n\n\n// `debugEnv` is initial value of process.env.NODE_DEBUG\nfunction initializeDebugEnv(debugEnv) {\n  debugImpls = { __proto__: null };\n  if (debugEnv) {\n    // This is run before any user code\x2C it's OK not to use primordials.\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\n      .replaceAll('*'\x2C '.*')\n      .replaceAll('\x2C'\x2C '$|^');\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\n  } else {\n    testEnabled = () => false;\n  }\n}\n\n// Emits warning when user sets\n// NODE_DEBUG=http or NODE_DEBUG=http2.\nfunction emitWarningIfNeeded(set) {\n  if ('HTTP' === set || 'HTTP2' === set) {\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\n      'data (such as passwords\x2C tokens and authentication headers) ' +\n      'in the resulting log.');\n  }\n}\n\nconst noop = () => {};\n\nfunction debuglogImpl(enabled\x2C set) {\n  if (debugImpls[set] === undefined) {\n    if (enabled) {\n      const pid = process.pid;\n      emitWarningIfNeeded(set);\n      debugImpls[set] = function debug(...args) {\n        const colors = process.stderr.hasColors && process.stderr.hasColors();\n        const msg = formatWithOptions({ colors }\x2C ...args);\n        const coloredPID = inspect(pid\x2C { colors });\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\n      };\n    } else {\n      debugImpls[set] = noop;\n    }\n  }\n  return debugImpls[set];\n}\n\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\n// so it needs to be called lazily in top scopes of internal modules\n// that may be loaded before these run time states are allowed to\n// be accessed.\nfunction debuglog(set\x2C cb) {\n  function init() {\n    set = StringPrototypeToUpperCase(set);\n    enabled = testEnabled(set);\n  }\n  let debug = (...args) => {\n    init();\n    // Only invokes debuglogImpl() when the debug function is\n    // called for the first time.\n    debug = debuglogImpl(enabled\x2C set);\n    if (typeof cb === 'function')\n      cb(debug);\n    switch (args.length) {\n      case 1: return debug(args[0]);\n      case 2: return debug(args[0]\x2C args[1]);\n      default: return debug(...new SafeArrayIterator(args));\n    }\n  };\n  let enabled;\n  let test = () => {\n    init();\n    test = () => enabled;\n    return enabled;\n  };\n  const logger = (...args) => {\n    switch (args.length) {\n      case 1: return debug(args[0]);\n      case 2: return debug(args[0]\x2C args[1]);\n      default: return debug(...new SafeArrayIterator(args));\n    }\n  };\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\n    __proto__: null\x2C\n    get() {\n      return test();\n    }\x2C\n    configurable: true\x2C\n    enumerable: true\n  });\n  return logger;\n}\n\nmodule.exports = {\n  debuglog\x2C\n  initializeDebugEnv\n};\n
code-source-info,0x3f1a4fb83d7e,27,530,976,C0O545C7O556C13O581C24O694C38O694C45O738C56O739C63O767C74O768C82O818C94O833C110O818C115O818C117O856C126O868C138O944C145O956C152O975,,
code-creation,JS,10,47667,0x3f1a4fb843e6,31,initializeReport node:internal/process/pre_execution:349:26,0x5d9fd2e6948,~
code-source-info,0x3f1a4fb843e6,71,10482,10705,C0O10489C11O10510C16O10602C24O10489C30O10704,,
code-creation,JS,10,47667,0x3f1a4fb84576,35,initializeSourceMapsHandlers node:internal/process/pre_execution:595:38,0x5d9fd2e6df8,~
code-source-info,0x3f1a4fb84576,71,18456,18706,C0O18522C6O18522C11O18471C16O18493C21O18573C26O18602C30O18681C34O18705,,
code-creation,JS,10,47708,0x3f1a4fb846b6,31,getSourceMapsEnabled node:internal/source_map/source_map_cache:45:30,0x5d9fd2d1d90,~
script-source,60,node:internal/source_map/source_map_cache,'use strict';\n\nconst {\n  ArrayPrototypeMap\x2C\n  JSONParse\x2C\n  ObjectKeys\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeSymbolSplit\x2C\n  SafeMap\x2C\n  StringPrototypeSplit\x2C\n} = primordials;\n\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\nconst { Buffer } = require('buffer');\nlet debug = require('internal/util/debuglog').debuglog('source_map'\x2C (fn) => {\n  debug = fn;\n});\nconst { getOptionValue } = require('internal/options');\n\nconst { validateBoolean } = require('internal/validators');\nconst { setMaybeCacheGeneratedSourceMap } = internalBinding('errors');\nconst { getLazy } = require('internal/util');\n\n// Since the CJS module cache is mutable\x2C which leads to memory leaks when\n// modules are deleted\x2C we use a WeakMap so that the source map cache will\n// be purged automatically:\nconst getCjsSourceMapCache = getLazy(() => {\n  const { IterableWeakMap } = require('internal/util/iterable_weak_map');\n  return new IterableWeakMap();\n});\n\n// The esm cache is not mutable\x2C so we can use a Map without memory concerns:\nconst esmSourceMapCache = new SafeMap();\n// The generated sources is not mutable\x2C so we can use a Map without memory concerns:\nconst generatedSourceMapCache = new SafeMap();\nconst kLeadingProtocol = /^\\w+:\\/\\//;\nconst kSourceMappingURLMagicComment = /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/g;\nconst kSourceURLMagicComment = /\\/[*/]#\\s+sourceURL=(?<sourceURL>[^\\s]+)/g;\n\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\n\nlet SourceMap;\n\nlet sourceMapsEnabled;\nfunction getSourceMapsEnabled() {\n  if (sourceMapsEnabled === undefined) {\n    setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\n  }\n  return sourceMapsEnabled;\n}\n\nfunction setSourceMapsEnabled(val) {\n  validateBoolean(val\x2C 'val');\n\n  const {\n    setSourceMapsEnabled\x2C\n    setPrepareStackTraceCallback\n  } = internalBinding('errors');\n  setSourceMapsEnabled(val);\n  if (val) {\n    const {\n      prepareStackTrace\n    } = require('internal/source_map/prepare_stack_trace');\n    setPrepareStackTraceCallback(prepareStackTrace);\n  } else if (sourceMapsEnabled !== undefined) {\n    // Reset prepare stack trace callback only when disabling source maps.\n    const {\n      prepareStackTrace\x2C\n    } = require('internal/errors');\n    setPrepareStackTraceCallback(prepareStackTrace);\n  }\n\n  sourceMapsEnabled = val;\n}\n\nfunction extractSourceURLMagicComment(content) {\n  let match;\n  let matchSourceURL;\n  // A while loop is used here to get the last occurrence of sourceURL.\n  // This is needed so that we don't match sourceURL in string literals.\n  while ((match = RegExpPrototypeExec(kSourceURLMagicComment\x2C content))) {\n    matchSourceURL = match;\n  }\n  if (matchSourceURL == null) {\n    return null;\n  }\n  let sourceURL = matchSourceURL.groups.sourceURL;\n  if (sourceURL != null && RegExpPrototypeExec(kLeadingProtocol\x2C sourceURL) === null) {\n    sourceURL = pathToFileURL(sourceURL).href;\n  }\n  return sourceURL;\n}\n\nfunction extractSourceMapURLMagicComment(content) {\n  let match;\n  let lastMatch;\n  // A while loop is used here to get the last occurrence of sourceMappingURL.\n  // This is needed so that we don't match sourceMappingURL in string literals.\n  while ((match = RegExpPrototypeExec(kSourceMappingURLMagicComment\x2C content))) {\n    lastMatch = match;\n  }\n  if (lastMatch == null) {\n    return null;\n  }\n  return lastMatch.groups.sourceMappingURL;\n}\n\nfunction maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance\x2C isGeneratedSource\x2C sourceURL\x2C sourceMapURL) {\n  const sourceMapsEnabled = getSourceMapsEnabled();\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\n  try {\n    const { normalizeReferrerURL } = require('internal/modules/helpers');\n    filename = normalizeReferrerURL(filename);\n  } catch (err) {\n    // This is most likely an invalid filename in sourceURL of [eval]-wrapper.\n    debug(err);\n    return;\n  }\n\n  if (sourceMapURL === undefined) {\n    sourceMapURL = extractSourceMapURLMagicComment(content);\n  }\n\n  // Bail out when there is no source map url.\n  if (typeof sourceMapURL !== 'string') {\n    return;\n  }\n\n  if (sourceURL === undefined) {\n    sourceURL = extractSourceURLMagicComment(content);\n  }\n\n  const data = dataFromUrl(filename\x2C sourceMapURL);\n  const url = data ? null : sourceMapURL;\n  if (cjsModuleInstance) {\n    getCjsSourceMapCache().set(cjsModuleInstance\x2C {\n      __proto__: null\x2C\n      filename\x2C\n      lineLengths: lineLengths(content)\x2C\n      data\x2C\n      url\x2C\n      sourceURL\x2C\n    });\n  } else if (isGeneratedSource) {\n    const entry = {\n      __proto__: null\x2C\n      lineLengths: lineLengths(content)\x2C\n      data\x2C\n      url\x2C\n      sourceURL\n    };\n    generatedSourceMapCache.set(filename\x2C entry);\n    if (sourceURL) {\n      generatedSourceMapCache.set(sourceURL\x2C entry);\n    }\n  } else {\n    // If there is no cjsModuleInstance and is not generated source assume we are in a\n    // "modules/esm" context.\n    const entry = {\n      __proto__: null\x2C\n      lineLengths: lineLengths(content)\x2C\n      data\x2C\n      url\x2C\n      sourceURL\x2C\n    };\n    esmSourceMapCache.set(filename\x2C entry);\n    if (sourceURL) {\n      esmSourceMapCache.set(sourceURL\x2C entry);\n    }\n  }\n}\n\nfunction maybeCacheGeneratedSourceMap(content) {\n  const sourceMapsEnabled = getSourceMapsEnabled();\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\n\n  const sourceURL = extractSourceURLMagicComment(content);\n  if (sourceURL === null) {\n    return;\n  }\n  try {\n    maybeCacheSourceMap(sourceURL\x2C content\x2C null\x2C true\x2C sourceURL);\n  } catch (err) {\n    // This can happen if the filename is not a valid URL.\n    // If we fail to cache the source map\x2C we should not fail the whole process.\n    debug(err);\n  }\n}\nsetMaybeCacheGeneratedSourceMap(maybeCacheGeneratedSourceMap);\n\nfunction dataFromUrl(sourceURL\x2C sourceMappingURL) {\n  try {\n    const url = new URL(sourceMappingURL);\n    switch (url.protocol) {\n      case 'data:':\n        return sourceMapFromDataUrl(sourceURL\x2C url.pathname);\n      default:\n        debug(`unknown protocol ${url.protocol}`);\n        return null;\n    }\n  } catch (err) {\n    debug(err);\n    // If no scheme is present\x2C we assume we are dealing with a file path.\n    const mapURL = new URL(sourceMappingURL\x2C sourceURL).href;\n    return sourceMapFromFile(mapURL);\n  }\n}\n\n// Cache the length of each line in the file that a source map was extracted\n// from. This allows translation from byte offset V8 coverage reports\x2C\n// to line/column offset Source Map V3.\nfunction lineLengths(content) {\n  // We purposefully keep \\r as part of the line-length calculation\x2C in\n  // cases where there is a \\r\\n separator\x2C so that this can be taken into\n  // account in coverage calculations.\n  return ArrayPrototypeMap(RegExpPrototypeSymbolSplit(/\\n|\\u2028|\\u2029/\x2C content)\x2C (line) => {\n    return line.length;\n  });\n}\n\nfunction sourceMapFromFile(mapURL) {\n  try {\n    const fs = require('fs');\n    const content = fs.readFileSync(fileURLToPath(mapURL)\x2C 'utf8');\n    const data = JSONParse(content);\n    return sourcesToAbsolute(mapURL\x2C data);\n  } catch (err) {\n    debug(err);\n    return null;\n  }\n}\n\n// data:[<mediatype>][;base64]\x2C<data> see:\n// https://tools.ietf.org/html/rfc2397#section-2\nfunction sourceMapFromDataUrl(sourceURL\x2C url) {\n  const { 0: format\x2C 1: data } = StringPrototypeSplit(url\x2C '\x2C');\n  const splitFormat = StringPrototypeSplit(format\x2C ';');\n  const contentType = splitFormat[0];\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\n  if (contentType === 'application/json') {\n    const decodedData = base64 ?\n      Buffer.from(data\x2C 'base64').toString('utf8') : data;\n    try {\n      const parsedData = JSONParse(decodedData);\n      return sourcesToAbsolute(sourceURL\x2C parsedData);\n    } catch (err) {\n      debug(err);\n      return null;\n    }\n  } else {\n    debug(`unknown content-type ${contentType}`);\n    return null;\n  }\n}\n\n// If the sources are not absolute URLs after prepending of the "sourceRoot"\x2C\n// the sources are resolved relative to the SourceMap (like resolving script\n// src in a html document).\nfunction sourcesToAbsolute(baseURL\x2C data) {\n  data.sources = data.sources.map((source) => {\n    source = (data.sourceRoot || '') + source;\n    return new URL(source\x2C baseURL).href;\n  });\n  // The sources array is now resolved to absolute URLs\x2C sourceRoot should\n  // be updated to noop.\n  data.sourceRoot = '';\n  return data;\n}\n\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\n// shutdown. In particular\x2C they also run when Workers are terminated\x2C making\n// it important that they do not call out to any user-provided code\x2C including\n// built-in prototypes that might have been tampered with.\n\n// Get serialized representation of source-map cache\x2C this is used\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\nfunction sourceMapCacheToObject() {\n  const obj = { __proto__: null };\n\n  for (const { 0: k\x2C 1: v } of esmSourceMapCache) {\n    obj[k] = v;\n  }\n\n  appendCJSCache(obj);\n\n  if (ObjectKeys(obj).length === 0) {\n    return undefined;\n  }\n  return obj;\n}\n\nfunction appendCJSCache(obj) {\n  for (const value of getCjsSourceMapCache()) {\n    obj[value.filename] = {\n      __proto__: null\x2C\n      lineLengths: value.lineLengths\x2C\n      data: value.data\x2C\n      url: value.url\x2C\n    };\n  }\n}\n\nfunction findSourceMap(sourceURL) {\n  if (RegExpPrototypeExec(kLeadingProtocol\x2C sourceURL) === null) {\n    sourceURL = pathToFileURL(sourceURL).href;\n  }\n  if (!SourceMap) {\n    SourceMap = require('internal/source_map/source_map').SourceMap;\n  }\n  let entry = esmSourceMapCache.get(sourceURL) ?? generatedSourceMapCache.get(sourceURL);\n  if (entry === undefined) {\n    for (const value of getCjsSourceMapCache()) {\n      const filename = value.filename;\n      const cachedSourceURL = value.sourceURL;\n      if (sourceURL === filename || sourceURL === cachedSourceURL) {\n        entry = value;\n      }\n    }\n  }\n  if (entry === undefined) {\n    return undefined;\n  }\n  let sourceMap = entry.sourceMap;\n  if (sourceMap === undefined) {\n    sourceMap = new SourceMap(entry.data);\n    entry.sourceMap = sourceMap;\n  }\n  return sourceMap;\n}\n\nmodule.exports = {\n  findSourceMap\x2C\n  getSourceMapsEnabled\x2C\n  setSourceMapsEnabled\x2C\n  maybeCacheSourceMap\x2C\n  sourceMapCacheToObject\x2C\n};\n
code-source-info,0x3f1a4fb846b6,60,1558,1703,C0O1565C6O1608C11O1629C17O1629C22O1608C26O1676C30O1701,,
code-creation,JS,10,48083,0x3f1a4fb85306,100,setSourceMapsEnabled node:internal/source_map/source_map_cache:52:30,0x5d9fd2d1de0,~
code-source-info,0x3f1a4fb85306,60,1734,2349,C0O1744C8O1744C13O1849C19O1849C24O1788C29O1814C34O1878C38O1907C42O1962C48O1962C53O1936C58O2018C64O2076C70O2235C76O2235C81O2208C86O2267C90O2323C92O2341C99O2348,,
code-creation,JS,10,48125,0x3f1a4fb8547e,30,validateBoolean node:internal/validators:217:25,0x18a4fd0b2fd8,~
script-source,20,node:internal/validators,/* eslint jsdoc/require-jsdoc: "error" */\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  NumberIsInteger\x2C\n  NumberIsNaN\x2C\n  NumberMAX_SAFE_INTEGER\x2C\n  NumberMIN_SAFE_INTEGER\x2C\n  NumberParseInt\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  RegExpPrototypeExec\x2C\n  String\x2C\n  StringPrototypeToUpperCase\x2C\n  StringPrototypeTrim\x2C\n} = primordials;\n\nconst {\n  hideStackFrames\x2C\n  codes: {\n    ERR_SOCKET_BAD_PORT\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_UNKNOWN_SIGNAL\x2C\n  }\n} = require('internal/errors');\nconst { normalizeEncoding } = require('internal/util');\nconst {\n  isAsyncFunction\x2C\n  isArrayBufferView\n} = require('internal/util/types');\nconst { signals } = internalBinding('constants').os;\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nfunction isInt32(value) {\n  return value === (value | 0);\n}\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nfunction isUint32(value) {\n  return value === (value >>> 0);\n}\n\nconst octalReg = /^[0-7]+$/;\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\n\n/**\n * Parse and validate values that will be converted into mode_t (the S_*\n * constants). Only valid numbers and octal strings are allowed. They could be\n * converted to 32-bit unsigned integers or non-negative signed integers in the\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\n * behaviors.\n *\n * @param {*} value Values to be validated\n * @param {string} name Name of the argument\n * @param {number} [def] If specified\x2C will be returned for invalid values\n * @returns {number}\n */\nfunction parseFileMode(value\x2C name\x2C def) {\n  value ??= def;\n  if (typeof value === 'string') {\n    if (RegExpPrototypeExec(octalReg\x2C value) === null) {\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\n    }\n    value = NumberParseInt(value\x2C 8);\n  }\n\n  validateUint32(value\x2C name);\n  return value;\n}\n\n/**\n * @callback validateInteger\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateInteger} */\nconst validateInteger = hideStackFrames(\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\n    if (typeof value !== 'number')\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n    if (!NumberIsInteger(value))\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\n    if (value < min || value > max)\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\n  }\n);\n\n/**\n * @callback validateInt32\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateInt32} */\nconst validateInt32 = hideStackFrames(\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\n    // The defaults for min and max correspond to the limits of 32-bit integers.\n    if (typeof value !== 'number') {\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n    }\n    if (!NumberIsInteger(value)) {\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\n    }\n    if (value < min || value > max) {\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\n    }\n  }\n);\n\n/**\n * @callback validateUint32\n * @param {*} value\n * @param {string} name\n * @param {number|boolean} [positive=false]\n * @returns {asserts value is number}\n */\n\n/** @type {validateUint32} */\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive = false) => {\n  if (typeof value !== 'number') {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n  }\n  if (!NumberIsInteger(value)) {\n    throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\n  }\n  const min = positive ? 1 : 0;\n  // 2 ** 32 === 4294967296\n  const max = 4_294_967_295;\n  if (value < min || value > max) {\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\n  }\n});\n\n/**\n * @callback validateString\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is string}\n */\n\n/** @type {validateString} */\nfunction validateString(value\x2C name) {\n  if (typeof value !== 'string')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\n}\n\n/**\n * @callback validateNumber\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateNumber} */\nfunction validateNumber(value\x2C name\x2C min = undefined\x2C max) {\n  if (typeof value !== 'number')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n\n  if ((min != null && value < min) || (max != null && value > max) ||\n      ((min != null || max != null) && NumberIsNaN(value))) {\n    throw new ERR_OUT_OF_RANGE(\n      name\x2C\n      `${min != null ? `>= ${min}` : ''}${min != null && max != null ? ' && ' : ''}${max != null ? `<= ${max}` : ''}`\x2C\n      value);\n  }\n}\n\n/**\n * @callback validateOneOf\n * @template T\n * @param {T} value\n * @param {string} name\n * @param {T[]} oneOf\n */\n\n/** @type {validateOneOf} */\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\n    const allowed = ArrayPrototypeJoin(\n      ArrayPrototypeMap(oneOf\x2C (v) =>\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\n      '\x2C ');\n    const reason = 'must be one of: ' + allowed;\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\n  }\n});\n\n/**\n * @callback validateBoolean\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is boolean}\n */\n\n/** @type {validateBoolean} */\nfunction validateBoolean(value\x2C name) {\n  if (typeof value !== 'boolean')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\n}\n\n/**\n * @param {any} options\n * @param {string} key\n * @param {boolean} defaultValue\n * @returns {boolean}\n */\nfunction getOwnPropertyValueOrDefault(options\x2C key\x2C defaultValue) {\n  return options == null || !ObjectPrototypeHasOwnProperty(options\x2C key) ?\n    defaultValue :\n    options[key];\n}\n\n/**\n * @callback validateObject\n * @param {*} value\n * @param {string} name\n * @param {{\n *   allowArray?: boolean\x2C\n *   allowFunction?: boolean\x2C\n *   nullable?: boolean\n * }} [options]\n */\n\n/** @type {validateObject} */\nconst validateObject = hideStackFrames(\n  (value\x2C name\x2C options = null) => {\n    const allowArray = getOwnPropertyValueOrDefault(options\x2C 'allowArray'\x2C false);\n    const allowFunction = getOwnPropertyValueOrDefault(options\x2C 'allowFunction'\x2C false);\n    const nullable = getOwnPropertyValueOrDefault(options\x2C 'nullable'\x2C false);\n    if ((!nullable && value === null) ||\n        (!allowArray && ArrayIsArray(value)) ||\n        (typeof value !== 'object' && (\n          !allowFunction || typeof value !== 'function'\n        ))) {\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\n    }\n  });\n\n/**\n * @callback validateDictionary - We are using the Web IDL Standard definition\n *                                of "dictionary" here\x2C which means any value\n *                                whose Type is either Undefined\x2C Null\x2C or\n *                                Object (which includes functions).\n * @param {*} value\n * @param {string} name\n * @see https://webidl.spec.whatwg.org/#es-dictionary\n * @see https://tc39.es/ecma262/#table-typeof-operator-results\n */\n\n/** @type {validateDictionary} */\nconst validateDictionary = hideStackFrames(\n  (value\x2C name) => {\n    if (value != null && typeof value !== 'object' && typeof value !== 'function') {\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'a dictionary'\x2C value);\n    }\n  });\n\n/**\n * @callback validateArray\n * @param {*} value\n * @param {string} name\n * @param {number} [minLength]\n * @returns {asserts value is any[]}\n */\n\n/** @type {validateArray} */\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\n  if (!ArrayIsArray(value)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\n  }\n  if (value.length < minLength) {\n    const reason = `must be longer than ${minLength}`;\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\n  }\n});\n\n/**\n * @callback validateStringArray\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is string[]}\n */\n\n/** @type {validateStringArray} */\nfunction validateStringArray(value\x2C name) {\n  validateArray(value\x2C name);\n  for (let i = 0; i < value.length; i++) {\n    validateString(value[i]\x2C `${name}[${i}]`);\n  }\n}\n\n/**\n * @callback validateBooleanArray\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is boolean[]}\n */\n\n/** @type {validateBooleanArray} */\nfunction validateBooleanArray(value\x2C name) {\n  validateArray(value\x2C name);\n  for (let i = 0; i < value.length; i++) {\n    validateBoolean(value[i]\x2C `${name}[${i}]`);\n  }\n}\n\n/**\n * @param {*} signal\n * @param {string} [name='signal']\n * @returns {asserts signal is keyof signals}\n */\nfunction validateSignalName(signal\x2C name = 'signal') {\n  validateString(signal\x2C name);\n\n  if (signals[signal] === undefined) {\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\n      throw new ERR_UNKNOWN_SIGNAL(signal +\n                                   ' (signals must use all capital letters)');\n    }\n\n    throw new ERR_UNKNOWN_SIGNAL(signal);\n  }\n}\n\n/**\n * @callback validateBuffer\n * @param {*} buffer\n * @param {string} [name='buffer']\n * @returns {asserts buffer is ArrayBufferView}\n */\n\n/** @type {validateBuffer} */\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\n  if (!isArrayBufferView(buffer)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n                                   buffer);\n  }\n});\n\n/**\n * @param {string} data\n * @param {string} encoding\n */\nfunction validateEncoding(data\x2C encoding) {\n  const normalizedEncoding = normalizeEncoding(encoding);\n  const length = data.length;\n\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\n                                    `is invalid for data of length ${length}`);\n  }\n}\n\n/**\n * Check that the port number is not NaN when coerced to a number\x2C\n * is an integer and that it falls within the legal range of port numbers.\n * @param {*} port\n * @param {string} [name='Port']\n * @param {boolean} [allowZero=true]\n * @returns {number}\n */\nfunction validatePort(port\x2C name = 'Port'\x2C allowZero = true) {\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\n      +port !== (+port >>> 0) ||\n      port > 0xFFFF ||\n      (port === 0 && !allowZero)) {\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\n  }\n  return port | 0;\n}\n\n/**\n * @callback validateAbortSignal\n * @param {*} signal\n * @param {string} name\n */\n\n/** @type {validateAbortSignal} */\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\n  if (signal !== undefined &&\n      (signal === null ||\n       typeof signal !== 'object' ||\n       !('aborted' in signal))) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\n  }\n});\n\n/**\n * @callback validateFunction\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is Function}\n */\n\n/** @type {validateFunction} */\nconst validateFunction = hideStackFrames((value\x2C name) => {\n  if (typeof value !== 'function')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\n});\n\n/**\n * @callback validatePlainFunction\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is Function}\n */\n\n/** @type {validatePlainFunction} */\nconst validatePlainFunction = hideStackFrames((value\x2C name) => {\n  if (typeof value !== 'function' || isAsyncFunction(value))\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\n});\n\n/**\n * @callback validateUndefined\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is undefined}\n */\n\n/** @type {validateUndefined} */\nconst validateUndefined = hideStackFrames((value\x2C name) => {\n  if (value !== undefined)\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\n});\n\n/**\n * @template T\n * @param {T} value\n * @param {string} name\n * @param {T[]} union\n */\nfunction validateUnion(value\x2C name\x2C union) {\n  if (!ArrayPrototypeIncludes(union\x2C value)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C `('${ArrayPrototypeJoin(union\x2C '|')}')`\x2C value);\n  }\n}\n\nconst linkValueRegExp = /^(?:<[^>]*>;)\\s*(?:rel=(")?[^;"]*\\1;?)\\s*(?:(?:as|anchor|title|crossorigin|disabled|fetchpriority|rel|referrerpolicy)=(")?[^;"]*\\2)?$/;\n\n/**\n * @param {any} value\n * @param {string} name\n */\nfunction validateLinkHeaderFormat(value\x2C name) {\n  if (\n    typeof value === 'undefined' ||\n    !RegExpPrototypeExec(linkValueRegExp\x2C value)\n  ) {\n    throw new ERR_INVALID_ARG_VALUE(\n      name\x2C\n      value\x2C\n      'must be an array or string of format "</styles.css>; rel=preload; as=style"'\n    );\n  }\n}\n\nconst validateInternalField = hideStackFrames((object\x2C fieldKey\x2C className) => {\n  if (typeof object !== 'object' || object === null || !ObjectPrototypeHasOwnProperty(object\x2C fieldKey)) {\n    throw new ERR_INVALID_ARG_TYPE('this'\x2C className\x2C object);\n  }\n});\n\n/**\n * @param {any} hints\n * @return {string}\n */\nfunction validateLinkHeaderValue(hints) {\n  if (typeof hints === 'string') {\n    validateLinkHeaderFormat(hints\x2C 'hints');\n    return hints;\n  } else if (ArrayIsArray(hints)) {\n    const hintsLength = hints.length;\n    let result = '';\n\n    if (hintsLength === 0) {\n      return result;\n    }\n\n    for (let i = 0; i < hintsLength; i++) {\n      const link = hints[i];\n      validateLinkHeaderFormat(link\x2C 'hints');\n      result += link;\n\n      if (i !== hintsLength - 1) {\n        result += '\x2C ';\n      }\n    }\n\n    return result;\n  }\n\n  throw new ERR_INVALID_ARG_VALUE(\n    'hints'\x2C\n    hints\x2C\n    'must be an array or string of format "</styles.css>; rel=preload; as=style"'\n  );\n}\n\nmodule.exports = {\n  isInt32\x2C\n  isUint32\x2C\n  parseFileMode\x2C\n  validateArray\x2C\n  validateStringArray\x2C\n  validateBooleanArray\x2C\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateDictionary\x2C\n  validateEncoding\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateInteger\x2C\n  validateNumber\x2C\n  validateObject\x2C\n  validateOneOf\x2C\n  validatePlainFunction\x2C\n  validatePort\x2C\n  validateSignalName\x2C\n  validateString\x2C\n  validateUint32\x2C\n  validateUndefined\x2C\n  validateUnion\x2C\n  validateAbortSignal\x2C\n  validateLinkHeaderValue\x2C\n  validateInternalField\x2C\n};\n
code-source-info,0x3f1a4fb8547e,20,5596,5707,C0O5614C6O5650C22O5656C27O5650C29O5706,,
tick,0x1a52c13d8,48625,0,0x0,3,0x0,0x3f1a4fb8530e,0x3f1a4fb846cc,0x3f1a4fb84594,0x16645fa776e9,0x16645fa75f6e,0x16645fa75977
code-creation,JS,10,48667,0x3f1a4fb86b66,348,initializeDeprecations node:internal/process/pre_execution:427:32,0x5d9fd2e6bc8,~
code-source-info,0x3f1a4fb86b66,71,12928,14848,C0O12957C6O12957C11O12943C16O13012C24O13012C29O13203C35O13203C40O13244C46O13244C51O13297C73O13289C101O13289C104O13615C112O13635C116O13677C127O13751C138O13841C149O13796C158O13662C167O13900C170O13633C174O13278C239O14177C245O14177C250O14156C255O14206C257O14234C268O14255C275O14396C279O14234C284O14428C288O14458C294O14494C304O14571C311O14476C316O14474C320O14657C326O14699C337O14681C342O14679C347O14847,,
code-creation,JS,10,48875,0x3f1a4fb86efe,53,initializeWASI node:internal/process/pre_execution:566:24,0x5d9fd2e6d08,~
code-source-info,0x3f1a4fb86efe,71,17537,17745,C0O17570C6O17570C11O17552C16O17637C21O17641C29O17641C35O17656C37O17687C43O17687C47O17681C52O17744,,
code-creation,JS,10,48917,0x3f1a4fb87106,72,initializeDns node:internal/dns/utils:202:23,0x5d9fd2e0210,~
script-source,69,node:internal/dns/utils,'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  FunctionPrototypeBind\x2C\n  NumberParseInt\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  Symbol\x2C\n} = primordials;\n\nconst errors = require('internal/errors');\nconst { isIP } = require('internal/net');\nconst { getOptionValue } = require('internal/options');\nconst {\n  validateArray\x2C\n  validateInt32\x2C\n  validateOneOf\x2C\n  validateString\x2C\n} = require('internal/validators');\nlet binding;\nfunction lazyBinding() {\n  binding ??= internalBinding('cares_wrap');\n  return binding;\n}\nconst IANA_DNS_PORT = 53;\nconst IPv6RE = /^\\[([^[\\]]*)\\]/;\nconst addrSplitRE = /(^.+?)(?::(\\d+))?$/;\nconst {\n  ERR_DNS_SET_SERVERS_FAILED\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_INVALID_IP_ADDRESS\x2C\n} = errors.codes;\n\nconst {\n  namespace: {\n    addSerializeCallback\x2C\n    addDeserializeCallback\x2C\n    isBuildingSnapshot\x2C\n  }\x2C\n} = require('internal/v8/startup_snapshot');\n\nfunction validateTimeout(options) {\n  const { timeout = -1 } = { ...options };\n  validateInt32(timeout\x2C 'options.timeout'\x2C -1);\n  return timeout;\n}\n\nfunction validateTries(options) {\n  const { tries = 4 } = { ...options };\n  validateInt32(tries\x2C 'options.tries'\x2C 1);\n  return tries;\n}\n\nconst kSerializeResolver = Symbol('dns:resolver:serialize');\nconst kDeserializeResolver = Symbol('dns:resolver:deserialize');\nconst kSnapshotStates = Symbol('dns:resolver:config');\nconst kInitializeHandle = Symbol('dns:resolver:initializeHandle');\nconst kSetServersInteral = Symbol('dns:resolver:setServers');\n\n// Resolver instances correspond 1:1 to c-ares channels.\n\nclass ResolverBase {\n  constructor(options = undefined) {\n    const timeout = validateTimeout(options);\n    const tries = validateTries(options);\n    // If we are building snapshot\x2C save the states of the resolver along\n    // the way.\n    if (isBuildingSnapshot()) {\n      this[kSnapshotStates] = { timeout\x2C tries };\n    }\n    this[kInitializeHandle](timeout\x2C tries);\n  }\n\n  [kInitializeHandle](timeout\x2C tries) {\n    const { ChannelWrap } = lazyBinding();\n    this._handle = new ChannelWrap(timeout\x2C tries);\n  }\n\n  cancel() {\n    this._handle.cancel();\n  }\n\n  getServers() {\n    return ArrayPrototypeMap(this._handle.getServers() || []\x2C (val) => {\n      if (!val[1] || val[1] === IANA_DNS_PORT)\n        return val[0];\n\n      const host = isIP(val[0]) === 6 ? `[${val[0]}]` : val[0];\n      return `${host}:${val[1]}`;\n    });\n  }\n\n  setServers(servers) {\n    validateArray(servers\x2C 'servers');\n\n    // Cache the original servers because in the event of an error while\n    // setting the servers\x2C c-ares won't have any servers available for\n    // resolution.\n    const newSet = [];\n    ArrayPrototypeForEach(servers\x2C (serv\x2C index) => {\n      validateString(serv\x2C `servers[${index}]`);\n      let ipVersion = isIP(serv);\n\n      if (ipVersion !== 0)\n        return ArrayPrototypePush(newSet\x2C [ipVersion\x2C serv\x2C IANA_DNS_PORT]);\n\n      const match = RegExpPrototypeExec(IPv6RE\x2C serv);\n\n      // Check for an IPv6 in brackets.\n      if (match) {\n        ipVersion = isIP(match[1]);\n\n        if (ipVersion !== 0) {\n          const port = NumberParseInt(\n            RegExpPrototypeSymbolReplace(addrSplitRE\x2C serv\x2C '$2')) || IANA_DNS_PORT;\n          return ArrayPrototypePush(newSet\x2C [ipVersion\x2C match[1]\x2C port]);\n        }\n      }\n\n      // addr::port\n      const addrSplitMatch = RegExpPrototypeExec(addrSplitRE\x2C serv);\n\n      if (addrSplitMatch) {\n        const hostIP = addrSplitMatch[1];\n        const port = addrSplitMatch[2] || IANA_DNS_PORT;\n\n        ipVersion = isIP(hostIP);\n\n        if (ipVersion !== 0) {\n          return ArrayPrototypePush(\n            newSet\x2C [ipVersion\x2C hostIP\x2C NumberParseInt(port)]);\n        }\n      }\n\n      throw new ERR_INVALID_IP_ADDRESS(serv);\n    });\n\n    this[kSetServersInteral](newSet\x2C servers);\n  }\n\n  [kSetServersInteral](newSet\x2C servers) {\n    const orig = this._handle.getServers() || [];\n    const errorNumber = this._handle.setServers(newSet);\n\n    if (errorNumber !== 0) {\n      // Reset the servers to the old servers\x2C because ares probably unset them.\n      this._handle.setServers(ArrayPrototypeJoin(orig\x2C '\x2C'));\n      const { strerror } = lazyBinding();\n      const err = strerror(errorNumber);\n      throw new ERR_DNS_SET_SERVERS_FAILED(err\x2C servers);\n    }\n\n    if (isBuildingSnapshot()) {\n      this[kSnapshotStates].servers = newSet;\n    }\n  }\n\n\n  setLocalAddress(ipv4\x2C ipv6) {\n    validateString(ipv4\x2C 'ipv4');\n\n    if (ipv6 !== undefined) {\n      validateString(ipv6\x2C 'ipv6');\n    }\n\n    this._handle.setLocalAddress(ipv4\x2C ipv6);\n\n    if (isBuildingSnapshot()) {\n      this[kSnapshotStates].localAddress = { ipv4\x2C ipv6 };\n    }\n  }\n\n  // TODO(joyeecheung): consider exposing this if custom DNS resolvers\n  // end up being useful for snapshot users.\n  [kSerializeResolver]() {\n    this._handle = null;  // We'll restore it during deserialization.\n    addDeserializeCallback(function deserializeResolver(resolver) {\n      resolver[kDeserializeResolver]();\n    }\x2C this);\n  }\n\n  [kDeserializeResolver]() {\n    const { timeout\x2C tries\x2C localAddress\x2C servers } = this[kSnapshotStates];\n    this[kInitializeHandle](timeout\x2C tries);\n    if (localAddress) {\n      const { ipv4\x2C ipv6 } = localAddress;\n      this._handle.setLocalAddress(ipv4\x2C ipv6);\n    }\n    if (servers) {\n      this[kSetServersInteral](servers\x2C servers);\n    }\n  }\n}\n\nlet defaultResolver;\nlet dnsOrder;\n\nfunction initializeDns() {\n  const orderFromCLI = getOptionValue('--dns-result-order');\n  if (!orderFromCLI) {\n    dnsOrder ??= 'verbatim';\n  } else {\n    // Allow the deserialized application to override order from CLI.\n    dnsOrder = orderFromCLI;\n  }\n\n  if (!isBuildingSnapshot()) {\n    return;\n  }\n\n  addSerializeCallback(() => {\n    defaultResolver?.[kSerializeResolver]();\n  });\n}\n\nconst resolverKeys = [\n  'getServers'\x2C\n  'resolve'\x2C\n  'resolve4'\x2C\n  'resolve6'\x2C\n  'resolveAny'\x2C\n  'resolveCaa'\x2C\n  'resolveCname'\x2C\n  'resolveMx'\x2C\n  'resolveNaptr'\x2C\n  'resolveNs'\x2C\n  'resolvePtr'\x2C\n  'resolveSoa'\x2C\n  'resolveSrv'\x2C\n  'resolveTxt'\x2C\n  'reverse'\x2C\n];\n\nfunction getDefaultResolver() {\n  // We do this here instead of pre-execution so that the default resolver is\n  // only ever created when the user loads any dns module.\n  if (defaultResolver === undefined) {\n    defaultResolver = new ResolverBase();\n  }\n  return defaultResolver;\n}\n\nfunction setDefaultResolver(resolver) {\n  defaultResolver = resolver;\n}\n\nfunction bindDefaultResolver(target\x2C source) {\n  const defaultResolver = getDefaultResolver();\n  ArrayPrototypeForEach(resolverKeys\x2C (key) => {\n    target[key] = FunctionPrototypeBind(source[key]\x2C defaultResolver);\n  });\n}\n\nfunction validateHints(hints) {\n  const { AI_ADDRCONFIG\x2C AI_ALL\x2C AI_V4MAPPED } = lazyBinding();\n  if ((hints & ~(AI_ADDRCONFIG | AI_ALL | AI_V4MAPPED)) !== 0) {\n    throw new ERR_INVALID_ARG_VALUE('hints'\x2C hints);\n  }\n}\n\nlet invalidHostnameWarningEmitted = false;\nfunction emitInvalidHostnameWarning(hostname) {\n  if (!invalidHostnameWarningEmitted) {\n    process.emitWarning(\n      `The provided hostname "${hostname}" is not a valid ` +\n      'hostname\x2C and is supported in the dns module solely for compatibility.'\x2C\n      'DeprecationWarning'\x2C\n      'DEP0118'\n    );\n    invalidHostnameWarningEmitted = true;\n  }\n}\n\nfunction getDefaultVerbatim() {\n  return dnsOrder !== 'ipv4first';\n}\n\nfunction setDefaultResultOrder(value) {\n  validateOneOf(value\x2C 'dnsOrder'\x2C ['verbatim'\x2C 'ipv4first']);\n  dnsOrder = value;\n}\n\nfunction createResolverClass(resolver) {\n  const resolveMap = { __proto__: null };\n\n  class Resolver extends ResolverBase {}\n\n  Resolver.prototype.resolveAny = resolveMap.ANY = resolver('queryAny');\n  Resolver.prototype.resolve4 = resolveMap.A = resolver('queryA');\n  Resolver.prototype.resolve6 = resolveMap.AAAA = resolver('queryAaaa');\n  Resolver.prototype.resolveCaa = resolveMap.CAA = resolver('queryCaa');\n  Resolver.prototype.resolveCname = resolveMap.CNAME = resolver('queryCname');\n  Resolver.prototype.resolveMx = resolveMap.MX = resolver('queryMx');\n  Resolver.prototype.resolveNs = resolveMap.NS = resolver('queryNs');\n  Resolver.prototype.resolveTxt = resolveMap.TXT = resolver('queryTxt');\n  Resolver.prototype.resolveSrv = resolveMap.SRV = resolver('querySrv');\n  Resolver.prototype.resolvePtr = resolveMap.PTR = resolver('queryPtr');\n  Resolver.prototype.resolveNaptr = resolveMap.NAPTR = resolver('queryNaptr');\n  Resolver.prototype.resolveSoa = resolveMap.SOA = resolver('querySoa');\n  Resolver.prototype.reverse = resolver('getHostByAddr');\n\n  return {\n    resolveMap\x2C\n    Resolver\n  };\n}\n\n// ERROR CODES\nconst errorCodes = {\n  NODATA: 'ENODATA'\x2C\n  FORMERR: 'EFORMERR'\x2C\n  SERVFAIL: 'ESERVFAIL'\x2C\n  NOTFOUND: 'ENOTFOUND'\x2C\n  NOTIMP: 'ENOTIMP'\x2C\n  REFUSED: 'EREFUSED'\x2C\n  BADQUERY: 'EBADQUERY'\x2C\n  BADNAME: 'EBADNAME'\x2C\n  BADFAMILY: 'EBADFAMILY'\x2C\n  BADRESP: 'EBADRESP'\x2C\n  CONNREFUSED: 'ECONNREFUSED'\x2C\n  TIMEOUT: 'ETIMEOUT'\x2C\n  EOF: 'EOF'\x2C\n  FILE: 'EFILE'\x2C\n  NOMEM: 'ENOMEM'\x2C\n  DESTRUCTION: 'EDESTRUCTION'\x2C\n  BADSTR: 'EBADSTR'\x2C\n  BADFLAGS: 'EBADFLAGS'\x2C\n  NONAME: 'ENONAME'\x2C\n  BADHINTS: 'EBADHINTS'\x2C\n  NOTINITIALIZED: 'ENOTINITIALIZED'\x2C\n  LOADIPHLPAPI: 'ELOADIPHLPAPI'\x2C\n  ADDRGETNETWORKPARAMS: 'EADDRGETNETWORKPARAMS'\x2C\n  CANCELLED: 'ECANCELLED'\x2C\n};\n\nmodule.exports = {\n  bindDefaultResolver\x2C\n  getDefaultResolver\x2C\n  setDefaultResolver\x2C\n  validateHints\x2C\n  validateTimeout\x2C\n  validateTries\x2C\n  emitInvalidHostnameWarning\x2C\n  getDefaultVerbatim\x2C\n  setDefaultResultOrder\x2C\n  errorCodes\x2C\n  createResolverClass\x2C\n  initializeDns\n};\n
code-source-info,0x3f1a4fb87106,69,5449,5813,C0O5477C8O5477C13O5517C15O5542C28O5551C36O5652C38O5661C44O5684C49O5689C54O5717C55O5724C56O5732C66O5732C71O5812,,
code-creation,JS,10,49250,0x3f1a4fb87d76,21,assert node:internal/assert:11:16,0xd5ac0c595a0,~
script-source,26,node:internal/assert,'use strict';\n\nlet error;\nfunction lazyError() {\n  if (!error) {\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\n  }\n  return error;\n}\n\nfunction assert(value\x2C message) {\n  if (!value) {\n    const ERR_INTERNAL_ASSERTION = lazyError();\n    throw new ERR_INTERNAL_ASSERTION(message);\n  }\n}\n\nfunction fail(message) {\n  const ERR_INTERNAL_ASSERTION = lazyError();\n  throw new ERR_INTERNAL_ASSERTION(message);\n}\n\nassert.fail = fail;\n\nmodule.exports = assert;\n
code-source-info,0x3f1a4fb87d76,26,172,307,C0O193C4O242C7O242C11O259C13O265C18O259C20O306,,
code-creation,JS,10,49333,0x3f1a4fb8832e,447,readPolicyFromDisk node:internal/process/pre_execution:516:28,0x5d9fd2e6cb8,~
code-source-info,0x3f1a4fb8832e,71,15716,17512,C0O15750C10O15750C15O15793C17O15823C21O15831C35O15831C41O15956C49O15956C55O15933C60O15948C65O16075C67O16092C75O16096C81O16111C87O16112C94O16152C100O16184C108O16166C116O16241C120O16263C126O16263C132O16241C138O16277C149O16293C153O16307C161O16321C167O16379C175O16379C180O16413C190O16413C197O16488C207O16488C212O16530C214O16583C222O16583C227O16661C235O16661C241O16629C246O16641C251O16710C257O16710C263O16760C269O16760C275O16819C277O16845C279O16869C283O16850C288O16959C290O16975C295O16910C300O16938C305O17001C311O17037C317O17037C322O17078C328O17078C334O17107C340O17127C344O17114C349O17147C356O17194C358O17223C360O17264C366O17286C376O17286C383O17264C389O16878C394O16832C398O17321C402O17348C416O17354C421O17348C422O17437C430O17465C434O17495C444O17506C446O17511,,
code-creation,JS,10,49375,0x3f1a4fb88756,49,setupStacktracePrinterOnSigint node:internal/process/pre_execution:339:40,0x5d9fd2e68f8,~
code-source-info,0x3f1a4fb88756,71,10269,10455,C0O10276C8O10281C14O10321C15O10328C16O10362C22O10362C27O10343C32O10412C38O10445C43O10445C48O10454,,
code-creation,JS,10,49375,0x3f1a4fb888f6,35,initializeReportSignalHandlers node:internal/process/pre_execution:369:40,0x5d9fd2e6a10,~
code-source-info,0x3f1a4fb888f6,71,11041,11190,C0O11048C8O11052C14O11125C20O11125C25O11104C30O11165C34O11189,,
code-creation,JS,10,49417,0x3f1a4fb88b9e,136,initializeHeapSnapshotSignalHandlers node:internal/process/pre_execution:376:46,0x5d9fd2e6a60,~
code-source-info,0x3f1a4fb88b9e,71,11237,11773,C0O11237C17O11259C27O11259C31O11259C33O11303C37O11320C38O11327C39O11331C47O11331C52O11361C60O11362C65O11422C73O11422C78O11400C84O11504C89O11512C100O11512C106O11640C113O11644C118O11672C130O11672C135O11772,,
code-creation,JS,10,49458,0x3f1a4fb88ec6,138,setupChildProcessIpcChannel node:internal/process/pre_execution:488:37,0x5d9fd2e6c18,~
code-source-info,0x3f1a4fb88ec6,71,14886,15415,C0O14893C3O14905C8O14909C14O14947C20O14947C25O14991C33O15014C38O15018C46O14991C52O15044C53O15054C57O15044C61O15135C64O15150C73O15208C76O15216C81O15220C90O15267C93O15282C102O15324C108O15324C113O15348C118O15349C124O15388C127O15403C132O15388C137O15414,,
code-creation,JS,10,49458,0x3f1a4fb890e6,63,initializeClusterIPC node:internal/process/pre_execution:507:30,0x5d9fd2e6c68,~
code-source-info,0x3f1a4fb890e6,71,15446,15687,C0O15453C3O15465C10O15469C18O15484C23O15488C29O15526C35O15526C40O15558C45O15558C49O15647C52O15662C62O15686,,
code-creation,JS,10,49500,0x3f1a4fb8923e,54,runDeserializeCallbacks node:internal/v8/startup_snapshot:30:33,0x3b5f1dad1f90,~
code-source-info,0x3f1a4fb8923e,53,736,877,C0O778C5O771C11O778C16O822C21O843C26O843C33O800C40O813C44O856C48O743C53O876,,
code-creation,JS,10,49500,0x3f1a4fb89396,52,setupUserModules node:internal/process/pre_execution:124:26,0x5d9fd2e65a0,~
code-source-info,0x3f1a4fb89396,71,3554,3818,C0O3561C3O3561C6O3586C9O3586C12O3629C18O3629C23O3671C28O3689C34O3671C38O3719C41O3719C44O3787C47O3787C51O3817,,
code-creation,JS,10,49500,0x3f1a4fb894ce,21,initializeCJSLoader node:internal/process/pre_execution:573:29,0x5d9fd2e6d58,~
code-source-info,0x3f1a4fb894ce,71,17775,17868,C0O17808C6O17808C11O17790C16O17850C20O17867,,
code-creation,JS,10,49625,0x3f1a4fb89a66,539,initializeCJS node:internal/modules/cjs/loader:284:23,0x5d9fd2ce0a8,~
script-source,59,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypePushApply\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  ArrayPrototypeUnshiftApply\x2C\n  ArrayPrototypeFlatMap\x2C\n  Boolean\x2C\n  Error\x2C\n  JSONParse\x2C\n  ObjectDefineProperty\x2C\n  ObjectFreeze\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectKeys\x2C\n  ObjectPrototype\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  Proxy\x2C\n  ReflectApply\x2C\n  ReflectSet\x2C\n  RegExpPrototypeExec\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  SafeWeakMap\x2C\n  String\x2C\n  StringPrototypeCharAt\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeLastIndexOf\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeRepeat\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\n\n// Map used to store CJS parsing data.\nconst cjsParseCache = new SafeWeakMap();\n\n// Set first due to cycle with ESM loader functions.\nmodule.exports = {\n  wrapSafe\x2C Module\x2C toRealPath\x2C readPackageScope\x2C cjsParseCache\x2C\n  get hasLoadedAnyUserCJSModule() { return hasLoadedAnyUserCJSModule; }\x2C\n  initializeCJS\x2C\n};\n\nconst { BuiltinModule } = require('internal/bootstrap/loaders');\nconst {\n  maybeCacheSourceMap\x2C\n} = require('internal/source_map/source_map_cache');\nconst { pathToFileURL\x2C fileURLToPath\x2C isURLInstance } = require('internal/url');\nconst {\n  deprecate\x2C\n  emitExperimentalWarning\x2C\n  kEmptyObject\x2C\n  filterOwnProperties\x2C\n  setOwnProperty\x2C\n  getLazy\x2C\n} = require('internal/util');\nconst { internalCompileFunction } = require('internal/vm');\nconst assert = require('internal/assert');\nconst fs = require('fs');\nconst internalFS = require('internal/fs/utils');\nconst path = require('path');\nconst { sep } = path;\nconst { internalModuleStat } = internalBinding('fs');\nconst { safeGetenv } = internalBinding('credentials');\nconst {\n  getCjsConditions\x2C\n  initializeCjsConditions\x2C\n  hasEsmSyntax\x2C\n  loadBuiltinModule\x2C\n  makeRequireFunction\x2C\n  normalizeReferrerURL\x2C\n  stripBOM\x2C\n} = require('internal/modules/helpers');\nconst packageJsonReader = require('internal/modules/package_json_reader');\nconst { getOptionValue\x2C getEmbedderOptions } = require('internal/options');\nconst policy = getLazy(\n  () => (getOptionValue('--experimental-policy') ? require('internal/process/policy') : null)\n);\nconst shouldReportRequiredModules = getLazy(() => process.env.WATCH_REPORT_DEPENDENCIES);\n\nconst getCascadedLoader = getLazy(\n  () => require('internal/process/esm_loader').esmLoader\n);\n\n// Whether any user-provided CJS modules had been loaded (executed).\n// Used for internal assertions.\nlet hasLoadedAnyUserCJSModule = false;\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_MODULE_SPECIFIER\x2C\n    ERR_REQUIRE_ESM\x2C\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\n  }\x2C\n  setArrowMessage\x2C\n} = require('internal/errors');\nconst { validateString } = require('internal/validators');\n\nconst {\n  CHAR_BACKWARD_SLASH\x2C\n  CHAR_COLON\x2C\n  CHAR_DOT\x2C\n  CHAR_FORWARD_SLASH\x2C\n} = require('internal/constants');\n\nconst {\n  isProxy\n} = require('internal/util/types');\n\nconst { kEvaluated } = internalBinding('module_wrap');\nconst isWindows = process.platform === 'win32';\n\nconst relativeResolveCache = { __proto__: null };\n\nlet requireDepth = 0;\nlet statCache = null;\nlet isPreloading = false;\n\nfunction stat(filename) {\n  filename = path.toNamespacedPath(filename);\n  if (statCache !== null) {\n    const result = statCache.get(filename);\n    if (result !== undefined) return result;\n  }\n  const result = internalModuleStat(filename);\n  if (statCache !== null && result >= 0) {\n    // Only set cache when `internalModuleStat(filename)` succeeds.\n    statCache.set(filename\x2C result);\n  }\n  return result;\n}\n\nlet _stat = stat;\nObjectDefineProperty(Module\x2C '_stat'\x2C {\n  __proto__: null\x2C\n  get() { return _stat; }\x2C\n  set(stat) {\n    emitExperimentalWarning('Module._stat');\n    _stat = stat;\n    return true;\n  }\x2C\n  configurable: true\x2C\n});\n\nfunction updateChildren(parent\x2C child\x2C scan) {\n  const children = parent?.children;\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child)))\n    ArrayPrototypePush(children\x2C child);\n}\n\nfunction reportModuleToWatchMode(filename) {\n  if (shouldReportRequiredModules() && process.send) {\n    process.send({ 'watch:require': [filename] });\n  }\n}\n\nfunction reportModuleNotFoundToWatchMode(basePath\x2C extensions) {\n  if (shouldReportRequiredModules() && process.send) {\n    process.send({ 'watch:require': ArrayPrototypeMap(extensions\x2C (ext) => path.resolve(`${basePath}${ext}`)) });\n  }\n}\n\nconst moduleParentCache = new SafeWeakMap();\nfunction Module(id = ''\x2C parent) {\n  this.id = id;\n  this.path = path.dirname(id);\n  setOwnProperty(this\x2C 'exports'\x2C {});\n  moduleParentCache.set(this\x2C parent);\n  updateChildren(parent\x2C this\x2C false);\n  this.filename = null;\n  this.loaded = false;\n  this.children = [];\n}\n\nModule._cache = { __proto__: null };\nModule._pathCache = { __proto__: null };\nModule._extensions = { __proto__: null };\nlet modulePaths = [];\nModule.globalPaths = [];\n\nlet patched = false;\n\n// eslint-disable-next-line func-style\nlet wrap = function(script) {\n  return Module.wrapper[0] + script + Module.wrapper[1];\n};\n\nconst wrapper = [\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\n  '\\n});'\x2C\n];\n\nlet wrapperProxy = new Proxy(wrapper\x2C {\n  __proto__: null\x2C\n\n  set(target\x2C property\x2C value\x2C receiver) {\n    patched = true;\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\n  }\x2C\n\n  defineProperty(target\x2C property\x2C descriptor) {\n    patched = true;\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\n  }\n});\n\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\n  __proto__: null\x2C\n  get() {\n    return wrap;\n  }\x2C\n\n  set(value) {\n    patched = true;\n    wrap = value;\n  }\n});\n\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\n  __proto__: null\x2C\n  get() {\n    return wrapperProxy;\n  }\x2C\n\n  set(value) {\n    patched = true;\n    wrapperProxy = value;\n  }\n});\n\nconst isPreloadingDesc = { get() { return isPreloading; } };\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\nObjectDefineProperty(BuiltinModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\n\nfunction getModuleParent() {\n  return moduleParentCache.get(this);\n}\n\nfunction setModuleParent(value) {\n  moduleParentCache.set(this\x2C value);\n}\n\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\n  debug = fn;\n});\n\nconst builtinModules = [];\n// This function is called during pre-execution\x2C before any user code is run.\nfunction initializeCJS() {\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\n  ObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\n    __proto__: null\x2C\n    get: pendingDeprecation ? deprecate(\n      getModuleParent\x2C\n      'module.parent is deprecated due to accuracy issues. Please use ' +\n        'require.main to find program entry point instead.'\x2C\n      'DEP0144'\n    ) : getModuleParent\x2C\n    set: pendingDeprecation ? deprecate(\n      setModuleParent\x2C\n      'module.parent is deprecated due to accuracy issues. Please use ' +\n        'require.main to find program entry point instead.'\x2C\n      'DEP0144'\n    ) : setModuleParent\x2C\n  });\n  Module._debug = deprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\n\n  for (const { 0: id\x2C 1: mod } of BuiltinModule.map) {\n    if (mod.canBeRequiredByUsers &&\n      BuiltinModule.canBeRequiredWithoutScheme(id)) {\n      ArrayPrototypePush(builtinModules\x2C id);\n    }\n  }\n\n  const allBuiltins = new SafeSet(\n    ArrayPrototypeFlatMap(builtinModules\x2C (bm) => [bm\x2C `node:${bm}`])\n  );\n  BuiltinModule.getSchemeOnlyModuleNames().forEach((builtin) => allBuiltins.add(`node:${builtin}`));\n  ObjectFreeze(builtinModules);\n  Module.builtinModules = builtinModules;\n\n  Module.isBuiltin = function isBuiltin(moduleName) {\n    return allBuiltins.has(moduleName);\n  };\n\n  initializeCjsConditions();\n\n  if (!getEmbedderOptions().noGlobalSearchPaths) {\n    Module._initPaths();\n  }\n\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\n  Module.runMain =\n    require('internal/modules/run_main').executeUserEntryPoint;\n}\n\n// Given a module name\x2C and a list of paths to test\x2C returns the first\n// matching file in the following precedence.\n//\n// require("a.<ext>")\n//   -> a.<ext>\n//\n// require("a")\n//   -> a\n//   -> a.<ext>\n//   -> a/index.<ext>\n\nconst packageJsonCache = new SafeMap();\n\nfunction readPackage(requestPath) {\n  const jsonPath = path.resolve(requestPath\x2C 'package.json');\n\n  const existing = packageJsonCache.get(jsonPath);\n  if (existing !== undefined) return existing;\n\n  const result = packageJsonReader.read(jsonPath);\n  const json = result.containsKeys === false ? '{}' : result.string;\n  if (json === undefined) {\n    packageJsonCache.set(jsonPath\x2C false);\n    return false;\n  }\n\n  try {\n    const filtered = filterOwnProperties(JSONParse(json)\x2C [\n      'name'\x2C\n      'main'\x2C\n      'exports'\x2C\n      'imports'\x2C\n      'type'\x2C\n    ]);\n    packageJsonCache.set(jsonPath\x2C filtered);\n    return filtered;\n  } catch (e) {\n    e.path = jsonPath;\n    e.message = 'Error parsing ' + jsonPath + ': ' + e.message;\n    throw e;\n  }\n}\n\nlet _readPackage = readPackage;\nObjectDefineProperty(Module\x2C '_readPackage'\x2C {\n  __proto__: null\x2C\n  get() { return _readPackage; }\x2C\n  set(readPackage) {\n    emitExperimentalWarning('Module._readPackage');\n    _readPackage = readPackage;\n    return true;\n  }\x2C\n  configurable: true\x2C\n});\n\nfunction readPackageScope(checkPath) {\n  const rootSeparatorIndex = StringPrototypeIndexOf(checkPath\x2C sep);\n  let separatorIndex;\n  do {\n    separatorIndex = StringPrototypeLastIndexOf(checkPath\x2C sep);\n    checkPath = StringPrototypeSlice(checkPath\x2C 0\x2C separatorIndex);\n    if (StringPrototypeEndsWith(checkPath\x2C sep + 'node_modules'))\n      return false;\n    const pjson = _readPackage(checkPath + sep);\n    if (pjson) return {\n      data: pjson\x2C\n      path: checkPath\x2C\n    };\n  } while (separatorIndex > rootSeparatorIndex);\n  return false;\n}\n\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\n  const pkg = _readPackage(requestPath)?.main;\n\n  if (!pkg) {\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\n  }\n\n  const filename = path.resolve(requestPath\x2C pkg);\n  let actual = tryFile(filename\x2C isMain) ||\n    tryExtensions(filename\x2C exts\x2C isMain) ||\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\n  if (actual === false) {\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\n    if (!actual) {\n      // eslint-disable-next-line no-restricted-syntax\n      const err = new Error(\n        `Cannot find module '${filename}'. ` +\n        'Please verify that the package.json has a valid "main" entry'\n      );\n      err.code = 'MODULE_NOT_FOUND';\n      err.path = path.resolve(requestPath\x2C 'package.json');\n      err.requestPath = originalPath;\n      // TODO(BridgeAR): Add the requireStack as well.\n      throw err;\n    } else {\n      const jsonPath = path.resolve(requestPath\x2C 'package.json');\n      process.emitWarning(\n        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +\n          'Please either fix that or report it to the module author'\x2C\n        'DeprecationWarning'\x2C\n        'DEP0128'\n      );\n    }\n  }\n  return actual;\n}\n\n// In order to minimize unnecessary lstat() calls\x2C\n// this cache is a list of known-real paths.\n// Set to an empty Map to reset.\nconst realpathCache = new SafeMap();\n\n// Check if the file exists and is not a directory\n// if using --preserve-symlinks and isMain is false\x2C\n// keep symlinks intact\x2C otherwise resolve to the\n// absolute realpath.\nfunction tryFile(requestPath\x2C isMain) {\n  const rc = _stat(requestPath);\n  if (rc !== 0) return;\n  if (getOptionValue('--preserve-symlinks') && !isMain) {\n    return path.resolve(requestPath);\n  }\n  return toRealPath(requestPath);\n}\n\nfunction toRealPath(requestPath) {\n  return fs.realpathSync(requestPath\x2C {\n    [internalFS.realpathCacheKey]: realpathCache\n  });\n}\n\n// Given a path\x2C check if the file exists with any of the set extensions\nfunction tryExtensions(p\x2C exts\x2C isMain) {\n  for (let i = 0; i < exts.length; i++) {\n    const filename = tryFile(p + exts[i]\x2C isMain);\n\n    if (filename) {\n      return filename;\n    }\n  }\n  return false;\n}\n\n// Find the longest (possibly multi-dot) extension registered in\n// Module._extensions\nfunction findLongestRegisteredExtension(filename) {\n  const name = path.basename(filename);\n  let currentExtension;\n  let index;\n  let startIndex = 0;\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\n    startIndex = index + 1;\n    if (index === 0) continue; // Skip dotfiles like .gitignore\n    currentExtension = StringPrototypeSlice(name\x2C index);\n    if (Module._extensions[currentExtension]) return currentExtension;\n  }\n  return '.js';\n}\n\nfunction trySelfParentPath(parent) {\n  if (!parent) return false;\n\n  if (parent.filename) {\n    return parent.filename;\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\n    try {\n      return process.cwd() + path.sep;\n    } catch {\n      return false;\n    }\n  }\n}\n\nfunction trySelf(parentPath\x2C request) {\n  if (!parentPath) return false;\n\n  const { data: pkg\x2C path: pkgPath } = readPackageScope(parentPath) || {};\n  if (!pkg || pkg.exports === undefined) return false;\n  if (typeof pkg.name !== 'string') return false;\n\n  let expansion;\n  if (request === pkg.name) {\n    expansion = '.';\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.name}/`)) {\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.name.length);\n  } else {\n    return false;\n  }\n\n  try {\n    const { packageExportsResolve } = require('internal/modules/esm/resolve');\n    return finalizeEsmResolution(packageExportsResolve(\n      pathToFileURL(pkgPath + '/package.json')\x2C expansion\x2C pkg\x2C\n      pathToFileURL(parentPath)\x2C getCjsConditions())\x2C parentPath\x2C pkgPath);\n  } catch (e) {\n    if (e.code === 'ERR_MODULE_NOT_FOUND')\n      throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\n    throw e;\n  }\n}\n\n// This only applies to requests of a specific form:\n// 1. name/.*\n// 2. @scope/name/.*\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\nfunction resolveExports(nmPath\x2C request) {\n  // The implementation's behavior is meant to mirror resolution in ESM.\n  const { 1: name\x2C 2: expansion = '' } =\n    RegExpPrototypeExec(EXPORTS_PATTERN\x2C request) || kEmptyObject;\n  if (!name)\n    return;\n  const pkgPath = path.resolve(nmPath\x2C name);\n  const pkg = _readPackage(pkgPath);\n  if (pkg?.exports != null) {\n    try {\n      const { packageExportsResolve } = require('internal/modules/esm/resolve');\n      return finalizeEsmResolution(packageExportsResolve(\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\n        getCjsConditions())\x2C null\x2C pkgPath);\n    } catch (e) {\n      if (e.code === 'ERR_MODULE_NOT_FOUND')\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\n      throw e;\n    }\n  }\n}\n\n/**\n * @param {string} request a relative or absolute file path\n * @param {Array<string>} paths file system directories to search as file paths\n * @param {boolean} isMain if the request is the main app entry point\n * @returns {string | false}\n */\nModule._findPath = function(request\x2C paths\x2C isMain) {\n  const absoluteRequest = path.isAbsolute(request);\n  if (absoluteRequest) {\n    paths = [''];\n  } else if (!paths || paths.length === 0) {\n    return false;\n  }\n\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\n  const entry = Module._pathCache[cacheKey];\n  if (entry)\n    return entry;\n\n  let exts;\n  const trailingSlash = request.length > 0 &&\n    (StringPrototypeCharCodeAt(request\x2C request.length - 1) === CHAR_FORWARD_SLASH || (\n      StringPrototypeCharCodeAt(request\x2C request.length - 1) === CHAR_DOT &&\n      (\n        request.length === 1 ||\n        StringPrototypeCharCodeAt(request\x2C request.length - 2) === CHAR_FORWARD_SLASH ||\n        (StringPrototypeCharCodeAt(request\x2C request.length - 2) === CHAR_DOT && (\n          request.length === 2 ||\n          StringPrototypeCharCodeAt(request\x2C request.length - 3) === CHAR_FORWARD_SLASH\n        ))\n      )\n    ));\n\n  const isRelative = StringPrototypeCharCodeAt(request\x2C 0) === CHAR_DOT &&\n    (\n      request.length === 1 ||\n      StringPrototypeCharCodeAt(request\x2C 1) === CHAR_FORWARD_SLASH ||\n      (isWindows && StringPrototypeCharCodeAt(request\x2C 1) === CHAR_BACKWARD_SLASH) ||\n      (StringPrototypeCharCodeAt(request\x2C 1) === CHAR_DOT && ((\n        request.length === 2 ||\n        StringPrototypeCharCodeAt(request\x2C 2) === CHAR_FORWARD_SLASH) ||\n        (isWindows && StringPrototypeCharCodeAt(request\x2C 2) === CHAR_BACKWARD_SLASH)))\n    );\n  let insidePath = true;\n  if (isRelative) {\n    const normalizedRequest = path.normalize(request);\n    if (StringPrototypeStartsWith(normalizedRequest\x2C '..')) {\n      insidePath = false;\n    }\n  }\n\n  // For each path\n  for (let i = 0; i < paths.length; i++) {\n    // Don't search further if path doesn't exist and request is inside the path\n    const curPath = paths[i];\n    if (insidePath && curPath && _stat(curPath) < 1) continue;\n\n    if (!absoluteRequest) {\n      const exportsResolved = resolveExports(curPath\x2C request);\n      if (exportsResolved)\n        return exportsResolved;\n    }\n\n    const basePath = path.resolve(curPath\x2C request);\n    let filename;\n\n    const rc = _stat(basePath);\n    if (!trailingSlash) {\n      if (rc === 0) {  // File.\n        if (!isMain) {\n          if (getOptionValue('--preserve-symlinks')) {\n            filename = path.resolve(basePath);\n          } else {\n            filename = toRealPath(basePath);\n          }\n        } else if (getOptionValue('--preserve-symlinks-main')) {\n          // For the main module\x2C we use the --preserve-symlinks-main flag instead\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\n          // historically has not applied to the main module.  Most likely this\n          // was intended to keep .bin/ binaries working\x2C as following those\n          // symlinks is usually required for the imports in the corresponding\n          // files to resolve; that said\x2C in some use cases following symlinks\n          // causes bigger problems which is why the --preserve-symlinks-main option\n          // is needed.\n          filename = path.resolve(basePath);\n        } else {\n          filename = toRealPath(basePath);\n        }\n      }\n\n      if (!filename) {\n        // Try it with each of the extensions\n        if (exts === undefined)\n          exts = ObjectKeys(Module._extensions);\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\n      }\n    }\n\n    if (!filename && rc === 1) {  // Directory.\n      // try it with each of the extensions at "index"\n      if (exts === undefined)\n        exts = ObjectKeys(Module._extensions);\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\n    }\n\n    if (filename) {\n      Module._pathCache[cacheKey] = filename;\n      return filename;\n    }\n\n    const extensions = [''];\n    if (exts !== undefined) {\n      ArrayPrototypePushApply(extensions\x2C exts);\n    }\n    reportModuleNotFoundToWatchMode(basePath\x2C extensions);\n  }\n\n  return false;\n};\n\n// 'node_modules' character codes reversed\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\nconst nmLen = nmChars.length;\nif (isWindows) {\n  // 'from' is the __dirname of the module.\n  Module._nodeModulePaths = function(from) {\n    // Guarantee that 'from' is absolute.\n    from = path.resolve(from);\n\n    // note: this approach *only* works when the path is guaranteed\n    // to be absolute.  Doing a fully-edge-case-correct path.split\n    // that works on both Windows and Posix is non-trivial.\n\n    // return root node_modules when path is 'D:\\\\'.\n    // path.resolve will make sure from.length >=3 in Windows.\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\n          CHAR_BACKWARD_SLASH &&\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON)\n      return [from + 'node_modules'];\n\n    const paths = [];\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\n      const code = StringPrototypeCharCodeAt(from\x2C i);\n      // The path segment separator check ('\\' and '/') was used to get\n      // node_modules path for every path segment.\n      // Use colon as an extra condition since we can get node_modules\n      // path for drive root like 'C:\\node_modules' and don't need to\n      // parse drive name.\n      if (code === CHAR_BACKWARD_SLASH ||\n          code === CHAR_FORWARD_SLASH ||\n          code === CHAR_COLON) {\n        if (p !== nmLen)\n          ArrayPrototypePush(\n            paths\x2C\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\n          );\n        last = i;\n        p = 0;\n      } else if (p !== -1) {\n        if (nmChars[p] === code) {\n          ++p;\n        } else {\n          p = -1;\n        }\n      }\n    }\n\n    return paths;\n  };\n} else { // posix\n  // 'from' is the __dirname of the module.\n  Module._nodeModulePaths = function(from) {\n    // Guarantee that 'from' is absolute.\n    from = path.resolve(from);\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\n    if (from === '/')\n      return ['/node_modules'];\n\n    // note: this approach *only* works when the path is guaranteed\n    // to be absolute.  Doing a fully-edge-case-correct path.split\n    // that works on both Windows and Posix is non-trivial.\n    const paths = [];\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\n      const code = StringPrototypeCharCodeAt(from\x2C i);\n      if (code === CHAR_FORWARD_SLASH) {\n        if (p !== nmLen)\n          ArrayPrototypePush(\n            paths\x2C\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\n          );\n        last = i;\n        p = 0;\n      } else if (p !== -1) {\n        if (nmChars[p] === code) {\n          ++p;\n        } else {\n          p = -1;\n        }\n      }\n    }\n\n    // Append /node_modules to handle root paths.\n    ArrayPrototypePush(paths\x2C '/node_modules');\n\n    return paths;\n  };\n}\n\nModule._resolveLookupPaths = function(request\x2C parent) {\n  if ((\n    StringPrototypeStartsWith(request\x2C 'node:') &&\n    BuiltinModule.canBeRequiredByUsers(StringPrototypeSlice(request\x2C 5))\n  ) || (\n    BuiltinModule.canBeRequiredByUsers(request) &&\n    BuiltinModule.canBeRequiredWithoutScheme(request)\n  )) {\n    debug('looking for %j in []'\x2C request);\n    return null;\n  }\n\n  // Check for node modules paths.\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\n      (request.length > 1 &&\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\n\n    let paths;\n    if (parent?.paths?.length) {\n      paths = ArrayPrototypeSlice(modulePaths);\n      ArrayPrototypeUnshiftApply(paths\x2C parent.paths);\n    } else {\n      paths = modulePaths;\n    }\n\n    debug('looking for %j in %j'\x2C request\x2C paths);\n    return paths.length > 0 ? paths : null;\n  }\n\n  // In REPL\x2C parent.filename is null.\n  if (!parent || !parent.id || !parent.filename) {\n    // Make require('./path/to/foo') work - normally the path is taken\n    // from realpath(__filename) but in REPL there is no filename\n    const mainPaths = ['.'];\n\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\n    return mainPaths;\n  }\n\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\n\n  const parentDir = [path.dirname(parent.filename)];\n  debug('looking for %j'\x2C parentDir);\n  return parentDir;\n};\n\nfunction emitCircularRequireWarning(prop) {\n  process.emitWarning(\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\n    'inside circular dependency'\n  );\n}\n\n// A Proxy that can be used as the prototype of a module.exports object and\n// warns when non-existent properties are accessed.\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\n  __proto__: null\x2C\n\n  get(target\x2C prop) {\n    // Allow __esModule access in any case because it is used in the output\n    // of transpiled code to determine whether something comes from an\n    // ES module\x2C and is not used as a regular key of `module.exports`.\n    if (prop in target || prop === '__esModule') return target[prop];\n    emitCircularRequireWarning(prop);\n    return undefined;\n  }\x2C\n\n  getOwnPropertyDescriptor(target\x2C prop) {\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule')\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\n    emitCircularRequireWarning(prop);\n    return undefined;\n  }\n});\n\nfunction getExportsForCircularRequire(module) {\n  if (module.exports &&\n      !isProxy(module.exports) &&\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\n      // Exclude transpiled ES6 modules / TypeScript code because those may\n      // employ unusual patterns for accessing 'module.exports'. That should\n      // be okay because ES6 modules have a different approach to circular\n      // dependencies anyway.\n      !module.exports.__esModule) {\n    // This is later unset once the module is done loading.\n    ObjectSetPrototypeOf(\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\n  }\n\n  return module.exports;\n}\n\n// Check the cache for the requested file.\n// 1. If a module already exists in the cache: return its exports object.\n// 2. If the module is native: call\n//    `BuiltinModule.prototype.compileForPublicLoader()` and return the exports.\n// 3. Otherwise\x2C create a new module for the file and save it to the cache.\n//    Then have it load  the file contents before returning its exports\n//    object.\nModule._load = function(request\x2C parent\x2C isMain) {\n  let relResolveCacheIdentifier;\n  if (parent) {\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\n    // caching is required to allow cache invalidation without changing the old\n    // cache key names.\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\n    reportModuleToWatchMode(filename);\n    if (filename !== undefined) {\n      const cachedModule = Module._cache[filename];\n      if (cachedModule !== undefined) {\n        updateChildren(parent\x2C cachedModule\x2C true);\n        if (!cachedModule.loaded)\n          return getExportsForCircularRequire(cachedModule);\n        return cachedModule.exports;\n      }\n      delete relativeResolveCache[relResolveCacheIdentifier];\n    }\n  }\n\n  if (StringPrototypeStartsWith(request\x2C 'node:')) {\n    // Slice 'node:' prefix\n    const id = StringPrototypeSlice(request\x2C 5);\n\n    const module = loadBuiltinModule(id\x2C request);\n    if (!module?.canBeRequiredByUsers) {\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(request);\n    }\n\n    return module.exports;\n  }\n\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\n  const cachedModule = Module._cache[filename];\n  if (cachedModule !== undefined) {\n    updateChildren(parent\x2C cachedModule\x2C true);\n    if (!cachedModule.loaded) {\n      const parseCachedModule = cjsParseCache.get(cachedModule);\n      if (!parseCachedModule || parseCachedModule.loaded)\n        return getExportsForCircularRequire(cachedModule);\n      parseCachedModule.loaded = true;\n    } else {\n      return cachedModule.exports;\n    }\n  }\n\n  const mod = loadBuiltinModule(filename\x2C request);\n  if (mod?.canBeRequiredByUsers &&\n      BuiltinModule.canBeRequiredWithoutScheme(filename)) {\n    return mod.exports;\n  }\n\n  // Don't call updateChildren()\x2C Module constructor already does.\n  const module = cachedModule || new Module(filename\x2C parent);\n\n  if (isMain) {\n    process.mainModule = module;\n    module.id = '.';\n  }\n\n  reportModuleToWatchMode(filename);\n\n  Module._cache[filename] = module;\n  if (parent !== undefined) {\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\n  }\n\n  let threw = true;\n  try {\n    module.load(filename);\n    threw = false;\n  } finally {\n    if (threw) {\n      delete Module._cache[filename];\n      if (parent !== undefined) {\n        delete relativeResolveCache[relResolveCacheIdentifier];\n        const children = parent?.children;\n        if (ArrayIsArray(children)) {\n          const index = ArrayPrototypeIndexOf(children\x2C module);\n          if (index !== -1) {\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\n          }\n        }\n      }\n    } else if (module.exports &&\n               !isProxy(module.exports) &&\n               ObjectGetPrototypeOf(module.exports) ===\n                 CircularRequirePrototypeWarningProxy) {\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\n    }\n  }\n\n  return module.exports;\n};\n\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\n  if (\n    (\n      StringPrototypeStartsWith(request\x2C 'node:') &&\n      BuiltinModule.canBeRequiredByUsers(StringPrototypeSlice(request\x2C 5))\n    ) || (\n      BuiltinModule.canBeRequiredByUsers(request) &&\n      BuiltinModule.canBeRequiredWithoutScheme(request)\n    )\n  ) {\n    return request;\n  }\n\n  let paths;\n\n  if (typeof options === 'object' && options !== null) {\n    if (ArrayIsArray(options.paths)) {\n      const isRelative = StringPrototypeStartsWith(request\x2C './') ||\n          StringPrototypeStartsWith(request\x2C '../') ||\n          ((isWindows && StringPrototypeStartsWith(request\x2C '.\\\\')) ||\n          StringPrototypeStartsWith(request\x2C '..\\\\'));\n\n      if (isRelative) {\n        paths = options.paths;\n      } else {\n        const fakeParent = new Module(''\x2C null);\n\n        paths = [];\n\n        for (let i = 0; i < options.paths.length; i++) {\n          const path = options.paths[i];\n          fakeParent.paths = Module._nodeModulePaths(path);\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\n\n          for (let j = 0; j < lookupPaths.length; j++) {\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j]))\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\n          }\n        }\n      }\n    } else if (options.paths === undefined) {\n      paths = Module._resolveLookupPaths(request\x2C parent);\n    } else {\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\n    }\n  } else {\n    paths = Module._resolveLookupPaths(request\x2C parent);\n  }\n\n  if (request[0] === '#' && (parent?.filename || parent?.id === '<repl>')) {\n    const parentPath = parent?.filename ?? process.cwd() + path.sep;\n    const pkg = readPackageScope(parentPath) || {};\n    if (pkg.data?.imports != null) {\n      try {\n        const { packageImportsResolve } = require('internal/modules/esm/resolve');\n        return finalizeEsmResolution(\n          packageImportsResolve(request\x2C pathToFileURL(parentPath)\x2C\n                                getCjsConditions())\x2C parentPath\x2C\n          pkg.path);\n      } catch (e) {\n        if (e.code === 'ERR_MODULE_NOT_FOUND')\n          throw createEsmNotFoundErr(request);\n        throw e;\n      }\n    }\n  }\n\n  // Try module self resolution first\n  const parentPath = trySelfParentPath(parent);\n  const selfResolved = trySelf(parentPath\x2C request);\n  if (selfResolved) {\n    const cacheKey = request + '\\x00' +\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\n    Module._pathCache[cacheKey] = selfResolved;\n    return selfResolved;\n  }\n\n  // Look up the filename first\x2C since that's the cache key.\n  const filename = Module._findPath(request\x2C paths\x2C isMain\x2C false);\n  if (filename) return filename;\n  const requireStack = [];\n  for (let cursor = parent;\n    cursor;\n    cursor = moduleParentCache.get(cursor)) {\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\n  }\n  let message = `Cannot find module '${request}'`;\n  if (requireStack.length > 0) {\n    message = message + '\\nRequire stack:\\n- ' +\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\n  }\n  // eslint-disable-next-line no-restricted-syntax\n  const err = new Error(message);\n  err.code = 'MODULE_NOT_FOUND';\n  err.requireStack = requireStack;\n  throw err;\n};\n\nfunction finalizeEsmResolution(resolved\x2C parentPath\x2C pkgPath) {\n  const { encodedSepRegEx } = require('internal/modules/esm/resolve');\n  if (RegExpPrototypeExec(encodedSepRegEx\x2C resolved) !== null)\n    throw new ERR_INVALID_MODULE_SPECIFIER(\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\n  const filename = fileURLToPath(resolved);\n  const actual = tryFile(filename);\n  if (actual)\n    return actual;\n  const err = createEsmNotFoundErr(filename\x2C\n                                   path.resolve(pkgPath\x2C 'package.json'));\n  throw err;\n}\n\nfunction createEsmNotFoundErr(request\x2C path) {\n  // eslint-disable-next-line no-restricted-syntax\n  const err = new Error(`Cannot find module '${request}'`);\n  err.code = 'MODULE_NOT_FOUND';\n  if (path)\n    err.path = path;\n  // TODO(BridgeAR): Add the requireStack as well.\n  return err;\n}\n\n// Given a file name\x2C pass it to the proper extension handler.\nModule.prototype.load = function(filename) {\n  debug('load %j for module %j'\x2C filename\x2C this.id);\n\n  assert(!this.loaded);\n  this.filename = filename;\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\n\n  const extension = findLongestRegisteredExtension(filename);\n  // allow .mjs to be overridden\n  if (StringPrototypeEndsWith(filename\x2C '.mjs') && !Module._extensions['.mjs'])\n    throw new ERR_REQUIRE_ESM(filename\x2C true);\n\n  Module._extensions[extension](this\x2C filename);\n  this.loaded = true;\n\n  const cascadedLoader = getCascadedLoader();\n  // Create module entry at load time to snapshot exports correctly\n  const exports = this.exports;\n  // Preemptively cache\n  if ((module?.module === undefined ||\n       module.module.getStatus() < kEvaluated) &&\n      !cascadedLoader.cjsCache.has(this))\n    cascadedLoader.cjsCache.set(this\x2C exports);\n};\n\n\n// Loads a module at the given file path. Returns that module's\n// `exports` property.\nModule.prototype.require = function(id) {\n  validateString(id\x2C 'id');\n  if (id === '') {\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\n                                    'must be a non-empty string');\n  }\n  requireDepth++;\n  try {\n    return Module._load(id\x2C this\x2C /* isMain */ false);\n  } finally {\n    requireDepth--;\n  }\n};\n\n\n// Resolved path to process.argv[1] will be lazily placed here\n// (needed for setting breakpoint when called with --inspect-brk)\nlet resolvedArgv;\nlet hasPausedEntry = false;\nlet Script;\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance) {\n  if (patched) {\n    const wrapper = Module.wrap(content);\n    if (Script === undefined) {\n      ({ Script } = require('vm'));\n    }\n    const script = new Script(wrapper\x2C {\n      filename\x2C\n      lineOffset: 0\x2C\n      importModuleDynamically: async (specifier\x2C _\x2C importAssertions) => {\n        const cascadedLoader = getCascadedLoader();\n        return cascadedLoader.import(specifier\x2C normalizeReferrerURL(filename)\x2C\n                                     importAssertions);\n      }\x2C\n    });\n\n    // Cache the source map for the module if present.\n    if (script.sourceMapURL) {\n      maybeCacheSourceMap(filename\x2C content\x2C this\x2C false\x2C undefined\x2C script.sourceMapURL);\n    }\n\n    return script.runInThisContext({\n      displayErrors: true\x2C\n    });\n  }\n\n  try {\n    const result = internalCompileFunction(content\x2C [\n      'exports'\x2C\n      'require'\x2C\n      'module'\x2C\n      '__filename'\x2C\n      '__dirname'\x2C\n    ]\x2C {\n      filename\x2C\n      importModuleDynamically(specifier\x2C _\x2C importAssertions) {\n        const cascadedLoader = getCascadedLoader();\n        return cascadedLoader.import(specifier\x2C normalizeReferrerURL(filename)\x2C\n                                     importAssertions);\n      }\x2C\n    });\n\n    // Cache the source map for the module if present.\n    if (result.sourceMapURL) {\n      maybeCacheSourceMap(filename\x2C content\x2C this\x2C false\x2C undefined\x2C result.sourceMapURL);\n    }\n\n    return result.function;\n  } catch (err) {\n    if (process.mainModule === cjsModuleInstance) {\n      const { enrichCJSError } = require('internal/modules/esm/translators');\n      enrichCJSError(err\x2C content);\n    }\n    throw err;\n  }\n}\n\n// Run the file contents in the correct scope or sandbox. Expose\n// the correct helper variables (require\x2C module\x2C exports) to\n// the file.\n// Returns exception\x2C if any.\nModule.prototype._compile = function(content\x2C filename) {\n  let moduleURL;\n  let redirects;\n  const manifest = policy()?.manifest;\n  if (manifest) {\n    moduleURL = pathToFileURL(filename);\n    redirects = manifest.getDependencyMapper(moduleURL);\n    manifest.assertIntegrity(moduleURL\x2C content);\n  }\n\n  const compiledWrapper = wrapSafe(filename\x2C content\x2C this);\n\n  let inspectorWrapper = null;\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\n    if (!resolvedArgv) {\n      // We enter the repl if we're not given a filename argument.\n      if (process.argv[1]) {\n        try {\n          resolvedArgv = Module._resolveFilename(process.argv[1]\x2C null\x2C false);\n        } catch {\n          // We only expect this codepath to be reached in the case of a\n          // preloaded module (it will fail earlier with the main entry)\n          assert(ArrayIsArray(getOptionValue('--require')));\n        }\n      } else {\n        resolvedArgv = 'repl';\n      }\n    }\n\n    // Set breakpoint on module start\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\n      hasPausedEntry = true;\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\n    }\n  }\n  const dirname = path.dirname(filename);\n  const require = makeRequireFunction(this\x2C redirects);\n  let result;\n  const exports = this.exports;\n  const thisValue = exports;\n  const module = this;\n  if (requireDepth === 0) statCache = new SafeMap();\n  if (inspectorWrapper) {\n    result = inspectorWrapper(compiledWrapper\x2C thisValue\x2C exports\x2C\n                              require\x2C module\x2C filename\x2C dirname);\n  } else {\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\n  }\n  hasLoadedAnyUserCJSModule = true;\n  if (requireDepth === 0) statCache = null;\n  return result;\n};\n\n// Native extension for .js\nModule._extensions['.js'] = function(module\x2C filename) {\n  // If already analyzed the source\x2C then it will be cached.\n  const cached = cjsParseCache.get(module);\n  let content;\n  if (cached?.source) {\n    content = cached.source;\n    cached.source = undefined;\n  } else {\n    content = fs.readFileSync(filename\x2C 'utf8');\n  }\n  if (StringPrototypeEndsWith(filename\x2C '.js')) {\n    const pkg = readPackageScope(filename);\n    // Function require shouldn't be used in ES modules.\n    if (pkg?.data?.type === 'module') {\n      const parent = moduleParentCache.get(module);\n      const parentPath = parent?.filename;\n      const packageJsonPath = path.resolve(pkg.path\x2C 'package.json');\n      const usesEsm = hasEsmSyntax(content);\n      const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\n                                      packageJsonPath);\n      // Attempt to reconstruct the parent require frame.\n      if (Module._cache[parentPath]) {\n        let parentSource;\n        try {\n          parentSource = fs.readFileSync(parentPath\x2C 'utf8');\n        } catch {\n          // Continue regardless of error.\n        }\n        if (parentSource) {\n          const errLine = StringPrototypeSplit(\n            StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\n              err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\n          const { 1: line\x2C 2: col } =\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\n          if (line && col) {\n            const srcLine = StringPrototypeSplit(parentSource\x2C '\\n')[line - 1];\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\n              StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\n            setArrowMessage(err\x2C frame);\n          }\n        }\n      }\n      throw err;\n    }\n  }\n  module._compile(content\x2C filename);\n};\n\n\n// Native extension for .json\nModule._extensions['.json'] = function(module\x2C filename) {\n  const content = fs.readFileSync(filename\x2C 'utf8');\n\n  const manifest = policy()?.manifest;\n  if (manifest) {\n    const moduleURL = pathToFileURL(filename);\n    manifest.assertIntegrity(moduleURL\x2C content);\n  }\n\n  try {\n    setOwnProperty(module\x2C 'exports'\x2C JSONParse(stripBOM(content)));\n  } catch (err) {\n    err.message = filename + ': ' + err.message;\n    throw err;\n  }\n};\n\n\n// Native extension for .node\nModule._extensions['.node'] = function(module\x2C filename) {\n  const manifest = policy()?.manifest;\n  if (manifest) {\n    const content = fs.readFileSync(filename);\n    const moduleURL = pathToFileURL(filename);\n    manifest.assertIntegrity(moduleURL\x2C content);\n  }\n  // Be aware this doesn't use `content`\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\n};\n\nfunction createRequireFromPath(filename) {\n  // Allow a directory to be passed as the filename\n  const trailingSlash =\n    StringPrototypeEndsWith(filename\x2C '/') ||\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\n\n  const proxyPath = trailingSlash ?\n    path.join(filename\x2C 'noop.js') :\n    filename;\n\n  const m = new Module(proxyPath);\n  m.filename = proxyPath;\n\n  m.paths = Module._nodeModulePaths(m.path);\n  return makeRequireFunction(m\x2C null);\n}\n\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\n  'absolute path string';\n\nfunction createRequire(filename) {\n  let filepath;\n\n  if (isURLInstance(filename) ||\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\n    try {\n      filepath = fileURLToPath(filename);\n    } catch {\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\n                                      createRequireError);\n    }\n  } else if (typeof filename !== 'string') {\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\n  } else {\n    filepath = filename;\n  }\n  return createRequireFromPath(filepath);\n}\n\nModule.createRequire = createRequire;\n\nModule._initPaths = function() {\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\n\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\n  const prefixDir = isWindows ?\n    path.resolve(process.execPath\x2C '..') :\n    path.resolve(process.execPath\x2C '..'\x2C '..');\n\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\n\n  if (homeDir) {\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\n  }\n\n  if (nodePath) {\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\n      Boolean\n    ));\n  }\n\n  modulePaths = paths;\n\n  // Clone as a shallow copy\x2C for introspection.\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\n};\n\nModule._preloadModules = function(requests) {\n  if (!ArrayIsArray(requests))\n    return;\n\n  isPreloading = true;\n\n  // Preloaded modules have a dummy parent module which is deemed to exist\n  // in the current working directory. This seeds the search path for\n  // preloaded modules.\n  const parent = new Module('internal/preload'\x2C null);\n  try {\n    parent.paths = Module._nodeModulePaths(process.cwd());\n  } catch (e) {\n    if (e.code !== 'ENOENT') {\n      isPreloading = false;\n      throw e;\n    }\n  }\n  for (let n = 0; n < requests.length; n++)\n    parent.require(requests[n]);\n  isPreloading = false;\n};\n\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\n  for (const mod of BuiltinModule.map.values()) {\n    if (mod.canBeRequiredByUsers &&\n        BuiltinModule.canBeRequiredWithoutScheme(mod.id)) {\n      mod.syncExports();\n    }\n  }\n};\n\n// Backwards compatibility\nModule.Module = Module;\n
code-source-info,0x3f1a4fb89a
tick,0x1a535bcd8,51167,0,0x0,3,0x0,0x3f1a4fb894de,0x3f1a4fb89399,0x16645fa777b4,0x16645fa75f6e,0x16645fa75977
tick,0x1a52c13b4,51208,0,0x0,3,0x0,0x3f1a4fb894de,0x3f1a4fb89399,0x16645fa777b4,0x16645fa75f6e,0x16645fa75977
code-creation,JS,10,51417,0x3f1a4fb8ccce,13,desc.value node:internal/per_context/primordials:370:32,0x23275ac3ff20,~
code-source-info,0x3f1a4fb8ccce,12,10587,10646,C0O10604C7O10611C12O10634,,
code-creation,JS,10,51417,0x3f1a4fb8cdee,13,SafeIterator node:internal/per_context/primordials:315:16,0x23275ac3f670,~
code-source-info,0x3f1a4fb8cdee,12,8852,8912,C0O8871C3O8888C7O8886C12O8911,,
code-creation,JS,10,51542,0x3f1a4fb8cff6,13,next node:internal/per_context/primordials:318:9,0x23275ac3f6c0,~
code-source-info,0x3f1a4fb8cff6,12,8921,8966,C0O8932C3O8949C8O8939C12O8960,,
code-creation,JS,10,51542,0x3f1a4fb8d0e6,19,canBeRequiredWithoutScheme node:internal/bootstrap/loaders:254:36,0x18a4fd087570,~
code-source-info,0x3f1a4fb8d0e6,15,7786,7837,C0O7797C7O7825C12O7825C18O7833,,
code-creation,JS,11,51708,0x1075c9ee0,4536,initializeCJS node:internal/modules/cjs/loader:284:23,0x5d9fd2ce0a8,^
code-source-info,0x1075c9ee0,59,7732,9296,,,
code-creation,JS,11,51750,0x1075cb100,504,getCLIOptionsFromBinding node:internal/options:18:34,0x5d9fd2d2b80,^
code-source-info,0x1075cb100,61,497,598,,,
code-creation,JS,11,51750,0x1075cb360,136,next node:internal/per_context/primordials:318:9,0x23275ac3f6c0,^
code-source-info,0x1075cb360,12,8921,8966,,,
code-creation,JS,11,51750,0x1075cb460,224,canBeRequiredWithoutScheme node:internal/bootstrap/loaders:254:36,0x18a4fd087570,^
code-source-info,0x1075cb460,15,7786,7837,,,
code-creation,JS,10,51833,0x3f1a4fb8d78e,32, node:internal/modules/cjs/loader:311:43,0x3f1a4fb89770,~
code-source-info,0x3f1a4fb8d78e,59,8726,8752,C0O8734C9O8735C21O8747C31O8752,,
code-creation,JS,10,52167,0x3f1a4fb8d96e,19,getSchemeOnlyModuleNames node:internal/bootstrap/loaders:258:34,0x18a4fd0875c0,~
code-source-info,0x3f1a4fb8d96e,15,7872,7923,C0O7881C11O7898C14O7888C18O7919,,
code-creation,JS,10,52250,0x3f1a4fb8dbbe,26, node:internal/modules/cjs/loader:313:52,0x3f1a4fb897c0,~
code-source-info,0x3f1a4fb8dbbe,59,8810,8857,C0O8835C5O8835C15O8847C20O8835C25O8857,,
code-creation,JS,10,52292,0x3f1a4fb8dee6,158,initializeCjsConditions node:internal/modules/helpers:34:33,0x5d9fd2d5f70,~
script-source,63,node:internal/modules/helpers,'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeSome\x2C\n  ObjectDefineProperty\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\nconst {\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\n  ERR_UNKNOWN_BUILTIN_MODULE\n} = require('internal/errors').codes;\nconst { BuiltinModule } = require('internal/bootstrap/loaders');\n\nconst { validateString } = require('internal/validators');\nconst path = require('path');\nconst { pathToFileURL\x2C fileURLToPath\x2C URL } = require('internal/url');\n\nconst { getOptionValue } = require('internal/options');\nconst { setOwnProperty } = require('internal/util');\n\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\n  debug = fn;\n});\n\nlet cjsConditions;\nfunction initializeCjsConditions() {\n  const userConditions = getOptionValue('--conditions');\n  const noAddons = getOptionValue('--no-addons');\n  const addonConditions = noAddons ? [] : ['node-addons'];\n  // TODO: Use this set when resolving pkg#exports conditions in loader.js.\n  cjsConditions = new SafeSet([\n    'require'\x2C\n    'node'\x2C\n    ...addonConditions\x2C\n    ...userConditions\x2C\n  ]);\n}\n\nfunction getCjsConditions() {\n  if (cjsConditions === undefined) {\n    initializeCjsConditions();\n  }\n  return cjsConditions;\n}\n\nfunction loadBuiltinModule(filename\x2C request) {\n  const mod = BuiltinModule.map.get(filename);\n  if (mod?.canBeRequiredByUsers) {\n    debug('load built-in module %s'\x2C request);\n    // compileForPublicLoader() throws if mod.canBeRequiredByUsers is false:\n    mod.compileForPublicLoader();\n    return mod;\n  }\n}\n\n// Invoke with makeRequireFunction(module) where |module| is the Module object\n// to use as the context for the require() function.\n// Use redirects to set up a mapping from a policy and restrict dependencies\nconst urlToFileCache = new SafeMap();\nfunction makeRequireFunction(mod\x2C redirects) {\n  const Module = mod.constructor;\n\n  let require;\n  if (redirects) {\n    const id = mod.filename || mod.id;\n    const conditions = getCjsConditions();\n    const { resolve\x2C reaction } = redirects;\n    require = function require(specifier) {\n      let missing = true;\n      const destination = resolve(specifier\x2C conditions);\n      if (destination === true) {\n        missing = false;\n      } else if (destination) {\n        const href = destination.href;\n        if (destination.protocol === 'node:') {\n          const specifier = destination.pathname;\n          const mod = loadBuiltinModule(specifier\x2C href);\n          if (mod && mod.canBeRequiredByUsers) {\n            return mod.exports;\n          }\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\n        } else if (destination.protocol === 'file:') {\n          let filepath;\n          if (urlToFileCache.has(href)) {\n            filepath = urlToFileCache.get(href);\n          } else {\n            filepath = fileURLToPath(destination);\n            urlToFileCache.set(href\x2C filepath);\n          }\n          return mod.require(filepath);\n        }\n      }\n      if (missing) {\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\n          id\x2C\n          specifier\x2C\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C ')\n        ));\n      }\n      return mod.require(specifier);\n    };\n  } else {\n    require = function require(path) {\n      return mod.require(path);\n    };\n  }\n\n  function resolve(request\x2C options) {\n    validateString(request\x2C 'request');\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\n  }\n\n  require.resolve = resolve;\n\n  function paths(request) {\n    validateString(request\x2C 'request');\n    return Module._resolveLookupPaths(request\x2C mod);\n  }\n\n  resolve.paths = paths;\n\n  setOwnProperty(require\x2C 'main'\x2C process.mainModule);\n\n  // Enable support to add extra extension types.\n  require.extensions = Module._extensions;\n\n  require.cache = Module._cache;\n\n  return require;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n * because the buffer-to-string conversion in `fs.readFileSync()`\n * translates it to FEFF\x2C the UTF-16 BOM.\n */\nfunction stripBOM(content) {\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\n    content = StringPrototypeSlice(content\x2C 1);\n  }\n  return content;\n}\n\nfunction addBuiltinLibsToObject(object\x2C dummyModuleName) {\n  // Make built-in modules available directly (loaded lazily).\n  const Module = require('internal/modules/cjs/loader').Module;\n  const { builtinModules } = Module;\n\n  // To require built-in modules in user-land and ignore modules whose\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\n  // use `require()` directly.\n  const dummyModule = new Module(dummyModuleName);\n\n  ArrayPrototypeForEach(builtinModules\x2C (name) => {\n    // Neither add underscored modules\x2C nor ones that contain slashes (e.g.\x2C\n    // 'fs/promises') or ones that are already defined.\n    if (StringPrototypeStartsWith(name\x2C '_') ||\n        StringPrototypeIncludes(name\x2C '/') ||\n        ObjectPrototypeHasOwnProperty(object\x2C name)) {\n      return;\n    }\n    // Goals of this mechanism are:\n    // - Lazy loading of built-in modules\n    // - Having all built-in modules available as non-enumerable properties\n    // - Allowing the user to re-assign these variables as if there were no\n    //   pre-existing globals with the same name.\n\n    const setReal = (val) => {\n      // Deleting the property before re-assigning it disables the\n      // getter/setter mechanism.\n      delete object[name];\n      object[name] = val;\n    };\n\n    ObjectDefineProperty(object\x2C name\x2C {\n      __proto__: null\x2C\n      get: () => {\n        const lib = dummyModule.require(name);\n\n        try {\n          // Override the current getter/setter and set up a new\n          // non-enumerable property.\n          ObjectDefineProperty(object\x2C name\x2C {\n            __proto__: null\x2C\n            get: () => lib\x2C\n            set: setReal\x2C\n            configurable: true\x2C\n            enumerable: false\x2C\n          });\n        } catch {\n          // If the property is no longer configurable\x2C ignore the error.\n        }\n\n        return lib;\n      }\x2C\n      set: setReal\x2C\n      configurable: true\x2C\n      enumerable: false\n    });\n  });\n}\n\n/**\n *\n * @param {string | URL} referrer\n * @returns {string}\n */\nfunction normalizeReferrerURL(referrer) {\n  if (typeof referrer === 'string' && path.isAbsolute(referrer)) {\n    return pathToFileURL(referrer).href;\n  }\n  return new URL(referrer).href;\n}\n\n// For error messages only - used to check if ESM syntax is in use.\nfunction hasEsmSyntax(code) {\n  debug('Checking for ESM syntax');\n  const parser = require('internal/deps/acorn/acorn/dist/acorn').Parser;\n  let root;\n  try {\n    root = parser.parse(code\x2C { sourceType: 'module'\x2C ecmaVersion: 'latest' });\n  } catch {\n    return false;\n  }\n\n  return ArrayPrototypeSome(root.body\x2C (stmt) =>\n    stmt.type === 'ExportDefaultDeclaration' ||\n    stmt.type === 'ExportNamedDeclaration' ||\n    stmt.type === 'ImportDeclaration' ||\n    stmt.type === 'ExportAllDeclaration');\n}\n\nmodule.exports = {\n  addBuiltinLibsToObject\x2C\n  getCjsConditions\x2C\n  initializeCjsConditions\x2C\n  hasEsmSyntax\x2C\n  loadBuiltinModule\x2C\n  makeRequireFunction\x2C\n  normalizeReferrerURL\x2C\n  stripBOM\x2C\n};\n
code-source-info,0x3f1a4fb8dee6,63,889,1249,C0O919C8O919C13O970C21O970C26O1027C37O1138C50O1202C95O1226C142O1154C150O1152C157O1248,,
tick,0x1a532274c,52542,0,0x0,3,0x0,0x1075cad7c,0x3f1a4fb894de,0x3f1a4fb89399,0x16645fa777b4,0x16645fa75f6e,0x16645fa75977
code-creation,JS,10,52542,0x3f1a4fb8e876,28,getEmbedderOptions node:internal/options:32:28,0x5d9fd2d2cf8,~
code-source-info,0x3f1a4fb8e876,61,760,877,C0O767C6O795C11O813C17O811C23O852C27O875,,
code-creation,JS,10,52583,0x3f1a4fb8ec16,315,Module._initPaths node:internal/modules/cjs/loader:1376:29,0x5d9fd2cee78,~
code-source-info,0x3f1a4fb8ec16,59,43316,44272,C0O43339C9O43359C14O43363C22O43377C28O43377C33O43416C42O43436C47O43440C55O43452C61O43452C66O43647C74O43663C77O43668C85O43684C93O43668C103O43706C106O43711C114O43727C125O43711C131O43767C140O43768C143O43773C157O43773C169O43812C173O43831C180O43860C183O43865C191O43865C198O43831C203O43907C210O43936C213O43941C221O43941C228O43907C233O43984C237O44004C244O44038C249O44066C254O44097C257O44102C262O44066C270O44120C273O44038C279O44004C284O44143C286O44155C292O44216C297O44237C302O44257C305O44237C309O44235C314O44271,,
code-creation,JS,11,52833,0x1075cb5a0,1536,resolve node:path:1095:10,0x286f2a2603d8,^
code-source-info,0x1075cb5a0,39,33903,34813,,,
code-creation,JS,11,52875,0x1075cbc00,216, node:internal/modules/cjs/loader:311:43,0x3f1a4fb89770,^
code-source-info,0x1075cbc00,59,8726,8752,,,
code-creation,JS,11,52875,0x1075cbd40,296,SafeSet node:internal/per_context/primordials:409:16,0x18a4fd0814c0,^
code-source-info,0x1075cbd40,12,11642,11659,,,
code-creation,JS,11,52917,0x1075cbee0,3640,normalizeString node:path:66:25,0x286f2a25ff78,^
code-source-info,0x1075cbee0,39,2161,4085,,,
code-creation,JS,10,52958,0x3f1a4fb8f3f6,90,initializeESMLoader node:internal/process/pre_execution:578:29,0x5d9fd2e6da8,~
code-source-info,0x3f1a4fb8f3f6,71,17898,18417,C0O17931C6O17931C11O17913C16O17972C19O18121C27O18125C33O18241C39O18241C44O18190C49O18198C54O18216C59O18287C65O18287C70O18306C72O18316C76O18330C78O18350C82O18374C84O18393C89O18416,,
code-creation,JS,10,53000,0x3f1a4fb8f55e,32,initializeESM node:internal/modules/esm/utils:92:23,0x5d9fd2d79c0,~
script-source,65,node:internal/modules/esm/utils,'use strict';\nconst {\n  ArrayIsArray\x2C\n  SafeSet\x2C\n  SafeWeakMap\x2C\n  ObjectFreeze\x2C\n} = primordials;\n\nconst {\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n} = require('internal/errors').codes;\n\nconst { getOptionValue } = require('internal/options');\n\nconst {\n  setImportModuleDynamicallyCallback\x2C\n  setInitializeImportMetaObjectCallback\n} = internalBinding('module_wrap');\nconst {\n  getModuleFromWrap\x2C\n} = require('internal/vm/module');\nconst assert = require('internal/assert');\n\nconst callbackMap = new SafeWeakMap();\nfunction setCallbackForWrap(wrap\x2C data) {\n  callbackMap.set(wrap\x2C data);\n}\n\nlet defaultConditions;\nfunction getDefaultConditions() {\n  assert(defaultConditions !== undefined);\n  return defaultConditions;\n}\n\nlet defaultConditionsSet;\nfunction getDefaultConditionsSet() {\n  assert(defaultConditionsSet !== undefined);\n  return defaultConditionsSet;\n}\n\n// This function is called during pre-execution\x2C before any user code is run.\nfunction initializeDefaultConditions() {\n  const userConditions = getOptionValue('--conditions');\n  const noAddons = getOptionValue('--no-addons');\n  const addonConditions = noAddons ? [] : ['node-addons'];\n\n  defaultConditions = ObjectFreeze([\n    'node'\x2C\n    'import'\x2C\n    ...addonConditions\x2C\n    ...userConditions\x2C\n  ]);\n  defaultConditionsSet = new SafeSet(defaultConditions);\n}\n\n/**\n * @param {string[]} [conditions]\n * @returns {Set<string>}\n */\nfunction getConditionsSet(conditions) {\n  if (conditions !== undefined && conditions !== getDefaultConditions()) {\n    if (!ArrayIsArray(conditions)) {\n      throw new ERR_INVALID_ARG_VALUE('conditions'\x2C conditions\x2C\n                                      'expected an array');\n    }\n    return new SafeSet(conditions);\n  }\n  return getDefaultConditionsSet();\n}\n\nfunction initializeImportMetaObject(wrap\x2C meta) {\n  if (callbackMap.has(wrap)) {\n    const { initializeImportMeta } = callbackMap.get(wrap);\n    if (initializeImportMeta !== undefined) {\n      initializeImportMeta(meta\x2C getModuleFromWrap(wrap) || wrap);\n    }\n  }\n}\n\nasync function importModuleDynamicallyCallback(wrap\x2C specifier\x2C assertions) {\n  if (callbackMap.has(wrap)) {\n    const { importModuleDynamically } = callbackMap.get(wrap);\n    if (importModuleDynamically !== undefined) {\n      return importModuleDynamically(\n        specifier\x2C getModuleFromWrap(wrap) || wrap\x2C assertions);\n    }\n  }\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\n}\n\nfunction initializeESM() {\n  initializeDefaultConditions();\n  // Setup per-isolate callbacks that locate data or callbacks that we keep\n  // track of for different ESM modules.\n  setInitializeImportMetaObjectCallback(initializeImportMetaObject);\n  setImportModuleDynamicallyCallback(importModuleDynamicallyCallback);\n}\n\nmodule.exports = {\n  setCallbackForWrap\x2C\n  initializeESM\x2C\n  getDefaultConditions\x2C\n  getConditionsSet\x2C\n};\n
code-source-info,0x3f1a4fb8f55e,65,2459,2755,C0O2466C3O2466C6O2616C14O2616C18O2685C26O2685C31O2754,,
code-creation,JS,10,53125,0x3f1a4fb8fa96,181,initializeDefaultConditions node:internal/modules/esm/utils:43:37,0x5d9fd2d7880,~
code-source-info,0x3f1a4fb8fa96,65,1002,1348,C0O1032C8O1032C13O1083C21O1083C26O1140C37O1176C50O1244C95O1268C140O1196C147O1194C153O1292C160O1327C165O1315C173O1313C180O1347,,
code-creation,JS,10,53125,0x3f1a4fb8fc8e,5,get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:74:32,0x5d9fd2cc4f8,~
code-source-info,0x3f1a4fb8fc8e,59,2303,2343,C0O2308C4O2341,,
code-creation,JS,10,53167,0x3f1a4fb8fd96,53,loadPreloadModules node:internal/process/pre_execution:611:28,0x5d9fd2e6e98,~
code-source-info,0x3f1a4fb8fd96,71,18994,19314,C0O19081C8O19081C13O19112C15O19149C21O19156C26O19232C32O19232C37O19189C42O19199C47O19276C52O19313,,
code-creation,JS,10,53167,0x3f1a4fb8ff7e,50,initializeFrozenIntrinsics node:internal/process/pre_execution:603:36,0x5d9fd2e6e48,~
code-source-info,0x3f1a4fb8ff7e,71,18743,18965,C0O18750C8O18754C14O18799C17O18807C28O18807C34O18919C40O18919C45O18956C49O18964,,
code-creation,JS,10,53208,0x3f1a4fb9009e,22,markBootstrapComplete node:internal/process/pre_execution:624:31,0x5d9fd2e6ee8,~
code-source-info,0x3f1a4fb9009e,71,19346,19410,C0O19353C6O19353C11O19383C16O19384C21O19409,,
tick,0x1008dde8c,53625,0,0x0,0,0x0,0x10014ee88,0x16645fa75987
code-creation,JS,10,53958,0x3f1a4fb901fe,94,executeUserEntryPoint node:internal/modules/run_main:75:31,0x5d9fd2dd350,~
script-source,68,node:internal/modules/run_main,'use strict';\n\nconst {\n  StringPrototypeEndsWith\x2C\n} = primordials;\n\nconst { getOptionValue } = require('internal/options');\nconst path = require('path');\n\nfunction resolveMainPath(main) {\n  // Note extension resolution for the main entry point can be deprecated in a\n  // future major.\n  // Module._findPath is monkey-patchable here.\n  const { Module\x2C toRealPath } = require('internal/modules/cjs/loader');\n  let mainPath = Module._findPath(path.resolve(main)\x2C null\x2C true);\n  if (!mainPath)\n    return;\n\n  const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\n  if (!preserveSymlinksMain)\n    mainPath = toRealPath(mainPath);\n\n  return mainPath;\n}\n\nfunction shouldUseESMLoader(mainPath) {\n  /**\n   * @type {string[]} userLoaders A list of custom loaders registered by the user\n   * (or an empty list when none have been registered).\n   */\n  const userLoaders = getOptionValue('--experimental-loader');\n  /**\n   * @type {string[]} userImports A list of preloaded modules registered by the user\n   * (or an empty list when none have been registered).\n   */\n  const userImports = getOptionValue('--import');\n  if (userLoaders.length > 0 || userImports.length > 0)\n    return true;\n  const { readPackageScope } = require('internal/modules/cjs/loader');\n  // Determine the module format of the main\n  if (mainPath && StringPrototypeEndsWith(mainPath\x2C '.mjs'))\n    return true;\n  if (!mainPath || StringPrototypeEndsWith(mainPath\x2C '.cjs'))\n    return false;\n  const pkg = readPackageScope(mainPath);\n  return pkg && pkg.data.type === 'module';\n}\n\nfunction runMainESM(mainPath) {\n  const { loadESM } = require('internal/process/esm_loader');\n  const { pathToFileURL } = require('internal/url');\n\n  handleMainPromise(loadESM((esmLoader) => {\n    const main = path.isAbsolute(mainPath) ?\n      pathToFileURL(mainPath).href : mainPath;\n    return esmLoader.import(main\x2C undefined\x2C { __proto__: null });\n  }));\n}\n\nasync function handleMainPromise(promise) {\n  const {\n    handleProcessExit\x2C\n  } = require('internal/modules/esm/handle_process_exit');\n  process.on('exit'\x2C handleProcessExit);\n  try {\n    return await promise;\n  } finally {\n    process.off('exit'\x2C handleProcessExit);\n  }\n}\n\n// For backwards compatibility\x2C we have to run a bunch of\n// monkey-patchable code that belongs to the CJS loader (exposed by\n// `require('module')`) even when the entry point is ESM.\nfunction executeUserEntryPoint(main = process.argv[1]) {\n  const resolvedMain = resolveMainPath(main);\n  const useESMLoader = shouldUseESMLoader(resolvedMain);\n  if (useESMLoader) {\n    runMainESM(resolvedMain || main);\n  } else {\n    // Module._load is the monkey-patchable CJS module loader.\n    const { Module } = require('internal/modules/cjs/loader');\n    Module._load(main\x2C null\x2C true);\n  }\n}\n\nmodule.exports = {\n  executeUserEntryPoint\x2C\n  handleMainPromise\x2C\n};\n
code-source-info,0x3f1a4fb901fe,68,2412,2780,C7O2428C14O2432C22O2462C25O2462C30O2508C33O2508C38O2544C40O2568C45O2579C50O2568C56O2699C62O2699C67O2688C72O2750C87O2750C93O2779,,
code-creation,JS,10,54125,0x3f1a4fb906de,82,resolveMainPath node:internal/modules/run_main:10:25,0x5d9fd2dd138,~
code-source-info,0x3f1a4fb906de,68,179,666,C0O367C6O367C11O344C16O352C21O431C28O441C31O446C36O446C49O431C55O476C57O495C58O502C59O535C67O535C72O581C74O623C79O648C81O664,,
code-creation,JS,10,54417,0x3f1a4fb90b0e,845,Module._findPath node:internal/modules/cjs/loader:567:28,0x5d9fd2ce4e8,~
code-source-info,0x3f1a4fb90b0e
code-creation,JS,10,54458,0x3f1a4fb91126,45,isAbsolute node:path:1160:13,0x286f2a260478,~
code-source-info,0x3f1a4fb91126,39,35569,35715,C0O35582C8O35582C13O35628C19O35635C26O35653C31O35653C39O35692C41O35688C44O35711,,
code-creation,JS,10,54542,0x3f1a4fb912be,85,stat node:internal/modules/cjs/loader:154:14,0x5d9fd2cdb08,~
code-source-info,0x3f1a4fb912be,59,4532,4929,C0O4547C5O4563C10O4563C17O4593C23O4638C28O4648C33O4648C39O4667C41O4693C43O4707C44O4729C49O4729C54O4761C61O4794C66O4874C71O4884C76O4884C82O4913C84O4927,,
code-creation,JS,10,54583,0x3f1a4fb913fe,3,toNamespacedPath node:path:1270:19,0x286f2a260568,~
code-source-info,0x3f1a4fb913fe,39,38730,38790,C0O38774C2O38786,,
code-creation,JS,10,54750,0x3f1a4fb9150e,42,toRealPath node:internal/modules/cjs/loader:459:20,0x5d9fd2ce308,~
code-source-info,0x3f1a4fb9150e,59,13027,13139,C0O13045C5O13055C10O13068C17O13088C20O13099C28O13118C35O13055C41O13137,,
tick,0x10066c38c,54875,0,0x0,3,0x0,0x3f1a4fb91531,0x3f1a4fb90db1,0x3f1a4fb9070f,0x3f1a4fb90217,0x16645fa759a9
code-creation,JS,10,55000,0x3f1a4fb919de,1081,realpathSync node:fs:2492:22,0x3b5f1daeac70,~
script-source,55,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\n\n'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  BigIntPrototypeToString\x2C\n  MathMax\x2C\n  Number\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  Promise\x2C\n  ReflectApply\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeSlice\x2C\n} = primordials;\n\nconst { fs: constants } = internalBinding('constants');\nconst {\n  S_IFIFO\x2C\n  S_IFLNK\x2C\n  S_IFMT\x2C\n  S_IFREG\x2C\n  S_IFSOCK\x2C\n  F_OK\x2C\n  R_OK\x2C\n  W_OK\x2C\n  X_OK\x2C\n  O_WRONLY\x2C\n  O_SYMLINK\n} = constants;\n\nconst pathModule = require('path');\nconst { isArrayBufferView } = require('internal/util/types');\n\n// We need to get the statValues from the binding at the callsite since\n// it's re-initialized after deserialization.\n\nconst binding = internalBinding('fs');\nconst { Buffer } = require('buffer');\nconst {\n  aggregateTwoErrors\x2C\n  codes: {\n    ERR_FS_FILE_TOO_LARGE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n  }\x2C\n  AbortError\x2C\n  uvErrmapGet\x2C\n  uvException\n} = require('internal/errors');\n\nconst { FSReqCallback } = binding;\nconst { toPathIfFileURL } = require('internal/url');\nconst {\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\n  kEmptyObject\x2C\n  promisify: {\n    custom: kCustomPromisifiedSymbol\x2C\n  }\x2C\n  SideEffectFreeRegExpPrototypeExec\x2C\n  defineLazyProperties\x2C\n} = require('internal/util');\nconst {\n  constants: {\n    kIoMaxLength\x2C\n    kMaxUserId\x2C\n  }\x2C\n  copyObject\x2C\n  Dirent\x2C\n  emitRecursiveRmdirWarning\x2C\n  getDirents\x2C\n  getOptions\x2C\n  getValidatedFd\x2C\n  getValidatedPath\x2C\n  getValidMode\x2C\n  handleErrorFromBinding\x2C\n  nullCheck\x2C\n  preprocessSymlinkDestination\x2C\n  Stats\x2C\n  getStatFsFromBinding\x2C\n  getStatsFromBinding\x2C\n  realpathCacheKey\x2C\n  stringToFlags\x2C\n  stringToSymlinkType\x2C\n  toUnixTimestamp\x2C\n  validateBufferArray\x2C\n  validateCpOptions\x2C\n  validateOffsetLengthRead\x2C\n  validateOffsetLengthWrite\x2C\n  validatePath\x2C\n  validatePosition\x2C\n  validateRmOptions\x2C\n  validateRmOptionsSync\x2C\n  validateRmdirOptions\x2C\n  validateStringAfterArrayBufferView\x2C\n  warnOnNonPortableTemplate\n} = require('internal/fs/utils');\nconst {\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_BACKWARD_SLASH\x2C\n} = require('internal/constants');\nconst {\n  isUint32\x2C\n  parseFileMode\x2C\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateEncoding\x2C\n  validateFunction\x2C\n  validateInteger\x2C\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nlet truncateWarn = true;\nlet fs;\n\n// Lazy loaded\nlet cpFn;\nlet cpSyncFn;\nlet promises = null;\nlet ReadStream;\nlet WriteStream;\nlet rimraf;\nlet rimrafSync;\n\n// These have to be separate because of how graceful-fs happens to do it's\n// monkeypatching.\nlet FileReadStream;\nlet FileWriteStream;\n\nconst isWindows = process.platform === 'win32';\nconst isOSX = process.platform === 'darwin';\n\nfunction showTruncateDeprecation() {\n  if (truncateWarn) {\n    process.emitWarning(\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\n      'fs.ftruncate with a file descriptor instead.'\x2C\n      'DeprecationWarning'\x2C 'DEP0081');\n    truncateWarn = false;\n  }\n}\n\nfunction maybeCallback(cb) {\n  validateFunction(cb\x2C 'cb');\n\n  return cb;\n}\n\n// Ensure that callbacks run in the global context. Only use this function\n// for callbacks that are passed to the binding layer\x2C callbacks that are\n// invoked from JS already run in the proper scope.\nfunction makeCallback(cb) {\n  validateFunction(cb\x2C 'cb');\n\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\n}\n\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\n// an optimization\x2C since the data passed back to the callback needs to be\n// transformed anyway.\nfunction makeStatsCallback(cb) {\n  validateFunction(cb\x2C 'cb');\n\n  return (err\x2C stats) => {\n    if (err) return cb(err);\n    cb(err\x2C getStatsFromBinding(stats));\n  };\n}\n\nconst isFd = isUint32;\n\nfunction isFileType(stats\x2C fileType) {\n  // Use stats array directly to avoid creating an fs.Stats instance just for\n  // our internal use.\n  let mode = stats[1];\n  if (typeof mode === 'bigint')\n    mode = Number(mode);\n  return (mode & S_IFMT) === fileType;\n}\n\n/**\n * Tests a user's permissions for the file or directory\n * specified by `path`.\n * @param {string | Buffer | URL} path\n * @param {number} [mode]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction access(path\x2C mode\x2C callback) {\n  if (typeof mode === 'function') {\n    callback = mode;\n    mode = F_OK;\n  }\n\n  path = getValidatedPath(path);\n  mode = getValidMode(mode\x2C 'access');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\n}\n\n/**\n * Synchronously tests a user's permissions for the file or\n * directory specified by `path`.\n * @param {string | Buffer | URL} path\n * @param {number} [mode]\n * @returns {void}\n */\nfunction accessSync(path\x2C mode) {\n  path = getValidatedPath(path);\n  mode = getValidMode(mode\x2C 'access');\n\n  const ctx = { path };\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Tests whether or not the given path exists.\n * @param {string | Buffer | URL} path\n * @param {(exists?: boolean) => any} callback\n * @returns {void}\n */\nfunction exists(path\x2C callback) {\n  maybeCallback(callback);\n\n  function suppressedCallback(err) {\n    callback(err ? false : true);\n  }\n\n  try {\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\n  } catch {\n    return callback(false);\n  }\n}\n\nObjectDefineProperty(exists\x2C kCustomPromisifiedSymbol\x2C {\n  __proto__: null\x2C\n  value: function exists(path) { // eslint-disable-line func-name-matching\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\n  }\x2C\n});\n\n// fs.existsSync never throws\x2C it only returns true or false.\n// Since fs.existsSync never throws\x2C users have established\n// the expectation that passing invalid arguments to it\x2C even like\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\n// validation errors to users properly out of compatibility concerns.\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\n/**\n * Synchronously tests whether or not the given path exists.\n * @param {string | Buffer | URL} path\n * @returns {boolean}\n */\nfunction existsSync(path) {\n  try {\n    path = getValidatedPath(path);\n  } catch {\n    return false;\n  }\n  const ctx = { path };\n  const nPath = pathModule.toNamespacedPath(path);\n  binding.access(nPath\x2C F_OK\x2C undefined\x2C ctx);\n\n  // In case of an invalid symlink\x2C `binding.access()` on win32\n  // will **not** return an error and is therefore not enough.\n  // Double check with `binding.stat()`.\n  if (isWindows && ctx.errno === undefined) {\n    binding.stat(nPath\x2C false\x2C undefined\x2C ctx);\n  }\n\n  return ctx.errno === undefined;\n}\n\nfunction readFileAfterOpen(err\x2C fd) {\n  const context = this.context;\n\n  if (err) {\n    context.callback(err);\n    return;\n  }\n\n  context.fd = fd;\n\n  const req = new FSReqCallback();\n  req.oncomplete = readFileAfterStat;\n  req.context = context;\n  binding.fstat(fd\x2C false\x2C req);\n}\n\nfunction readFileAfterStat(err\x2C stats) {\n  const context = this.context;\n\n  if (err)\n    return context.close(err);\n\n  // TODO(BridgeAR): Check if allocating a smaller chunk is better performance\n  // wise\x2C similar to the promise based version (less peak memory and chunked\n  // stringify operations vs multiple C++/JS boundary crossings).\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\n\n  if (size > kIoMaxLength) {\n    err = new ERR_FS_FILE_TOO_LARGE(size);\n    return context.close(err);\n  }\n\n  try {\n    if (size === 0) {\n      // TODO(BridgeAR): If an encoding is set\x2C use the StringDecoder to concat\n      // the result and reuse the buffer instead of allocating a new one.\n      context.buffers = [];\n    } else {\n      context.buffer = Buffer.allocUnsafeSlow(size);\n    }\n  } catch (err) {\n    return context.close(err);\n  }\n  context.read();\n}\n\nfunction checkAborted(signal\x2C callback) {\n  if (signal?.aborted) {\n    callback(new AbortError(undefined\x2C { cause: signal?.reason }));\n    return true;\n  }\n  return false;\n}\n\n/**\n * Asynchronously reads the entire contents of a file.\n * @param {string | Buffer | URL | number} path\n * @param {{\n *   encoding?: string | null;\n *   flag?: string;\n *   signal?: AbortSignal;\n *   } | string} [options]\n * @param {(\n *   err?: Error\x2C\n *   data?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction readFile(path\x2C options\x2C callback) {\n  callback = maybeCallback(callback || options);\n  options = getOptions(options\x2C { flag: 'r' });\n  const ReadFileContext = require('internal/fs/read_file_context');\n  const context = new ReadFileContext(callback\x2C options.encoding);\n  context.isUserFd = isFd(path); // File descriptor ownership\n\n  if (options.signal) {\n    context.signal = options.signal;\n  }\n  if (context.isUserFd) {\n    process.nextTick(function tick(context) {\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\n    }\x2C context);\n    return;\n  }\n\n  if (checkAborted(options.signal\x2C callback))\n    return;\n\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback();\n  req.context = context;\n  req.oncomplete = readFileAfterOpen;\n  binding.open(pathModule.toNamespacedPath(path)\x2C\n               flagsNumber\x2C\n               0o666\x2C\n               req);\n}\n\nfunction tryStatSync(fd\x2C isUserFd) {\n  const ctx = {};\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C ctx);\n  if (ctx.errno !== undefined && !isUserFd) {\n    fs.closeSync(fd);\n    throw uvException(ctx);\n  }\n  return stats;\n}\n\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\n  let threw = true;\n  let buffer;\n  try {\n    if (size > kIoMaxLength) {\n      throw new ERR_FS_FILE_TOO_LARGE(size);\n    }\n    buffer = Buffer.allocUnsafe(size);\n    threw = false;\n  } finally {\n    if (threw && !isUserFd) fs.closeSync(fd);\n  }\n  return buffer;\n}\n\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\n  let threw = true;\n  let bytesRead;\n  try {\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\n    threw = false;\n  } finally {\n    if (threw && !isUserFd) fs.closeSync(fd);\n  }\n  return bytesRead;\n}\n\n/**\n * Synchronously reads the entire contents of a file.\n * @param {string | Buffer | URL | number} path\n * @param {{\n *   encoding?: string | null;\n *   flag?: string;\n *   }} [options]\n * @returns {string | Buffer}\n */\nfunction readFileSync(path\x2C options) {\n  options = getOptions(options\x2C { flag: 'r' });\n  const isUserFd = isFd(path); // File descriptor ownership\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\n\n  const stats = tryStatSync(fd\x2C isUserFd);\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\n  let pos = 0;\n  let buffer; // Single buffer with file data\n  let buffers; // List for when size is unknown\n\n  if (size === 0) {\n    buffers = [];\n  } else {\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\n  }\n\n  let bytesRead;\n\n  if (size !== 0) {\n    do {\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\n      pos += bytesRead;\n    } while (bytesRead !== 0 && pos < size);\n  } else {\n    do {\n      // The kernel lies about many files.\n      // Go ahead and try to read some bytes.\n      buffer = Buffer.allocUnsafe(8192);\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\n      if (bytesRead !== 0) {\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\n      }\n      pos += bytesRead;\n    } while (bytesRead !== 0);\n  }\n\n  if (!isUserFd)\n    fs.closeSync(fd);\n\n  if (size === 0) {\n    // Data was collected into the buffers list.\n    buffer = Buffer.concat(buffers\x2C pos);\n  } else if (pos < size) {\n    buffer = buffer.slice(0\x2C pos);\n  }\n\n  if (options.encoding) buffer = buffer.toString(options.encoding);\n  return buffer;\n}\n\nfunction defaultCloseCallback(err) {\n  if (err != null) throw err;\n}\n\n/**\n * Closes the file descriptor.\n * @param {number} fd\n * @param {(err?: Error) => any} [callback]\n * @returns {void}\n */\nfunction close(fd\x2C callback = defaultCloseCallback) {\n  fd = getValidatedFd(fd);\n  if (callback !== defaultCloseCallback)\n    callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.close(fd\x2C req);\n}\n\n/**\n * Synchronously closes the file descriptor.\n * @param {number} fd\n * @returns {void}\n */\nfunction closeSync(fd) {\n  fd = getValidatedFd(fd);\n\n  const ctx = {};\n  binding.close(fd\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Asynchronously opens a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} [flags]\n * @param {string | number} [mode]\n * @param {(\n *   err?: Error\x2C\n *   fd?: number\n *   ) => any} callback\n * @returns {void}\n */\nfunction open(path\x2C flags\x2C mode\x2C callback) {\n  path = getValidatedPath(path);\n  if (arguments.length < 3) {\n    callback = flags;\n    flags = 'r';\n    mode = 0o666;\n  } else if (typeof mode === 'function') {\n    callback = mode;\n    mode = 0o666;\n  } else {\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\n  }\n  const flagsNumber = stringToFlags(flags);\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n\n  binding.open(pathModule.toNamespacedPath(path)\x2C\n               flagsNumber\x2C\n               mode\x2C\n               req);\n}\n\n/**\n * Synchronously opens a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} [flags]\n * @param {string | number} [mode]\n * @returns {number}\n */\nfunction openSync(path\x2C flags\x2C mode) {\n  path = getValidatedPath(path);\n  const flagsNumber = stringToFlags(flags);\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\n\n  const ctx = { path };\n  const result = binding.open(pathModule.toNamespacedPath(path)\x2C\n                              flagsNumber\x2C mode\x2C\n                              undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Reads file from the specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView} buffer\n * @param {number} offsetOrOptions\n * @param {number} length\n * @param {number | bigint | null} position\n * @param {(\n *   err?: Error\x2C\n *   bytesRead?: number\x2C\n *   buffer?: Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction read(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\n  fd = getValidatedFd(fd);\n\n  let offset = offsetOrOptions;\n  let params = null;\n  if (arguments.length <= 4) {\n    if (arguments.length === 4) {\n      // This is fs.read(fd\x2C buffer\x2C options\x2C callback)\n      validateObject(offsetOrOptions\x2C 'options'\x2C { nullable: true });\n      callback = length;\n      params = offsetOrOptions;\n    } else if (arguments.length === 3) {\n      // This is fs.read(fd\x2C bufferOrParams\x2C callback)\n      if (!isArrayBufferView(buffer)) {\n        // This is fs.read(fd\x2C params\x2C callback)\n        params = buffer;\n        ({ buffer = Buffer.alloc(16384) } = params ?? kEmptyObject);\n      }\n      callback = offsetOrOptions;\n    } else {\n      // This is fs.read(fd\x2C callback)\n      callback = buffer;\n      buffer = Buffer.alloc(16384);\n    }\n\n    if (params !== undefined) {\n      validateObject(params\x2C 'options'\x2C { nullable: true });\n    }\n    ({\n      offset = 0\x2C\n      length = buffer?.byteLength - offset\x2C\n      position = null\x2C\n    } = params ?? kEmptyObject);\n  }\n\n  validateBuffer(buffer);\n  callback = maybeCallback(callback);\n\n  if (offset == null) {\n    offset = 0;\n  } else {\n    validateInteger(offset\x2C 'offset'\x2C 0);\n  }\n\n  length |= 0;\n\n  if (length === 0) {\n    return process.nextTick(function tick() {\n      callback(null\x2C 0\x2C buffer);\n    });\n  }\n\n  if (buffer.byteLength === 0) {\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\n                                    'is empty and cannot be written');\n  }\n\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\n\n  if (position == null)\n    position = -1;\n\n  validatePosition(position\x2C 'position');\n\n  function wrapper(err\x2C bytesRead) {\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\n    callback(err\x2C bytesRead || 0\x2C buffer);\n  }\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\n}\n\nObjectDefineProperty(read\x2C kCustomPromisifyArgsSymbol\x2C\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\n\n/**\n * Synchronously reads the file from the\n * specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView} buffer\n * @param {{\n *   offset?: number;\n *   length?: number;\n *   position?: number | bigint | null;\n *   }} [offsetOrOptions]\n * @returns {number}\n */\nfunction readSync(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\n  fd = getValidatedFd(fd);\n\n  validateBuffer(buffer);\n\n  let offset = offsetOrOptions;\n  if (arguments.length <= 3 || typeof offsetOrOptions === 'object') {\n    if (offsetOrOptions !== undefined) {\n      validateObject(offsetOrOptions\x2C 'options'\x2C { nullable: true });\n    }\n\n    ({\n      offset = 0\x2C\n      length = buffer.byteLength - offset\x2C\n      position = null\x2C\n    } = offsetOrOptions ?? kEmptyObject);\n  }\n\n  if (offset === undefined) {\n    offset = 0;\n  } else {\n    validateInteger(offset\x2C 'offset'\x2C 0);\n  }\n\n  length |= 0;\n\n  if (length === 0) {\n    return 0;\n  }\n\n  if (buffer.byteLength === 0) {\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\n                                    'is empty and cannot be written');\n  }\n\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\n\n  if (position == null)\n    position = -1;\n\n  validatePosition(position\x2C 'position');\n\n  const ctx = {};\n  const result = binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\n                              undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Reads file from the specified `fd` (file descriptor)\n * and writes to an array of `ArrayBufferView`s.\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number | null} [position]\n * @param {(\n *   err?: Error\x2C\n *   bytesRead?: number\x2C\n *   buffers?: ArrayBufferView[];\n *   ) => any} callback\n * @returns {void}\n */\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\n  function wrapper(err\x2C read) {\n    callback(err\x2C read || 0\x2C buffers);\n  }\n\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n  callback = maybeCallback(callback || position);\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n\n  if (typeof position !== 'number')\n    position = null;\n\n  return binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\n}\n\nObjectDefineProperty(readv\x2C kCustomPromisifyArgsSymbol\x2C\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\n\n/**\n * Synchronously reads file from the\n * specified `fd` (file descriptor) and writes to an array\n * of `ArrayBufferView`s.\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number | null} [position]\n * @returns {number}\n */\nfunction readvSync(fd\x2C buffers\x2C position) {\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n\n  const ctx = {};\n\n  if (typeof position !== 'number')\n    position = null;\n\n  const result = binding.readBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Writes `buffer` to the specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView | string} buffer\n * @param {number | object} [offsetOrOptions]\n * @param {number} [length]\n * @param {number | null} [position]\n * @param {(\n *   err?: Error\x2C\n *   bytesWritten?: number;\n *   buffer?: Buffer | TypedArray | DataView\n *   ) => any} callback\n * @returns {void}\n */\nfunction write(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\n  function wrapper(err\x2C written) {\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\n    callback(err\x2C written || 0\x2C buffer);\n  }\n\n  fd = getValidatedFd(fd);\n\n  let offset = offsetOrOptions;\n  if (isArrayBufferView(buffer)) {\n    callback = maybeCallback(callback || position || length || offset);\n\n    if (typeof offset === 'object') {\n      ({\n        offset = 0\x2C\n        length = buffer.byteLength - offset\x2C\n        position = null\x2C\n      } = offsetOrOptions ?? kEmptyObject);\n    }\n\n    if (offset == null || typeof offset === 'function') {\n      offset = 0;\n    } else {\n      validateInteger(offset\x2C 'offset'\x2C 0);\n    }\n    if (typeof length !== 'number')\n      length = buffer.byteLength - offset;\n    if (typeof position !== 'number')\n      position = null;\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\n\n    const req = new FSReqCallback();\n    req.oncomplete = wrapper;\n    return binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\n  }\n\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\n\n  if (typeof position !== 'function') {\n    if (typeof offset === 'function') {\n      position = offset;\n      offset = null;\n    } else {\n      position = length;\n    }\n    length = 'utf8';\n  }\n\n  const str = buffer;\n  validateEncoding(str\x2C length);\n  callback = maybeCallback(position);\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n  return binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\n}\n\nObjectDefineProperty(write\x2C kCustomPromisifyArgsSymbol\x2C\n                     { __proto__: null\x2C value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\n\n/**\n * Synchronously writes `buffer` to the\n * specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView | string} buffer\n * @param {{\n *   offset?: number;\n *   length?: number;\n *   position?: number | null;\n *   }} [offsetOrOptions]\n * @returns {number}\n */\nfunction writeSync(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\n  fd = getValidatedFd(fd);\n  const ctx = {};\n  let result;\n\n  let offset = offsetOrOptions;\n  if (isArrayBufferView(buffer)) {\n    if (typeof offset === 'object') {\n      ({\n        offset = 0\x2C\n        length = buffer.byteLength - offset\x2C\n        position = null\x2C\n      } = offsetOrOptions ?? kEmptyObject);\n    }\n    if (position === undefined)\n      position = null;\n    if (offset == null) {\n      offset = 0;\n    } else {\n      validateInteger(offset\x2C 'offset'\x2C 0);\n    }\n    if (typeof length !== 'number')\n      length = buffer.byteLength - offset;\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\n                                 undefined\x2C ctx);\n  } else {\n    validateStringAfterArrayBufferView(buffer\x2C 'buffer');\n    validateEncoding(buffer\x2C length);\n\n    if (offset === undefined)\n      offset = null;\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\n                                 undefined\x2C ctx);\n  }\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Writes an array of `ArrayBufferView`s to the\n * specified `fd` (file descriptor).\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number | null} [position]\n * @param {(\n *   err?: Error\x2C\n *   bytesWritten?: number\x2C\n *   buffers?: ArrayBufferView[]\n *   ) => any} callback\n * @returns {void}\n */\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\n  function wrapper(err\x2C written) {\n    callback(err\x2C written || 0\x2C buffers);\n  }\n\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n  callback = maybeCallback(callback || position);\n\n  if (buffers.length === 0) {\n    process.nextTick(callback\x2C null\x2C 0\x2C buffers);\n    return;\n  }\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n\n  if (typeof position !== 'number')\n    position = null;\n\n  return binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\n}\n\nObjectDefineProperty(writev\x2C kCustomPromisifyArgsSymbol\x2C {\n  __proto__: null\x2C\n  value: ['bytesWritten'\x2C 'buffer']\x2C\n  enumerable: false\n});\n\n/**\n * Synchronously writes an array of `ArrayBufferView`s\n * to the specified `fd` (file descriptor).\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number | null} [position]\n * @returns {number}\n */\nfunction writevSync(fd\x2C buffers\x2C position) {\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n\n  if (buffers.length === 0) {\n    return 0;\n  }\n\n  const ctx = {};\n\n  if (typeof position !== 'number')\n    position = null;\n\n  const result = binding.writeBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\n\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Asynchronously renames file at `oldPath` to\n * the pathname provided as `newPath`.\n * @param {string | Buffer | URL} oldPath\n * @param {string | Buffer | URL} newPath\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction rename(oldPath\x2C newPath\x2C callback) {\n  callback = makeCallback(callback);\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\n                 pathModule.toNamespacedPath(newPath)\x2C\n                 req);\n}\n\n\n/**\n * Synchronously renames file at `oldPath` to\n * the pathname provided as `newPath`.\n * @param {string | Buffer | URL} oldPath\n * @param {string | Buffer | URL} newPath\n * @returns {void}\n */\nfunction renameSync(oldPath\x2C newPath) {\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n  const ctx = { path: oldPath\x2C dest: newPath };\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\n                 pathModule.toNamespacedPath(newPath)\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Truncates the file.\n * @param {string | Buffer | URL} path\n * @param {number} [len]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction truncate(path\x2C len\x2C callback) {\n  if (typeof path === 'number') {\n    showTruncateDeprecation();\n    return fs.ftruncate(path\x2C len\x2C callback);\n  }\n  if (typeof len === 'function') {\n    callback = len;\n    len = 0;\n  } else if (len === undefined) {\n    len = 0;\n  }\n\n  validateInteger(len\x2C 'len');\n  len = MathMax(0\x2C len);\n  callback = maybeCallback(callback);\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\n    if (er) return callback(er);\n    const req = new FSReqCallback();\n    req.oncomplete = function oncomplete(er) {\n      fs.close(fd\x2C (er2) => {\n        callback(aggregateTwoErrors(er2\x2C er));\n      });\n    };\n    binding.ftruncate(fd\x2C len\x2C req);\n  });\n}\n\n/**\n * Synchronously truncates the file.\n * @param {string | Buffer | URL} path\n * @param {number} [len]\n * @returns {void}\n */\nfunction truncateSync(path\x2C len) {\n  if (typeof path === 'number') {\n    // legacy\n    showTruncateDeprecation();\n    return fs.ftruncateSync(path\x2C len);\n  }\n  if (len === undefined) {\n    len = 0;\n  }\n  // Allow error to be thrown\x2C but still close fd.\n  const fd = fs.openSync(path\x2C 'r+');\n  let ret;\n\n  try {\n    ret = fs.ftruncateSync(fd\x2C len);\n  } finally {\n    fs.closeSync(fd);\n  }\n  return ret;\n}\n\n/**\n * Truncates the file descriptor.\n * @param {number} fd\n * @param {number} [len]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\n  if (typeof len === 'function') {\n    callback = len;\n    len = 0;\n  }\n  fd = getValidatedFd(fd);\n  validateInteger(len\x2C 'len');\n  len = MathMax(0\x2C len);\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.ftruncate(fd\x2C len\x2C req);\n}\n\n/**\n * Synchronously truncates the file descriptor.\n * @param {number} fd\n * @param {number} [len]\n * @returns {void}\n */\nfunction ftruncateSync(fd\x2C len = 0) {\n  fd = getValidatedFd(fd);\n  validateInteger(len\x2C 'len');\n  len = MathMax(0\x2C len);\n  const ctx = {};\n  binding.ftruncate(fd\x2C len\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\nfunction lazyLoadCp() {\n  if (cpFn === undefined) {\n    ({ cpFn } = require('internal/fs/cp/cp'));\n    cpFn = require('util').callbackify(cpFn);\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\n  }\n}\n\nfunction lazyLoadRimraf() {\n  if (rimraf === undefined)\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\n}\n\n/**\n * Asynchronously removes a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction rmdir(path\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n\n  callback = makeCallback(callback);\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\n\n  if (options?.recursive) {\n    emitRecursiveRmdirWarning();\n    validateRmOptions(\n      path\x2C\n      { ...options\x2C force: false }\x2C\n      true\x2C\n      (err\x2C options) => {\n        if (err === false) {\n          const req = new FSReqCallback();\n          req.oncomplete = callback;\n          return binding.rmdir(path\x2C req);\n        }\n        if (err) {\n          return callback(err);\n        }\n\n        lazyLoadRimraf();\n        rimraf(path\x2C options\x2C callback);\n      });\n  } else {\n    validateRmdirOptions(options);\n    const req = new FSReqCallback();\n    req.oncomplete = callback;\n    return binding.rmdir(path\x2C req);\n  }\n}\n\n/**\n * Synchronously removes a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @returns {void}\n */\nfunction rmdirSync(path\x2C options) {\n  path = getValidatedPath(path);\n\n  if (options?.recursive) {\n    emitRecursiveRmdirWarning();\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\n    if (options !== false) {\n      lazyLoadRimraf();\n      return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\n    }\n  } else {\n    validateRmdirOptions(options);\n  }\n\n  const ctx = { path };\n  binding.rmdir(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\n  return handleErrorFromBinding(ctx);\n}\n\n/**\n * Asynchronously removes files and\n * directories (modeled on the standard POSIX `rm` utility).\n * @param {string | Buffer | URL} path\n * @param {{\n *   force?: boolean;\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction rm(path\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  path = getValidatedPath(path);\n\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\n    if (err) {\n      return callback(err);\n    }\n    lazyLoadRimraf();\n    return rimraf(pathModule.toNamespacedPath(path)\x2C options\x2C callback);\n  });\n}\n\n/**\n * Synchronously removes files and\n * directories (modeled on the standard POSIX `rm` utility).\n * @param {string | Buffer | URL} path\n * @param {{\n *   force?: boolean;\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @returns {void}\n */\nfunction rmSync(path\x2C options) {\n  path = getValidatedPath(path);\n  options = validateRmOptionsSync(path\x2C options\x2C false);\n\n  lazyLoadRimraf();\n  return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\n}\n\n/**\n * Forces all currently queued I/O operations associated\n * with the file to the operating system's synchronized\n * I/O completion state.\n * @param {number} fd\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fdatasync(fd\x2C callback) {\n  fd = getValidatedFd(fd);\n  const req = new FSReqCallback();\n  req.oncomplete = makeCallback(callback);\n  binding.fdatasync(fd\x2C req);\n}\n\n/**\n * Synchronously forces all currently queued I/O operations\n * associated with the file to the operating\n * system's synchronized I/O completion state.\n * @param {number} fd\n * @returns {void}\n */\nfunction fdatasyncSync(fd) {\n  fd = getValidatedFd(fd);\n  const ctx = {};\n  binding.fdatasync(fd\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Requests for all data for the open file descriptor\n * to be flushed to the storage device.\n * @param {number} fd\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fsync(fd\x2C callback) {\n  fd = getValidatedFd(fd);\n  const req = new FSReqCallback();\n  req.oncomplete = makeCallback(callback);\n  binding.fsync(fd\x2C req);\n}\n\n/**\n * Synchronously requests for all data for the open\n * file descriptor to be flushed to the storage device.\n * @param {number} fd\n * @returns {void}\n */\nfunction fsyncSync(fd) {\n  fd = getValidatedFd(fd);\n  const ctx = {};\n  binding.fsync(fd\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Asynchronously creates a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   recursive?: boolean;\n *   mode?: string | number;\n *   } | number} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction mkdir(path\x2C options\x2C callback) {\n  let mode = 0o777;\n  let recursive = false;\n  if (typeof options === 'function') {\n    callback = options;\n  } else if (typeof options === 'number' || typeof options === 'string') {\n    mode = options;\n  } else if (options) {\n    if (options.recursive !== undefined)\n      recursive = options.recursive;\n    if (options.mode !== undefined)\n      mode = options.mode;\n  }\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n\n  validateBoolean(recursive\x2C 'options.recursive');\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.mkdir(pathModule.toNamespacedPath(path)\x2C\n                parseFileMode(mode\x2C 'mode')\x2C recursive\x2C req);\n}\n\n/**\n * Synchronously creates a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   recursive?: boolean;\n *   mode?: string | number;\n *   } | number} [options]\n * @returns {string | void}\n */\nfunction mkdirSync(path\x2C options) {\n  let mode = 0o777;\n  let recursive = false;\n  if (typeof options === 'number' || typeof options === 'string') {\n    mode = options;\n  } else if (options) {\n    if (options.recursive !== undefined)\n      recursive = options.recursive;\n    if (options.mode !== undefined)\n      mode = options.mode;\n  }\n  path = getValidatedPath(path);\n  validateBoolean(recursive\x2C 'options.recursive');\n\n  const ctx = { path };\n  const result = binding.mkdir(pathModule.toNamespacedPath(path)\x2C\n                               parseFileMode(mode\x2C 'mode')\x2C recursive\x2C\n                               undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  if (recursive) {\n    return result;\n  }\n}\n\n/**\n * Reads the contents of a directory.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   encoding?: string;\n *   withFileTypes?: boolean;\n *   }} [options]\n * @param {(\n *   err?: Error\x2C\n *   files?: string[] | Buffer[] | Direct[];\n *   ) => any} callback\n * @returns {void}\n */\nfunction readdir(path\x2C options\x2C callback) {\n  callback = makeCallback(typeof options === 'function' ? options : callback);\n  options = getOptions(options);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback();\n  if (!options.withFileTypes) {\n    req.oncomplete = callback;\n  } else {\n    req.oncomplete = (err\x2C result) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n      getDirents(path\x2C result\x2C callback);\n    };\n  }\n  binding.readdir(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C\n                  !!options.withFileTypes\x2C req);\n}\n\n/**\n * Synchronously reads the contents of a directory.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   encoding?: string;\n *   withFileTypes?: boolean;\n *   }} [options]\n * @returns {string | Buffer[] | Dirent[]}\n */\nfunction readdirSync(path\x2C options) {\n  options = getOptions(options);\n  path = getValidatedPath(path);\n  const ctx = { path };\n  const result = binding.readdir(pathModule.toNamespacedPath(path)\x2C\n                                 options.encoding\x2C !!options.withFileTypes\x2C\n                                 undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return options.withFileTypes ? getDirents(path\x2C result) : result;\n}\n\n/**\n * Invokes the callback with the `fs.Stats`\n * for the file descriptor.\n * @param {number} fd\n * @param {{ bigint?: boolean; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   stats?: Stats\n *   ) => any} callback\n * @returns {void}\n */\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = kEmptyObject;\n  }\n  fd = getValidatedFd(fd);\n  callback = makeStatsCallback(callback);\n\n  const req = new FSReqCallback(options.bigint);\n  req.oncomplete = callback;\n  binding.fstat(fd\x2C options.bigint\x2C req);\n}\n\n/**\n * Retrieves the `fs.Stats` for the symbolic link\n * referred to by the `path`.\n * @param {string | Buffer | URL} path\n * @param {{ bigint?: boolean; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   stats?: Stats\n *   ) => any} callback\n * @returns {void}\n */\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = kEmptyObject;\n  }\n  callback = makeStatsCallback(callback);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback(options.bigint);\n  req.oncomplete = callback;\n  binding.lstat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\n}\n\n/**\n * Asynchronously gets the stats of a file.\n * @param {string | Buffer | URL} path\n * @param {{ bigint?: boolean; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   stats?: Stats\n *   ) => any} callback\n * @returns {void}\n */\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = kEmptyObject;\n  }\n  callback = makeStatsCallback(callback);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback(options.bigint);\n  req.oncomplete = callback;\n  binding.stat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\n}\n\nfunction statfs(path\x2C options = { bigint: false }\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = kEmptyObject;\n  }\n  callback = maybeCallback(callback);\n  path = getValidatedPath(path);\n  const req = new FSReqCallback(options.bigint);\n  req.oncomplete = (err\x2C stats) => {\n    if (err) {\n      return callback(err);\n    }\n\n    callback(err\x2C getStatFsFromBinding(stats));\n  };\n  binding.statfs(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\n}\n\nfunction hasNoEntryError(ctx) {\n  if (ctx.errno) {\n    const uvErr = uvErrmapGet(ctx.errno);\n    return uvErr?.[0] === 'ENOENT';\n  }\n\n  if (ctx.error) {\n    return ctx.error.code === 'ENOENT';\n  }\n\n  return false;\n}\n\n/**\n * Synchronously retrieves the `fs.Stats` for\n * the file descriptor.\n * @param {number} fd\n * @param {{\n *   bigint?: boolean;\n *   }} [options]\n * @returns {Stats}\n */\nfunction fstatSync(fd\x2C options = { bigint: false }) {\n  fd = getValidatedFd(fd);\n  const ctx = { fd };\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return getStatsFromBinding(stats);\n}\n\n/**\n * Synchronously retrieves the `fs.Stats` for\n * the symbolic link referred to by the `path`.\n * @param {string | Buffer | URL} path\n * @param {{\n *   bigint?: boolean;\n *   throwIfNoEntry?: boolean;\n *   }} [options]\n * @returns {Stats}\n */\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\n  path = getValidatedPath(path);\n  const ctx = { path };\n  const stats = binding.lstat(pathModule.toNamespacedPath(path)\x2C\n                              options.bigint\x2C undefined\x2C ctx);\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\n    return undefined;\n  }\n  handleErrorFromBinding(ctx);\n  return getStatsFromBinding(stats);\n}\n\n/**\n * Synchronously retrieves the `fs.Stats`\n * for the `path`.\n * @param {string | Buffer | URL} path\n * @param {{\n *   bigint?: boolean;\n *   throwIfNoEntry?: boolean;\n *   }} [options]\n * @returns {Stats}\n */\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\n  path = getValidatedPath(path);\n  const ctx = { path };\n  const stats = binding.stat(pathModule.toNamespacedPath(path)\x2C\n                             options.bigint\x2C undefined\x2C ctx);\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\n    return undefined;\n  }\n  handleErrorFromBinding(ctx);\n  return getStatsFromBinding(stats);\n}\n\nfunction statfsSync(path\x2C options = { bigint: false }) {\n  path = getValidatedPath(path);\n  const ctx = { path };\n  const stats = binding.statfs(pathModule.toNamespacedPath(path)\x2C\n                               options.bigint\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return getStatFsFromBinding(stats);\n}\n\n/**\n * Reads the contents of a symbolic link\n * referred to by `path`.\n * @param {string | Buffer | URL} path\n * @param {{ encoding?: string; } | string} [options]\n * @param {(\n *   err?: Error\x2C\n *   linkString?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction readlink(path\x2C options\x2C callback) {\n  callback = makeCallback(typeof options === 'function' ? options : callback);\n  options = getOptions(options);\n  path = getValidatedPath(path\x2C 'oldPath');\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.readlink(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\n}\n\n/**\n * Synchronously reads the contents of a symbolic link\n * referred to by `path`.\n * @param {string | Buffer | URL} path\n * @param {{ encoding?: string; } | string} [options]\n * @returns {string | Buffer}\n */\nfunction readlinkSync(path\x2C options) {\n  options = getOptions(options);\n  path = getValidatedPath(path\x2C 'oldPath');\n  const ctx = { path };\n  const result = binding.readlink(pathModule.toNamespacedPath(path)\x2C\n                                  options.encoding\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Creates the link called `path` pointing to `target`.\n * @param {string | Buffer | URL} target\n * @param {string | Buffer | URL} path\n * @param {string | null} [type_]\n * @param {(err?: Error) => any} callback_\n * @returns {void}\n */\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\n  const type = (typeof type_ === 'string' ? type_ : null);\n  const callback = makeCallback(arguments[arguments.length - 1]);\n\n  target = getValidatedPath(target\x2C 'target');\n  path = getValidatedPath(path);\n\n  if (isWindows && type === null) {\n    let absoluteTarget;\n    try {\n      // Symlinks targets can be relative to the newly created path.\n      // Calculate absolute file name of the symlink target\x2C and check\n      // if it is a directory. Ignore resolve error to keep symlink\n      // errors consistent between platforms if invalid path is\n      // provided.\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\n    } catch {\n      // Continue regardless of error.\n    }\n    if (absoluteTarget !== undefined) {\n      stat(absoluteTarget\x2C (err\x2C stat) => {\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\n        const resolvedFlags = stringToSymlinkType(resolvedType);\n        const destination = preprocessSymlinkDestination(target\x2C\n                                                         resolvedType\x2C\n                                                         path);\n\n        const req = new FSReqCallback();\n        req.oncomplete = callback;\n        binding.symlink(destination\x2C\n                        pathModule.toNamespacedPath(path)\x2C resolvedFlags\x2C req);\n      });\n      return;\n    }\n  }\n\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\n\n  const flags = stringToSymlinkType(type);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.symlink(destination\x2C pathModule.toNamespacedPath(path)\x2C flags\x2C req);\n}\n\n/**\n * Synchronously creates the link called `path`\n * pointing to `target`.\n * @param {string | Buffer | URL} target\n * @param {string | Buffer | URL} path\n * @param {string | null} [type]\n * @returns {void}\n */\nfunction symlinkSync(target\x2C path\x2C type) {\n  type = (typeof type === 'string' ? type : null);\n  if (isWindows && type === null) {\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\n      type = 'dir';\n    }\n  }\n  target = getValidatedPath(target\x2C 'target');\n  path = getValidatedPath(path);\n  const flags = stringToSymlinkType(type);\n\n  const ctx = { path: target\x2C dest: path };\n  binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\n                  pathModule.toNamespacedPath(path)\x2C flags\x2C undefined\x2C ctx);\n\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Creates a new link from the `existingPath`\n * to the `newPath`.\n * @param {string | Buffer | URL} existingPath\n * @param {string | Buffer | URL} newPath\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction link(existingPath\x2C newPath\x2C callback) {\n  callback = makeCallback(callback);\n\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n\n  binding.link(pathModule.toNamespacedPath(existingPath)\x2C\n               pathModule.toNamespacedPath(newPath)\x2C\n               req);\n}\n\n/**\n * Synchronously creates a new link from the `existingPath`\n * to the `newPath`.\n * @param {string | Buffer | URL} existingPath\n * @param {string | Buffer | URL} newPath\n * @returns {void}\n */\nfunction linkSync(existingPath\x2C newPath) {\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n\n  const ctx = { path: existingPath\x2C dest: newPath };\n  const result = binding.link(pathModule.toNamespacedPath(existingPath)\x2C\n                              pathModule.toNamespacedPath(newPath)\x2C\n                              undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Asynchronously removes a file or symbolic link.\n * @param {string | Buffer | URL} path\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction unlink(path\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C req);\n}\n\n/**\n * Synchronously removes a file or symbolic link.\n * @param {string | Buffer | URL} path\n * @returns {void}\n */\nfunction unlinkSync(path) {\n  path = getValidatedPath(path);\n  const ctx = { path };\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Sets the permissions on the file.\n * @param {number} fd\n * @param {string | number} mode\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fchmod(fd\x2C mode\x2C callback) {\n  fd = getValidatedFd(fd);\n  mode = parseFileMode(mode\x2C 'mode');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.fchmod(fd\x2C mode\x2C req);\n}\n\n/**\n * Synchronously sets the permissions on the file.\n * @param {number} fd\n * @param {string | number} mode\n * @returns {void}\n */\nfunction fchmodSync(fd\x2C mode) {\n  fd = getValidatedFd(fd);\n  mode = parseFileMode(mode\x2C 'mode');\n  const ctx = {};\n  binding.fchmod(fd\x2C mode\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Changes the permissions on a symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} mode\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction lchmod(path\x2C mode\x2C callback) {\n  callback = maybeCallback(callback);\n  mode = parseFileMode(mode\x2C 'mode');\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\n    if (err) {\n      callback(err);\n      return;\n    }\n    // Prefer to return the chmod error\x2C if one occurs\x2C\n    // but still try to close\x2C and report closing errors if they occur.\n    fs.fchmod(fd\x2C mode\x2C (err) => {\n      fs.close(fd\x2C (err2) => {\n        callback(aggregateTwoErrors(err2\x2C err));\n      });\n    });\n  });\n}\n\n/**\n * Synchronously changes the permissions on a symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} mode\n * @returns {void}\n */\nfunction lchmodSync(path\x2C mode) {\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\n\n  // Prefer to return the chmod error\x2C if one occurs\x2C\n  // but still try to close\x2C and report closing errors if they occur.\n  let ret;\n  try {\n    ret = fs.fchmodSync(fd\x2C mode);\n  } finally {\n    fs.closeSync(fd);\n  }\n  return ret;\n}\n\n/**\n * Asynchronously changes the permissions of a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} mode\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction chmod(path\x2C mode\x2C callback) {\n  path = getValidatedPath(path);\n  mode = parseFileMode(mode\x2C 'mode');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\n}\n\n/**\n * Synchronously changes the permissions of a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} mode\n * @returns {void}\n */\nfunction chmodSync(path\x2C mode) {\n  path = getValidatedPath(path);\n  mode = parseFileMode(mode\x2C 'mode');\n\n  const ctx = { path };\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Sets the owner of the symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\n}\n\n/**\n * Synchronously sets the owner of the symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @returns {void}\n */\nfunction lchownSync(path\x2C uid\x2C gid) {\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  const ctx = { path };\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Sets the owner of the file.\n * @param {number} fd\n * @param {number} uid\n * @param {number} gid\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\n  fd = getValidatedFd(fd);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.fchown(fd\x2C uid\x2C gid\x2C req);\n}\n\n/**\n * Synchronously sets the owner of the file.\n * @param {number} fd\n * @param {number} uid\n * @param {number} gid\n * @returns {void}\n */\nfunction fchownSync(fd\x2C uid\x2C gid) {\n  fd = getValidatedFd(fd);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n\n  const ctx = {};\n  binding.fchown(fd\x2C uid\x2C gid\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Asynchronously changes the owner and group\n * of a file.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\n}\n\n/**\n * Synchronously changes the owner and group\n * of a file.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @returns {void}\n */\nfunction chownSync(path\x2C uid\x2C gid) {\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  const ctx = { path };\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Changes the file system timestamps of the object\n * referenced by `path`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\n                 toUnixTimestamp(atime)\x2C\n                 toUnixTimestamp(mtime)\x2C\n                 req);\n}\n\n/**\n * Synchronously changes the file system timestamps\n * of the object referenced by `path`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @returns {void}\n */\nfunction utimesSync(path\x2C atime\x2C mtime) {\n  path = getValidatedPath(path);\n  const ctx = { path };\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\n                 toUnixTimestamp(atime)\x2C toUnixTimestamp(mtime)\x2C\n                 undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Changes the file system timestamps of the object\n * referenced by the supplied `fd` (file descriptor).\n * @param {number} fd\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\n  fd = getValidatedFd(fd);\n  atime = toUnixTimestamp(atime\x2C 'atime');\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\n}\n\n/**\n * Synchronously changes the file system timestamps\n * of the object referenced by the\n * supplied `fd` (file descriptor).\n * @param {number} fd\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @returns {void}\n */\nfunction futimesSync(fd\x2C atime\x2C mtime) {\n  fd = getValidatedFd(fd);\n  atime = toUnixTimestamp(atime\x2C 'atime');\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\n  const ctx = {};\n  binding.futimes(fd\x2C atime\x2C mtime\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Changes the access and modification times of\n * a file in the same way as `fs.utimes()`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\n                  toUnixTimestamp(atime)\x2C\n                  toUnixTimestamp(mtime)\x2C\n                  req);\n}\n\n/**\n * Synchronously changes the access and modification\n * times of a file in the same way as `fs.utimesSync()`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @returns {void}\n */\nfunction lutimesSync(path\x2C atime\x2C mtime) {\n  path = getValidatedPath(path);\n  const ctx = { path };\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\n                  toUnixTimestamp(atime)\x2C\n                  toUnixTimestamp(mtime)\x2C\n                  undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback) {\n  if (signal?.aborted) {\n    const abortError = new AbortError(undefined\x2C { cause: signal?.reason });\n    if (isUserFd) {\n      callback(abortError);\n    } else {\n      fs.close(fd\x2C (err) => {\n        callback(aggregateTwoErrors(err\x2C abortError));\n      });\n    }\n    return;\n  }\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\n    if (writeErr) {\n      if (isUserFd) {\n        callback(writeErr);\n      } else {\n        fs.close(fd\x2C (err) => {\n          callback(aggregateTwoErrors(err\x2C writeErr));\n        });\n      }\n    } else if (written === length) {\n      if (isUserFd) {\n        callback(null);\n      } else {\n        fs.close(fd\x2C callback);\n      }\n    } else {\n      offset += written;\n      length -= written;\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback);\n    }\n  });\n}\n\n/**\n * Asynchronously writes data to the file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer | TypedArray | DataView} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   signal?: AbortSignal;\n *   } | string} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\n  callback = maybeCallback(callback || options);\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\n  const flag = options.flag || 'w';\n\n  if (!isArrayBufferView(data)) {\n    validateStringAfterArrayBufferView(data\x2C 'data');\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\n  }\n\n  if (isFd(path)) {\n    const isUserFd = true;\n    const signal = options.signal;\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\n    return;\n  }\n\n  if (checkAborted(options.signal\x2C callback))\n    return;\n\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\n    if (openErr) {\n      callback(openErr);\n    } else {\n      const isUserFd = false;\n      const signal = options.signal;\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\n    }\n  });\n}\n\n/**\n * Synchronously writes data to the file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer | TypedArray | DataView} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   } | string} [options]\n * @returns {void}\n */\nfunction writeFileSync(path\x2C data\x2C options) {\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\n\n  if (!isArrayBufferView(data)) {\n    validateStringAfterArrayBufferView(data\x2C 'data');\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\n  }\n\n  const flag = options.flag || 'w';\n\n  const isUserFd = isFd(path); // File descriptor ownership\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\n\n  let offset = 0;\n  let length = data.byteLength;\n  try {\n    while (length > 0) {\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\n      offset += written;\n      length -= written;\n    }\n  } finally {\n    if (!isUserFd) fs.closeSync(fd);\n  }\n}\n\n/**\n * Asynchronously appends data to a file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   } | string} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\n  callback = maybeCallback(callback || options);\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\n\n  // Don't make changes directly on options object\n  options = copyObject(options);\n\n  // Force append behavior when using a supplied file descriptor\n  if (!options.flag || isFd(path))\n    options.flag = 'a';\n\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\n}\n\n/**\n * Synchronously appends data to a file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   } | string} [options]\n * @returns {void}\n */\nfunction appendFileSync(path\x2C data\x2C options) {\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\n\n  // Don't make changes directly on options object\n  options = copyObject(options);\n\n  // Force append behavior when using a supplied file descriptor\n  if (!options.flag || isFd(path))\n    options.flag = 'a';\n\n  fs.writeFileSync(path\x2C data\x2C options);\n}\n\n/**\n * Watches for the changes on `filename`.\n * @param {string | Buffer | URL} filename\n * @param {string | {\n *   persistent?: boolean;\n *   recursive?: boolean;\n *   encoding?: string;\n *   signal?: AbortSignal;\n *   }} [options]\n * @param {(\n *   eventType?: string\x2C\n *   filename?: string | Buffer\n *   ) => any} [listener]\n * @returns {watchers.FSWatcher}\n */\nfunction watch(filename\x2C options\x2C listener) {\n  if (typeof options === 'function') {\n    listener = options;\n  }\n  options = getOptions(options);\n\n  // Don't make changes directly on options object\n  options = copyObject(options);\n\n  if (options.persistent === undefined) options.persistent = true;\n  if (options.recursive === undefined) options.recursive = false;\n\n  let watcher;\n  const watchers = require('internal/fs/watchers');\n  // TODO(anonrig): Remove non-native watcher when/if libuv supports recursive.\n  // As of November 2022\x2C libuv does not support recursive file watch on all platforms\x2C\n  // e.g. Linux due to the limitations of inotify.\n  if (options.recursive && !isOSX && !isWindows) {\n    const nonNativeWatcher = require('internal/fs/recursive_watch');\n    watcher = new nonNativeWatcher.FSWatcher(options);\n    watcher[watchers.kFSWatchStart](filename);\n  } else {\n    watcher = new watchers.FSWatcher();\n    watcher[watchers.kFSWatchStart](filename\x2C\n                                    options.persistent\x2C\n                                    options.recursive\x2C\n                                    options.encoding);\n  }\n\n  if (listener) {\n    watcher.addListener('change'\x2C listener);\n  }\n  if (options.signal) {\n    if (options.signal.aborted) {\n      process.nextTick(() => watcher.close());\n    } else {\n      const listener = () => watcher.close();\n      options.signal.addEventListener('abort'\x2C listener);\n      watcher.once('close'\x2C () => {\n        options.signal.removeEventListener('abort'\x2C listener);\n      });\n    }\n  }\n\n  return watcher;\n}\n\n\nconst statWatchers = new SafeMap();\n\n/**\n * Watches for changes on `filename`.\n * @param {string | Buffer | URL} filename\n * @param {{\n *   bigint?: boolean;\n *   persistent?: boolean;\n *   interval?: number;\n *   }} [options]\n * @param {(\n *   current?: Stats\x2C\n *   previous?: Stats\n *   ) => any} listener\n * @returns {watchers.StatWatcher}\n */\nfunction watchFile(filename\x2C options\x2C listener) {\n  filename = getValidatedPath(filename);\n  filename = pathModule.resolve(filename);\n  let stat;\n\n  if (options === null || typeof options !== 'object') {\n    listener = options;\n    options = null;\n  }\n\n  options = {\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\n    // a little on the slow side but let's stick with it for now to keep\n    // behavioral changes to a minimum.\n    interval: 5007\x2C\n    persistent: true\x2C\n    ...options\n  };\n\n  validateFunction(listener\x2C 'listener');\n\n  stat = statWatchers.get(filename);\n  const watchers = require('internal/fs/watchers');\n  if (stat === undefined) {\n    stat = new watchers.StatWatcher(options.bigint);\n    stat[watchers.kFSStatWatcherStart](filename\x2C\n                                       options.persistent\x2C options.interval);\n    statWatchers.set(filename\x2C stat);\n  } else {\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\n  }\n\n  stat.addListener('change'\x2C listener);\n  return stat;\n}\n\n/**\n * Stops watching for changes on `filename`.\n * @param {string | Buffer | URL} filename\n * @param {() => any} [listener]\n * @returns {void}\n */\nfunction unwatchFile(filename\x2C listener) {\n  filename = getValidatedPath(filename);\n  filename = pathModule.resolve(filename);\n  const stat = statWatchers.get(filename);\n\n  if (stat === undefined) return;\n  const watchers = require('internal/fs/watchers');\n  if (typeof listener === 'function') {\n    const beforeListenerCount = stat.listenerCount('change');\n    stat.removeListener('change'\x2C listener);\n    if (stat.listenerCount('change') < beforeListenerCount)\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\n  } else {\n    stat.removeAllListeners('change');\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\n  }\n\n  if (stat.listenerCount('change') === 0) {\n    stat.stop();\n    statWatchers.delete(filename);\n  }\n}\n\n\nlet splitRoot;\nif (isWindows) {\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\n  // slash.\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\n  splitRoot = function splitRoot(str) {\n    return SideEffectFreeRegExpPrototypeExec(splitRootRe\x2C str)[0];\n  };\n} else {\n  splitRoot = function splitRoot(str) {\n    for (let i = 0; i < str.length; ++i) {\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\n        return StringPrototypeSlice(str\x2C 0\x2C i);\n    }\n    return str;\n  };\n}\n\nfunction encodeRealpathResult(result\x2C options) {\n  if (!options || !options.encoding || options.encoding === 'utf8')\n    return result;\n  const asBuffer = Buffer.from(result);\n  if (options.encoding === 'buffer') {\n    return asBuffer;\n  }\n  return asBuffer.toString(options.encoding);\n}\n\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\nlet nextPart;\nif (isWindows) {\n  nextPart = function nextPart(p\x2C i) {\n    for (; i < p.length; ++i) {\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\n\n      // Check for a separator character\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\n        return i;\n    }\n    return -1;\n  };\n} else {\n  nextPart = function nextPart(p\x2C i) {\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\n  };\n}\n\n/**\n * Returns the resolved pathname.\n * @param {string | Buffer | URL} p\n * @param {string | { encoding?: string | null; }} [options]\n * @returns {string | Buffer}\n */\nfunction realpathSync(p\x2C options) {\n  options = getOptions(options);\n  p = toPathIfFileURL(p);\n  if (typeof p !== 'string') {\n    p += '';\n  }\n  validatePath(p);\n  p = pathModule.resolve(p);\n\n  const cache = options[realpathCacheKey];\n  const maybeCachedResult = cache?.get(p);\n  if (maybeCachedResult) {\n    return maybeCachedResult;\n  }\n\n  const seenLinks = new SafeMap();\n  const knownHard = new SafeSet();\n  const original = p;\n\n  // Current character position in p\n  let pos;\n  // The partial path so far\x2C including a trailing slash if any\n  let current;\n  // The partial path without a trailing slash (except when pointing at a root)\n  let base;\n  // The partial path scanned in the previous round\x2C with slash\n  let previous;\n\n  // Skip over roots\n  current = base = splitRoot(p);\n  pos = current.length;\n\n  // On windows\x2C check that the root exists. On unix there is no need.\n  if (isWindows) {\n    const ctx = { path: base };\n    binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\n    handleErrorFromBinding(ctx);\n    knownHard.add(base);\n  }\n\n  // Walk down the path\x2C swapping out linked path parts for their real\n  // values\n  // NB: p.length changes.\n  while (pos < p.length) {\n    // find the next part\n    const result = nextPart(p\x2C pos);\n    previous = current;\n    if (result === -1) {\n      const last = StringPrototypeSlice(p\x2C pos);\n      current += last;\n      base = previous + last;\n      pos = p.length;\n    } else {\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\n      pos = result + 1;\n    }\n\n    // Continue if not a symlink\x2C break if a pipe/socket\n    if (knownHard.has(base) || cache?.get(base) === base) {\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\n        break;\n      }\n      continue;\n    }\n\n    let resolvedLink;\n    const maybeCachedResolved = cache?.get(base);\n    if (maybeCachedResolved) {\n      resolvedLink = maybeCachedResolved;\n    } else {\n      // Use stats array directly to avoid creating an fs.Stats instance just\n      // for our internal use.\n\n      const baseLong = pathModule.toNamespacedPath(base);\n      const ctx = { path: base };\n      const stats = binding.lstat(baseLong\x2C true\x2C undefined\x2C ctx);\n      handleErrorFromBinding(ctx);\n\n      if (!isFileType(stats\x2C S_IFLNK)) {\n        knownHard.add(base);\n        cache?.set(base\x2C base);\n        continue;\n      }\n\n      // Read the link if it wasn't read before\n      // dev/ino always return 0 on windows\x2C so skip the check.\n      let linkTarget = null;\n      let id;\n      if (!isWindows) {\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\n        id = `${dev}:${ino}`;\n        if (seenLinks.has(id)) {\n          linkTarget = seenLinks.get(id);\n        }\n      }\n      if (linkTarget === null) {\n        const ctx = { path: base };\n        binding.stat(baseLong\x2C false\x2C undefined\x2C ctx);\n        handleErrorFromBinding(ctx);\n        linkTarget = binding.readlink(baseLong\x2C undefined\x2C undefined\x2C ctx);\n        handleErrorFromBinding(ctx);\n      }\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\n\n      cache?.set(base\x2C resolvedLink);\n      if (!isWindows) seenLinks.set(id\x2C linkTarget);\n    }\n\n    // Resolve the link\x2C then start over\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\n\n    // Skip over roots\n    current = base = splitRoot(p);\n    pos = current.length;\n\n    // On windows\x2C check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard.has(base)) {\n      const ctx = { path: base };\n      binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\n      handleErrorFromBinding(ctx);\n      knownHard.add(base);\n    }\n  }\n\n  cache?.set(original\x2C p);\n  return encodeRealpathResult(p\x2C options);\n}\n\n/**\n * Returns the resolved pathname.\n * @param {string | Buffer | URL} path\n * @param {string | { encoding?: string; }} [options]\n * @returns {string | Buffer}\n */\nrealpathSync.native = (path\x2C options) => {\n  options = getOptions(options);\n  path = getValidatedPath(path);\n  const ctx = { path };\n  const result = binding.realpath(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n};\n\n/**\n * Asynchronously computes the canonical pathname by\n * resolving `.`\x2C `..` and symbolic links.\n * @param {string | Buffer | URL} p\n * @param {string | { encoding?: string; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   resolvedPath?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction realpath(p\x2C options\x2C callback) {\n  callback = typeof options === 'function' ? options : maybeCallback(callback);\n  options = getOptions(options);\n  p = toPathIfFileURL(p);\n\n  if (typeof p !== 'string') {\n    p += '';\n  }\n  validatePath(p);\n  p = pathModule.resolve(p);\n\n  const seenLinks = new SafeMap();\n  const knownHard = new SafeSet();\n\n  // Current character position in p\n  let pos;\n  // The partial path so far\x2C including a trailing slash if any\n  let current;\n  // The partial path without a trailing slash (except when pointing at a root)\n  let base;\n  // The partial path scanned in the previous round\x2C with slash\n  let previous;\n\n  current = base = splitRoot(p);\n  pos = current.length;\n\n  // On windows\x2C check that the root exists. On unix there is no need.\n  if (isWindows && !knownHard.has(base)) {\n    fs.lstat(base\x2C (err\x2C stats) => {\n      if (err) return callback(err);\n      knownHard.add(base);\n      LOOP();\n    });\n  } else {\n    process.nextTick(LOOP);\n  }\n\n  // Walk down the path\x2C swapping out linked path parts for their real\n  // values\n  function LOOP() {\n    // Stop if scanned past end of path\n    if (pos >= p.length) {\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\n    }\n\n    // find the next part\n    const result = nextPart(p\x2C pos);\n    previous = current;\n    if (result === -1) {\n      const last = StringPrototypeSlice(p\x2C pos);\n      current += last;\n      base = previous + last;\n      pos = p.length;\n    } else {\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\n      pos = result + 1;\n    }\n\n    // Continue if not a symlink\x2C break if a pipe/socket\n    if (knownHard.has(base)) {\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\n      }\n      return process.nextTick(LOOP);\n    }\n\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\n  }\n\n  function gotStat(err\x2C stats) {\n    if (err) return callback(err);\n\n    // If not a symlink\x2C skip to the next path part\n    if (!stats.isSymbolicLink()) {\n      knownHard.add(base);\n      return process.nextTick(LOOP);\n    }\n\n    // Stat & read the link if not read before.\n    // Call `gotTarget()` as soon as the link target is known.\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\n    let id;\n    if (!isWindows) {\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\n      id = `${dev}:${ino}`;\n      if (seenLinks.has(id)) {\n        return gotTarget(null\x2C seenLinks.get(id));\n      }\n    }\n    fs.stat(base\x2C (err) => {\n      if (err) return callback(err);\n\n      fs.readlink(base\x2C (err\x2C target) => {\n        if (!isWindows) seenLinks.set(id\x2C target);\n        gotTarget(err\x2C target);\n      });\n    });\n  }\n\n  function gotTarget(err\x2C target) {\n    if (err) return callback(err);\n\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\n  }\n\n  function gotResolvedLink(resolvedLink) {\n    // Resolve the link\x2C then start over\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\n    current = base = splitRoot(p);\n    pos = current.length;\n\n    // On windows\x2C check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard.has(base)) {\n      fs.lstat(base\x2C (err) => {\n        if (err) return callback(err);\n        knownHard.add(base);\n        LOOP();\n      });\n    } else {\n      process.nextTick(LOOP);\n    }\n  }\n}\n\n/**\n * Asynchronously computes the canonical pathname by\n * resolving `.`\x2C `..` and symbolic links.\n * @param {string | Buffer | URL} path\n * @param {string | { encoding?: string; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   resolvedPath?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nrealpath.native = (path\x2C options\x2C callback) => {\n  callback = makeCallback(callback || options);\n  options = getOptions(options);\n  path = getValidatedPath(path);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  return binding.realpath(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\n};\n\n/**\n * Creates a unique temporary directory.\n * @param {string} prefix\n * @param {string | { encoding?: string; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   directory?: string\n *   ) => any} callback\n * @returns {void}\n */\nfunction mkdtemp(prefix\x2C options\x2C callback) {\n  callback = makeCallback(typeof options === 'function' ? options : callback);\n  options = getOptions(options);\n\n  validateString(prefix\x2C 'prefix');\n  nullCheck(prefix\x2C 'prefix');\n  warnOnNonPortableTemplate(prefix);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C req);\n}\n\n/**\n * Synchronously creates a unique temporary directory.\n * @param {string} prefix\n * @param {string | { encoding?: string; }} [options]\n * @returns {string}\n */\nfunction mkdtempSync(prefix\x2C options) {\n  options = getOptions(options);\n\n  validateString(prefix\x2C 'prefix');\n  nullCheck(prefix\x2C 'prefix');\n  warnOnNonPortableTemplate(prefix);\n  const path = `${prefix}XXXXXX`;\n  const ctx = { path };\n  const result = binding.mkdtemp(path\x2C options.encoding\x2C\n                                 undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Asynchronously copies `src` to `dest`. By\n * default\x2C `dest` is overwritten if it already exists.\n * @param {string | Buffer | URL} src\n * @param {string | Buffer | URL} dest\n * @param {number} [mode]\n * @param {() => any} callback\n * @returns {void}\n */\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\n  if (typeof mode === 'function') {\n    callback = mode;\n    mode = 0;\n  }\n\n  src = getValidatedPath(src\x2C 'src');\n  dest = getValidatedPath(dest\x2C 'dest');\n\n  src = pathModule._makeLong(src);\n  dest = pathModule._makeLong(dest);\n  mode = getValidMode(mode\x2C 'copyFile');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\n}\n\n/**\n * Synchronously copies `src` to `dest`. By\n * default\x2C `dest` is overwritten if it already exists.\n * @param {string | Buffer | URL} src\n * @param {string | Buffer | URL} dest\n * @param {number} [mode]\n * @returns {void}\n */\nfunction copyFileSync(src\x2C dest\x2C mode) {\n  src = getValidatedPath(src\x2C 'src');\n  dest = getValidatedPath(dest\x2C 'dest');\n\n  const ctx = { path: src\x2C dest };  // non-prefixed\n\n  src = pathModule._makeLong(src);\n  dest = pathModule._makeLong(dest);\n  mode = getValidMode(mode\x2C 'copyFile');\n  binding.copyFile(src\x2C dest\x2C mode\x2C undefined\x2C ctx);\n  handleErrorFromBinding(ctx);\n}\n\n/**\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\n * symlink. The contents of directories will be copied recursively.\n * @param {string | URL} src\n * @param {string | URL} dest\n * @param {object} [options]\n * @param {() => any} callback\n * @returns {void}\n */\nfunction cp(src\x2C dest\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  callback = makeCallback(callback);\n  options = validateCpOptions(options);\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\n  lazyLoadCp();\n  cpFn(src\x2C dest\x2C options\x2C callback);\n}\n\n/**\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\n * symlink. The contents of directories will be copied recursively.\n * @param {string | URL} src\n * @param {string | URL} dest\n * @param {object} [options]\n * @returns {void}\n */\nfunction cpSync(src\x2C dest\x2C options) {\n  options = validateCpOptions(options);\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\n  lazyLoadCp();\n  cpSyncFn(src\x2C dest\x2C options);\n}\n\nfunction lazyLoadStreams() {\n  if (!ReadStream) {\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\n    FileReadStream = ReadStream;\n    FileWriteStream = WriteStream;\n  }\n}\n\n/**\n * Creates a readable stream with a default `highWaterMark`\n * of 64 KiB.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   flags?: string;\n *   encoding?: string;\n *   fd?: number | FileHandle;\n *   mode?: number;\n *   autoClose?: boolean;\n *   emitClose?: boolean;\n *   start: number;\n *   end?: number;\n *   highWaterMark?: number;\n *   fs?: object | null;\n *   }} [options]\n * @returns {ReadStream}\n */\nfunction createReadStream(path\x2C options) {\n  lazyLoadStreams();\n  return new ReadStream(path\x2C options);\n}\n\n/**\n * Creates a write stream.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   flags?: string;\n *   encoding?: string;\n *   fd?: number | FileHandle;\n *   mode?: number;\n *   autoClose?: boolean;\n *   emitClose?: boolean;\n *   start: number;\n *   fs?: object | null;\n *   }} [options]\n * @returns {WriteStream}\n */\nfunction createWriteStream(path\x2C options) {\n  lazyLoadStreams();\n  return new WriteStream(path\x2C options);\n}\n\nmodule.exports = fs = {\n  appendFile\x2C\n  appendFileSync\x2C\n  access\x2C\n  accessSync\x2C\n  chown\x2C\n  chownSync\x2C\n  chmod\x2C\n  chmodSync\x2C\n  close\x2C\n  closeSync\x2C\n  copyFile\x2C\n  copyFileSync\x2C\n  cp\x2C\n  cpSync\x2C\n  createReadStream\x2C\n  createWriteStream\x2C\n  exists\x2C\n  existsSync\x2C\n  fchown\x2C\n  fchownSync\x2C\n  fchmod\x2C\n  fchmodSync\x2C\n  fdatasync\x2C\n  fdatasyncSync\x2C\n  fstat\x2C\n  fstatSync\x2C\n  fsync\x2C\n  fsyncSync\x2C\n  ftruncate\x2C\n  ftruncateSync\x2C\n  futimes\x2C\n  futimesSync\x2C\n  lchown\x2C\n  lchownSync\x2C\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\n  link\x2C\n  linkSync\x2C\n  lstat\x2C\n  lstatSync\x2C\n  lutimes\x2C\n  lutimesSync\x2C\n  mkdir\x2C\n  mkdirSync\x2C\n  mkdtemp\x2C\n  mkdtempSync\x2C\n  open\x2C\n  openSync\x2C\n  readdir\x2C\n  readdirSync\x2C\n  read\x2C\n  readSync\x2C\n  readv\x2C\n  readvSync\x2C\n  readFile\x2C\n  readFileSync\x2C\n  readlink\x2C\n  readlinkSync\x2C\n  realpath\x2C\n  realpathSync\x2C\n  rename\x2C\n  renameSync\x2C\n  rm\x2C\n  rmSync\x2C\n  rmdir\x2C\n  rmdirSync\x2C\n  stat\x2C\n  statfs\x2C\n  statSync\x2C\n  statfsSync\x2C\n  symlink\x2C\n  symlinkSync\x2C\n  truncate\x2C\n  truncateSync\x2C\n  unwatchFile\x2C\n  unlink\x2C\n  unlinkSync\x2C\n  utimes\x2C\n  utimesSync\x2C\n  watch\x2C\n  watchFile\x2C\n  writeFile\x2C\n  writeFileSync\x2C\n  write\x2C\n  writeSync\x2C\n  writev\x2C\n  writevSync\x2C\n  Dirent\x2C\n  Stats\x2C\n\n  get ReadStream() {\n    lazyLoadStreams();\n    return ReadStream;\n  }\x2C\n\n  set ReadStream(val) {\n    ReadStream = val;\n  }\x2C\n\n  get WriteStream() {\n    lazyLoadStreams();\n    return WriteStream;\n  }\x2C\n\n  set WriteStream(val) {\n    WriteStream = val;\n  }\x2C\n\n  // Legacy names... these have to be separate because of how graceful-fs\n  // (and possibly other) modules monkey patch the values.\n  get FileReadStream() {\n    lazyLoadStreams();\n    return FileReadStream;\n  }\x2C\n\n  set FileReadStream(val) {\n    FileReadStream = val;\n  }\x2C\n\n  get FileWriteStream() {\n    lazyLoadStreams();\n    return FileWriteStream;\n  }\x2C\n\n  set FileWriteStream(val) {\n    FileWriteStream = val;\n  }\x2C\n\n  // For tests\n  _toUnixTimestamp: toUnixTimestamp\n};\n\ndefineLazyProperties(\n  fs\x2C\n  'internal/fs/dir'\x2C\n  ['Dir'\x2C 'opendir'\x2C 'opendirSync']\n);\n\nObjectDefineProperties(fs\x2C {\n  F_OK: { __proto__: null\x2C enumerable: true\x2C value: F_OK || 0 }\x2C\n  R_OK: { __proto__: null\x2C enumerable: true\x2C value: R_OK || 0 }\x2C\n  W_OK: { __proto__: null\x2C enumerable: true\x2C value: W_OK || 0 }\x2C\n  X_OK: { __proto__: null\x2C enumerable: true\x2C value: X_OK || 0 }\x2C\n  constants: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    value: constants\n  }\x2C\n  promises: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      promises ??= require('internal/fs/promises').exports;\n      return promises;\n    }\n  }\n});\n
code-source-info,0x3f1a4fb919de
tick,0x1a535b6b8,58000,0,0x0,3,0x0,0x3f1a4fb91531,0x3f1a4fb90db1,0x3f1a4fb9070f,0x3f1a4fb90217,0x16645fa759a9
tick,0x100688fb8,58042,0,0x0,3,0x0,0x3f1a4fb91531,0x3f1a4fb90db1,0x3f1a4fb9070f,0x3f1a4fb90217,0x16645fa759a9
code-creation,JS,10,58083,0x3f1a4fb98386,135,getOptions node:internal/fs/utils:317:20,0x3b5f1daf3670,~
script-source,56,node:internal/fs/utils,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  BigInt\x2C\n  Date\x2C\n  DateNow\x2C\n  DatePrototypeGetTime\x2C\n  ErrorCaptureStackTrace\x2C\n  FunctionPrototypeCall\x2C\n  Number\x2C\n  NumberIsFinite\x2C\n  MathMin\x2C\n  MathRound\x2C\n  ObjectIs\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  ReflectOwnKeys\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeIncludes\x2C\n  Symbol\x2C\n  TypedArrayPrototypeIncludes\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\nconst {\n  codes: {\n    ERR_FS_EISDIR\x2C\n    ERR_FS_INVALID_SYMLINK_TYPE\x2C\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_OUT_OF_RANGE\n  }\x2C\n  hideStackFrames\x2C\n  uvException\n} = require('internal/errors');\nconst {\n  isArrayBufferView\x2C\n  isBigInt64Array\x2C\n  isDate\x2C\n  isUint8Array\x2C\n} = require('internal/util/types');\nconst {\n  kEmptyObject\x2C\n  once\x2C\n} = require('internal/util');\nconst { toPathIfFileURL } = require('internal/url');\nconst {\n  validateAbortSignal\x2C\n  validateBoolean\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateInteger\x2C\n  validateObject\x2C\n  validateUint32\x2C\n} = require('internal/validators');\nconst pathModule = require('path');\nconst kType = Symbol('type');\nconst kStats = Symbol('stats');\nconst assert = require('internal/assert');\n\nconst {\n  fs: {\n    F_OK = 0\x2C\n    W_OK = 0\x2C\n    R_OK = 0\x2C\n    X_OK = 0\x2C\n    COPYFILE_EXCL\x2C\n    COPYFILE_FICLONE\x2C\n    COPYFILE_FICLONE_FORCE\x2C\n    O_APPEND\x2C\n    O_CREAT\x2C\n    O_EXCL\x2C\n    O_RDONLY\x2C\n    O_RDWR\x2C\n    O_SYNC\x2C\n    O_TRUNC\x2C\n    O_WRONLY\x2C\n    S_IFBLK\x2C\n    S_IFCHR\x2C\n    S_IFDIR\x2C\n    S_IFIFO\x2C\n    S_IFLNK\x2C\n    S_IFMT\x2C\n    S_IFREG\x2C\n    S_IFSOCK\x2C\n    UV_FS_SYMLINK_DIR\x2C\n    UV_FS_SYMLINK_JUNCTION\x2C\n    UV_DIRENT_UNKNOWN\x2C\n    UV_DIRENT_FILE\x2C\n    UV_DIRENT_DIR\x2C\n    UV_DIRENT_LINK\x2C\n    UV_DIRENT_FIFO\x2C\n    UV_DIRENT_SOCKET\x2C\n    UV_DIRENT_CHAR\x2C\n    UV_DIRENT_BLOCK\n  }\x2C\n  os: {\n    errno: {\n      EISDIR\n    }\n  }\n} = internalBinding('constants');\n\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\n// available on specific systems. They can be used in combination as well\n// (F_OK | R_OK | W_OK | X_OK).\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\n\nconst kDefaultCopyMode = 0;\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\nconst kMinimumCopyMode = MathMin(\n  kDefaultCopyMode\x2C\n  COPYFILE_EXCL\x2C\n  COPYFILE_FICLONE\x2C\n  COPYFILE_FICLONE_FORCE\n);\nconst kMaximumCopyMode = COPYFILE_EXCL |\n                         COPYFILE_FICLONE |\n                         COPYFILE_FICLONE_FORCE;\n\n// Most platforms don't allow reads or writes >= 2 GiB.\n// See https://github.com/libuv/libuv/pull/1501.\nconst kIoMaxLength = 2 ** 31 - 1;\n\n// Use 64kb in case the file type is not a regular file and thus do not know the\n// actual file size. Increasing the value further results in more frequent over\n// allocation for small files and consumes CPU time and memory that should be\n// used else wise.\n// Use up to 512kb per read otherwise to partition reading big files to prevent\n// blocking other threads in case the available threads are all in use.\nconst kReadFileUnknownBufferLength = 64 * 1024;\nconst kReadFileBufferLength = 512 * 1024;\n\nconst kWriteFileMaxChunkSize = 512 * 1024;\n\nconst kMaxUserId = 2 ** 32 - 1;\n\nconst isWindows = process.platform === 'win32';\n\nlet fs;\nfunction lazyLoadFs() {\n  if (!fs) {\n    fs = require('fs');\n  }\n  return fs;\n}\n\nfunction assertEncoding(encoding) {\n  if (encoding && !Buffer.isEncoding(encoding)) {\n    const reason = 'is invalid encoding';\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\n  }\n}\n\nclass Dirent {\n  constructor(name\x2C type) {\n    this.name = name;\n    this[kType] = type;\n  }\n\n  isDirectory() {\n    return this[kType] === UV_DIRENT_DIR;\n  }\n\n  isFile() {\n    return this[kType] === UV_DIRENT_FILE;\n  }\n\n  isBlockDevice() {\n    return this[kType] === UV_DIRENT_BLOCK;\n  }\n\n  isCharacterDevice() {\n    return this[kType] === UV_DIRENT_CHAR;\n  }\n\n  isSymbolicLink() {\n    return this[kType] === UV_DIRENT_LINK;\n  }\n\n  isFIFO() {\n    return this[kType] === UV_DIRENT_FIFO;\n  }\n\n  isSocket() {\n    return this[kType] === UV_DIRENT_SOCKET;\n  }\n}\n\nclass DirentFromStats extends Dirent {\n  constructor(name\x2C stats) {\n    super(name\x2C null);\n    this[kStats] = stats;\n  }\n}\n\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\n  if (name === 'constructor') {\n    continue;\n  }\n  DirentFromStats.prototype[name] = function() {\n    return this[kStats][name]();\n  };\n}\n\nfunction copyObject(source) {\n  const target = {};\n  for (const key in source)\n    target[key] = source[key];\n  return target;\n}\n\nconst bufferSep = Buffer.from(pathModule.sep);\n\nfunction join(path\x2C name) {\n  if ((typeof path === 'string' || isUint8Array(path)) &&\n      name === undefined) {\n    return path;\n  }\n\n  if (typeof path === 'string' && isUint8Array(name)) {\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\n    return Buffer.concat([pathBuffer\x2C name]);\n  }\n\n  if (typeof path === 'string' && typeof name === 'string') {\n    return pathModule.join(path\x2C name);\n  }\n\n  if (isUint8Array(path) && isUint8Array(name)) {\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\n  }\n\n  throw new ERR_INVALID_ARG_TYPE(\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\n}\n\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\n  let i;\n  if (typeof callback === 'function') {\n    const len = names.length;\n    let toFinish = 0;\n    callback = once(callback);\n    for (i = 0; i < len; i++) {\n      const type = types[i];\n      if (type === UV_DIRENT_UNKNOWN) {\n        const name = names[i];\n        const idx = i;\n        toFinish++;\n        let filepath;\n        try {\n          filepath = join(path\x2C name);\n        } catch (err) {\n          callback(err);\n          return;\n        }\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\n          if (err) {\n            callback(err);\n            return;\n          }\n          names[idx] = new DirentFromStats(name\x2C stats);\n          if (--toFinish === 0) {\n            callback(null\x2C names);\n          }\n        });\n      } else {\n        names[i] = new Dirent(names[i]\x2C types[i]);\n      }\n    }\n    if (toFinish === 0) {\n      callback(null\x2C names);\n    }\n  } else {\n    const len = names.length;\n    for (i = 0; i < len; i++) {\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\n    }\n    return names;\n  }\n}\n\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\n  if (typeof callback === 'function') {\n    if (type === UV_DIRENT_UNKNOWN) {\n      let filepath;\n      try {\n        filepath = join(path\x2C name);\n      } catch (err) {\n        callback(err);\n        return;\n      }\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\n        if (err) {\n          callback(err);\n          return;\n        }\n        callback(null\x2C new DirentFromStats(name\x2C stats));\n      });\n    } else {\n      callback(null\x2C new Dirent(name\x2C type));\n    }\n  } else if (type === UV_DIRENT_UNKNOWN) {\n    const stats = lazyLoadFs().lstatSync(join(path\x2C name));\n    return new DirentFromStats(name\x2C stats);\n  } else {\n    return new Dirent(name\x2C type);\n  }\n}\n\nfunction getOptions(options\x2C defaultOptions = kEmptyObject) {\n  if (options == null || typeof options === 'function') {\n    return defaultOptions;\n  }\n\n  if (typeof options === 'string') {\n    defaultOptions = { ...defaultOptions };\n    defaultOptions.encoding = options;\n    options = defaultOptions;\n  } else if (typeof options !== 'object') {\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\n  }\n\n  if (options.encoding !== 'buffer')\n    assertEncoding(options.encoding);\n\n  if (options.signal !== undefined) {\n    validateAbortSignal(options.signal\x2C 'options.signal');\n  }\n  return options;\n}\n\n/**\n * @param {InternalFSBinding.FSSyncContext} ctx\n */\nfunction handleErrorFromBinding(ctx) {\n  if (ctx.errno !== undefined) {  // libuv error numbers\n    const err = uvException(ctx);\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\n    throw err;\n  }\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\n    // usually caused by memory problems. We need to figure out proper error\n    // code(s) for this.\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\n    throw ctx.error;\n  }\n}\n\n// Check if the path contains null types if it is a string nor Uint8Array\x2C\n// otherwise return silently.\nconst nullCheck = hideStackFrames((path\x2C propName\x2C throwError = true) => {\n  const pathIsString = typeof path === 'string';\n  const pathIsUint8Array = isUint8Array(path);\n\n  // We can only perform meaningful checks on strings and Uint8Arrays.\n  if ((!pathIsString && !pathIsUint8Array) ||\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\n    return;\n  }\n\n  const err = new ERR_INVALID_ARG_VALUE(\n    propName\x2C\n    path\x2C\n    'must be a string or Uint8Array without null bytes'\n  );\n  if (throwError) {\n    throw err;\n  }\n  return err;\n});\n\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\n  if (!isWindows) {\n    // No preprocessing is needed on Unix.\n    return path;\n  }\n  path = '' + path;\n  if (type === 'junction') {\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\n    // A relative target is relative to the link's parent directory.\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\n    return pathModule.toNamespacedPath(path);\n  }\n  if (pathModule.isAbsolute(path)) {\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\n    return pathModule.toNamespacedPath(path);\n  }\n  // Windows symlinks don't tolerate forward slashes.\n  return RegExpPrototypeSymbolReplace(/\\//g\x2C path\x2C '\\\\');\n}\n\n// Constructor for file stats.\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\n                   ino\x2C size\x2C blocks) {\n  this.dev = dev;\n  this.mode = mode;\n  this.nlink = nlink;\n  this.uid = uid;\n  this.gid = gid;\n  this.rdev = rdev;\n  this.blksize = blksize;\n  this.ino = ino;\n  this.size = size;\n  this.blocks = blocks;\n}\n\nStatsBase.prototype.isDirectory = function() {\n  return this._checkModeProperty(S_IFDIR);\n};\n\nStatsBase.prototype.isFile = function() {\n  return this._checkModeProperty(S_IFREG);\n};\n\nStatsBase.prototype.isBlockDevice = function() {\n  return this._checkModeProperty(S_IFBLK);\n};\n\nStatsBase.prototype.isCharacterDevice = function() {\n  return this._checkModeProperty(S_IFCHR);\n};\n\nStatsBase.prototype.isSymbolicLink = function() {\n  return this._checkModeProperty(S_IFLNK);\n};\n\nStatsBase.prototype.isFIFO = function() {\n  return this._checkModeProperty(S_IFIFO);\n};\n\nStatsBase.prototype.isSocket = function() {\n  return this._checkModeProperty(S_IFSOCK);\n};\n\nconst kNsPerMsBigInt = 10n ** 6n;\nconst kNsPerSecBigInt = 10n ** 9n;\nconst kMsPerSec = 10 ** 3;\nconst kNsPerMs = 10 ** 6;\nfunction msFromTimeSpec(sec\x2C nsec) {\n  return sec * kMsPerSec + nsec / kNsPerMs;\n}\n\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\n  return sec * kNsPerSecBigInt + nsec;\n}\n\n// The Date constructor performs Math.floor() on the absolute value\n// of the timestamp: https://tc39.es/ecma262/#sec-timeclip\n// Since there may be a precision loss when the timestamp is\n// converted to a floating point number\x2C we manually round\n// the timestamp here before passing it to Date().\n// Refs: https://github.com/nodejs/node/pull/12607\n// Refs: https://github.com/nodejs/node/pull/43714\nfunction dateFromMs(ms) {\n  // Coercing to number\x2C ms can be bigint\n  return new Date(MathRound(Number(ms)));\n}\n\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\n                     ino\x2C size\x2C blocks\x2C\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\n                                 ino\x2C size\x2C blocks]);\n\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\n  this.atimeNs = atimeNs;\n  this.mtimeNs = mtimeNs;\n  this.ctimeNs = ctimeNs;\n  this.birthtimeNs = birthtimeNs;\n  this.atime = dateFromMs(this.atimeMs);\n  this.mtime = dateFromMs(this.mtimeMs);\n  this.ctime = dateFromMs(this.ctimeMs);\n  this.birthtime = dateFromMs(this.birthtimeMs);\n}\n\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\n\nBigIntStats.prototype._checkModeProperty = function(property) {\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\n    property === S_IFSOCK)) {\n    return false;  // Some types are not available on Windows\n  }\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\n};\n\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\n               ino\x2C size\x2C blocks\x2C\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\n                        blksize\x2C ino\x2C size\x2C blocks);\n  this.atimeMs = atimeMs;\n  this.mtimeMs = mtimeMs;\n  this.ctimeMs = ctimeMs;\n  this.birthtimeMs = birthtimeMs;\n  this.atime = dateFromMs(atimeMs);\n  this.mtime = dateFromMs(mtimeMs);\n  this.ctime = dateFromMs(ctimeMs);\n  this.birthtime = dateFromMs(birthtimeMs);\n}\n\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\nObjectSetPrototypeOf(Stats\x2C StatsBase);\n\n// HACK: Workaround for https://github.com/standard-things/esm/issues/821.\n// TODO(ronag): Remove this as soon as `esm` publishes a fixed version.\nStats.prototype.isFile = StatsBase.prototype.isFile;\n\nStats.prototype._checkModeProperty = function(property) {\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\n    property === S_IFSOCK)) {\n    return false;  // Some types are not available on Windows\n  }\n  return (this.mode & S_IFMT) === property;\n};\n\n/**\n * @param {Float64Array | BigInt64Array} stats\n * @param {number} offset\n * @returns {BigIntStats | Stats}\n */\nfunction getStatsFromBinding(stats\x2C offset = 0) {\n  if (isBigInt64Array(stats)) {\n    return new BigIntStats(\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\n      stats[9 + offset]\x2C\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\n    );\n  }\n  return new Stats(\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\n    stats[9 + offset]\x2C\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\n  );\n}\n\nclass StatFs {\n  constructor(type\x2C bsize\x2C blocks\x2C bfree\x2C bavail\x2C files\x2C ffree) {\n    this.type = type;\n    this.bsize = bsize;\n    this.blocks = blocks;\n    this.bfree = bfree;\n    this.bavail = bavail;\n    this.files = files;\n    this.ffree = ffree;\n  }\n}\n\nfunction getStatFsFromBinding(stats) {\n  return new StatFs(\n    stats[0]\x2C stats[1]\x2C stats[2]\x2C stats[3]\x2C stats[4]\x2C stats[5]\x2C stats[6]\n  );\n}\n\nfunction stringToFlags(flags\x2C name = 'flags') {\n  if (typeof flags === 'number') {\n    validateInt32(flags\x2C name);\n    return flags;\n  }\n\n  if (flags == null) {\n    return O_RDONLY;\n  }\n\n  switch (flags) {\n    case 'r' : return O_RDONLY;\n    case 'rs' : // Fall through.\n    case 'sr' : return O_RDONLY | O_SYNC;\n    case 'r+' : return O_RDWR;\n    case 'rs+' : // Fall through.\n    case 'sr+' : return O_RDWR | O_SYNC;\n\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\n    case 'wx' : // Fall through.\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\n\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\n    case 'wx+': // Fall through.\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\n\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\n    case 'ax' : // Fall through.\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\n    case 'as' : // Fall through.\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\n\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\n    case 'ax+': // Fall through.\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\n    case 'as+': // Fall through.\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\n  }\n\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\n}\n\nconst stringToSymlinkType = hideStackFrames((type) => {\n  let flags = 0;\n  if (typeof type === 'string') {\n    switch (type) {\n      case 'dir':\n        flags |= UV_FS_SYMLINK_DIR;\n        break;\n      case 'junction':\n        flags |= UV_FS_SYMLINK_JUNCTION;\n        break;\n      case 'file':\n        break;\n      default:\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\n    }\n  }\n  return flags;\n});\n\n// converts Date or number to a fractional UNIX timestamp\nfunction toUnixTimestamp(time\x2C name = 'time') {\n  // eslint-disable-next-line eqeqeq\n  if (typeof time === 'string' && +time == time) {\n    return +time;\n  }\n  if (NumberIsFinite(time)) {\n    if (time < 0) {\n      return DateNow() / 1000;\n    }\n    return time;\n  }\n  if (isDate(time)) {\n    // Convert to 123.456 UNIX timestamp\n    return DatePrototypeGetTime(time) / 1000;\n  }\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\n}\n\nconst validateOffsetLengthRead = hideStackFrames(\n  (offset\x2C length\x2C bufferLength) => {\n    if (offset < 0) {\n      throw new ERR_OUT_OF_RANGE('offset'\x2C '>= 0'\x2C offset);\n    }\n    if (length < 0) {\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\n    }\n    if (offset + length > bufferLength) {\n      throw new ERR_OUT_OF_RANGE('length'\x2C\n                                 `<= ${bufferLength - offset}`\x2C length);\n    }\n  }\n);\n\nconst validateOffsetLengthWrite = hideStackFrames(\n  (offset\x2C length\x2C byteLength) => {\n    if (offset > byteLength) {\n      throw new ERR_OUT_OF_RANGE('offset'\x2C `<= ${byteLength}`\x2C offset);\n    }\n\n    if (length > byteLength - offset) {\n      throw new ERR_OUT_OF_RANGE('length'\x2C `<= ${byteLength - offset}`\x2C length);\n    }\n\n    if (length < 0) {\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\n    }\n\n    validateInt32(length\x2C 'length'\x2C 0);\n  }\n);\n\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\n  if (typeof path !== 'string' && !isUint8Array(path)) {\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\n  }\n\n  const err = nullCheck(path\x2C propName\x2C false);\n\n  if (err !== undefined) {\n    throw err;\n  }\n});\n\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\n  const path = toPathIfFileURL(fileURLOrPath);\n  validatePath(path\x2C propName);\n  return path;\n});\n\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\n  if (ObjectIs(fd\x2C -0)) {\n    return 0;\n  }\n\n  validateInt32(fd\x2C propName\x2C 0);\n\n  return fd;\n});\n\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\n  if (!ArrayIsArray(buffers))\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\n\n  for (let i = 0; i < buffers.length; i++) {\n    if (!isArrayBufferView(buffers[i]))\n      throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\n  }\n\n  return buffers;\n});\n\nlet nonPortableTemplateWarn = true;\n\nfunction warnOnNonPortableTemplate(template) {\n  // Template strings passed to the mkdtemp() family of functions should not\n  // end with 'X' because they are handled inconsistently across platforms.\n  if (nonPortableTemplateWarn && StringPrototypeEndsWith(template\x2C 'X')) {\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\n                        'For details see: https://nodejs.org/api/fs.html');\n    nonPortableTemplateWarn = false;\n  }\n}\n\nconst defaultCpOptions = {\n  dereference: false\x2C\n  errorOnExist: false\x2C\n  filter: undefined\x2C\n  force: true\x2C\n  preserveTimestamps: false\x2C\n  recursive: false\x2C\n  verbatimSymlinks: false\x2C\n};\n\nconst defaultRmOptions = {\n  recursive: false\x2C\n  force: false\x2C\n  retryDelay: 100\x2C\n  maxRetries: 0\n};\n\nconst defaultRmdirOptions = {\n  retryDelay: 100\x2C\n  maxRetries: 0\x2C\n  recursive: false\x2C\n};\n\nconst validateCpOptions = hideStackFrames((options) => {\n  if (options === undefined)\n    return { ...defaultCpOptions };\n  validateObject(options\x2C 'options');\n  options = { ...defaultCpOptions\x2C ...options };\n  validateBoolean(options.dereference\x2C 'options.dereference');\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\n  validateBoolean(options.force\x2C 'options.force');\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\n  validateBoolean(options.recursive\x2C 'options.recursive');\n  validateBoolean(options.verbatimSymlinks\x2C 'options.verbatimSymlinks');\n  if (options.dereference === true && options.verbatimSymlinks === true) {\n    throw new ERR_INCOMPATIBLE_OPTION_PAIR('dereference'\x2C 'verbatimSymlinks');\n  }\n  if (options.filter !== undefined) {\n    validateFunction(options.filter\x2C 'options.filter');\n  }\n  return options;\n});\n\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\n  validateBoolean(options.force\x2C 'options.force');\n\n  lazyLoadFs().lstat(path\x2C (err\x2C stats) => {\n    if (err) {\n      if (options.force && err.code === 'ENOENT') {\n        return cb(null\x2C options);\n      }\n      return cb(err\x2C options);\n    }\n\n    if (expectDir && !stats.isDirectory()) {\n      return cb(false);\n    }\n\n    if (stats.isDirectory() && !options.recursive) {\n      return cb(new ERR_FS_EISDIR({\n        code: 'EISDIR'\x2C\n        message: 'is a directory'\x2C\n        path\x2C\n        syscall: 'rm'\x2C\n        errno: EISDIR\n      }));\n    }\n    return cb(null\x2C options);\n  });\n});\n\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\n  validateBoolean(options.force\x2C 'options.force');\n\n  if (!options.force || expectDir || !options.recursive) {\n    const isDirectory = lazyLoadFs()\n      .lstatSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\n\n    if (expectDir && !isDirectory) {\n      return false;\n    }\n\n    if (isDirectory && !options.recursive) {\n      throw new ERR_FS_EISDIR({\n        code: 'EISDIR'\x2C\n        message: 'is a directory'\x2C\n        path\x2C\n        syscall: 'rm'\x2C\n        errno: EISDIR\n      });\n    }\n  }\n\n  return options;\n});\n\nlet recursiveRmdirWarned = process.noDeprecation;\nfunction emitRecursiveRmdirWarning() {\n  if (!recursiveRmdirWarned) {\n    process.emitWarning(\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\n      'DeprecationWarning'\x2C\n      'DEP0147'\n    );\n    recursiveRmdirWarned = true;\n  }\n}\n\nconst validateRmdirOptions = hideStackFrames(\n  (options\x2C defaults = defaultRmdirOptions) => {\n    if (options === undefined)\n      return defaults;\n    validateObject(options\x2C 'options');\n\n    options = { ...defaults\x2C ...options };\n\n    validateBoolean(options.recursive\x2C 'options.recursive');\n    validateInt32(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\n    validateUint32(options.maxRetries\x2C 'options.maxRetries');\n\n    return options;\n  });\n\nconst getValidMode = hideStackFrames((mode\x2C type) => {\n  let min = kMinimumAccessMode;\n  let max = kMaximumAccessMode;\n  let def = F_OK;\n  if (type === 'copyFile') {\n    min = kMinimumCopyMode;\n    max = kMaximumCopyMode;\n    def = mode || kDefaultCopyMode;\n  } else {\n    assert(type === 'access');\n  }\n  if (mode == null) {\n    return def;\n  }\n  validateInteger(mode\x2C 'mode'\x2C min\x2C max);\n  return mode;\n});\n\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\n  if (typeof buffer !== 'string') {\n    throw new ERR_INVALID_ARG_TYPE(\n      name\x2C\n      ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n      buffer\n    );\n  }\n});\n\nconst validatePosition = hideStackFrames((position\x2C name) => {\n  if (typeof position === 'number') {\n    validateInteger(position\x2C name);\n  } else if (typeof position === 'bigint') {\n    if (!(position >= -(2n ** 63n) && position <= 2n ** 63n - 1n)) {\n      throw new ERR_OUT_OF_RANGE(name\x2C\n                                 `>= ${-(2n ** 63n)} && <= ${2n ** 63n - 1n}`\x2C\n                                 position);\n    }\n  } else {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C ['integer'\x2C 'bigint']\x2C position);\n  }\n});\n\nmodule.exports = {\n  constants: {\n    kIoMaxLength\x2C\n    kMaxUserId\x2C\n    kReadFileBufferLength\x2C\n    kReadFileUnknownBufferLength\x2C\n    kWriteFileMaxChunkSize\x2C\n  }\x2C\n  assertEncoding\x2C\n  BigIntStats\x2C  // for testing\n  copyObject\x2C\n  Dirent\x2C\n  emitRecursiveRmdirWarning\x2C\n  getDirent\x2C\n  getDirents\x2C\n  getOptions\x2C\n  getValidatedFd\x2C\n  getValidatedPath\x2C\n  getValidMode\x2C\n  handleErrorFromBinding\x2C\n  nullCheck\x2C\n  preprocessSymlinkDestination\x2C\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\n  getStatFsFromBinding\x2C\n  getStatsFromBinding\x2C\n  stringToFlags\x2C\n  stringToSymlinkType\x2C\n  Stats\x2C\n  toUnixTimestamp\x2C\n  validateBufferArray\x2C\n  validateCpOptions\x2C\n  validateOffsetLengthRead\x2C\n  validateOffsetLengthWrite\x2C\n  validatePath\x2C\n  validatePosition\x2C\n  validateRmOptions\x2C\n  validateRmOptionsSync\x2C\n  validateRmdirOptions\x2C\n  validateStringAfterArrayBufferView\x2C\n  warnOnNonPortableTemplate\n};\n
code-source-info,0x3f1a4fb98386,56,7239,7845,C9O7266C16O7284C27O7344C29O7366C30O7374C36O7413C41O7457C43O7481C47O7496C54O7531C60O7570C78O7576C83O7570C84O7663C91O7672C96O7690C99O7713C104O7690C108O7739C114O7767C119O7795C127O7767C132O7828C134O7843,,
code-creation,JS,10,59000,0x3f1a4fb9a32e,48,assertEncoding node:internal/fs/utils:154:24,0x3b5f1daf3148,~
code-source-info,0x3f1a4fb9a32e,56,3548,3725,C0O3563C6O3580C9O3587C14O3587C21O3630C24O3657C40O3663C45O3657C47O3724,,
tick,0x1a535b9cc,59000,0,0x0,3,0x0,0x3f1a4fb919e4,0x3f1a4fb91531,0x3f1a4fb90db1,0x3f1a4fb9070f,0x3f1a4fb90217,0x16645fa759a9
code-creation,JS,10,59083,0x3f1a4fb9a446,20,toPathIfFileURL node:internal/url:1569:25,0x286f2a27a898,~
script-source,46,node:internal/url,'use strict';\n\nconst {\n  Array\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeReduce\x2C\n  ArrayPrototypeSlice\x2C\n  FunctionPrototypeBind\x2C\n  Int8Array\x2C\n  IteratorPrototype\x2C\n  Number\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertySymbols\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectKeys\x2C\n  ReflectApply\x2C\n  ReflectGetOwnPropertyDescriptor\x2C\n  ReflectOwnKeys\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  String\x2C\n  StringPrototypeCharAt\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeCodePointAt\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n  Symbol\x2C\n  SymbolIterator\x2C\n  SymbolToStringTag\x2C\n  decodeURIComponent\x2C\n} = primordials;\n\nconst { inspect } = require('internal/util/inspect');\nconst {\n  encodeStr\x2C\n  hexTable\x2C\n  isHexTable\n} = require('internal/querystring');\n\nconst {\n  getConstructorOf\x2C\n  removeColors\x2C\n  toUSVString\x2C\n  kEnumerableProperty\x2C\n  SideEffectFreeRegExpPrototypeSymbolReplace\x2C\n} = require('internal/util');\n\nconst {\n  codes: {\n    ERR_ARG_NOT_ITERABLE\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_FILE_URL_HOST\x2C\n    ERR_INVALID_FILE_URL_PATH\x2C\n    ERR_INVALID_THIS\x2C\n    ERR_INVALID_TUPLE\x2C\n    ERR_INVALID_URL\x2C\n    ERR_INVALID_URL_SCHEME\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_NO_CRYPTO\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  CHAR_AMPERSAND\x2C\n  CHAR_BACKWARD_SLASH\x2C\n  CHAR_EQUAL\x2C\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_LOWERCASE_A\x2C\n  CHAR_LOWERCASE_Z\x2C\n  CHAR_PERCENT\x2C\n  CHAR_PLUS\n} = require('internal/constants');\nconst path = require('path');\n\nconst {\n  validateFunction\x2C\n  validateObject\x2C\n} = require('internal/validators');\n\nconst querystring = require('querystring');\n\nconst { platform } = process;\nconst isWindows = platform === 'win32';\n\nconst {\n  domainToASCII: _domainToASCII\x2C\n  domainToUnicode: _domainToUnicode\x2C\n  encodeAuth\x2C\n  parse\x2C\n  setURLConstructor\x2C\n  URL_FLAGS_CANNOT_BE_BASE\x2C\n  URL_FLAGS_HAS_FRAGMENT\x2C\n  URL_FLAGS_HAS_HOST\x2C\n  URL_FLAGS_HAS_PASSWORD\x2C\n  URL_FLAGS_HAS_PATH\x2C\n  URL_FLAGS_HAS_QUERY\x2C\n  URL_FLAGS_HAS_USERNAME\x2C\n  URL_FLAGS_IS_DEFAULT_SCHEME_PORT\x2C\n  URL_FLAGS_SPECIAL\x2C\n  kFragment\x2C\n  kHost\x2C\n  kHostname\x2C\n  kPathStart\x2C\n  kPort\x2C\n  kQuery\x2C\n  kSchemeStart\n} = internalBinding('url');\n\nconst {\n  storeDataObject\x2C\n  revokeDataObject\x2C\n} = internalBinding('blob');\n\nconst FORWARD_SLASH = /\\//g;\n\nconst context = Symbol('context');\nconst cannotBeBase = Symbol('cannot-be-base');\nconst cannotHaveUsernamePasswordPort =\n    Symbol('cannot-have-username-password-port');\nconst special = Symbol('special');\nconst searchParams = Symbol('query');\nconst kFormat = Symbol('format');\n\nlet blob;\nlet cryptoRandom;\n\nfunction lazyBlob() {\n  blob ??= require('internal/blob');\n  return blob;\n}\n\nfunction lazyCryptoRandom() {\n  try {\n    cryptoRandom ??= require('internal/crypto/random');\n  } catch {\n    // If Node.js built without crypto support\x2C we'll fall\n    // through here and handle it later.\n  }\n  return cryptoRandom;\n}\n\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#concept-origin-opaque\nconst kOpaqueOrigin = 'null';\n\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#ascii-serialisation-of-an-origin\nfunction serializeTupleOrigin(scheme\x2C host\x2C port) {\n  return `${scheme}//${host}${port === null ? '' : `:${port}`}`;\n}\n\n// This class provides the internal state of a URL object. An instance of this\n// class is stored in every URL object and is accessed internally by setters\n// and getters. It roughly corresponds to the concept of a URL record in the\n// URL Standard\x2C with a few differences. It is also the object transported to\n// the C++ binding.\n// Refs: https://url.spec.whatwg.org/#concept-url\nclass URLContext {\n  constructor() {\n    this.flags = 0;\n    this.scheme = ':';\n    this.username = '';\n    this.password = '';\n    this.host = null;\n    this.port = null;\n    this.path = [];\n    this.query = null;\n    this.fragment = null;\n  }\n}\n\nfunction isURLSearchParams(self) {\n  return self && self[searchParams] && !self[searchParams][searchParams];\n}\n\nclass URLSearchParams {\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\n  // accordance with Web IDL spec.\n  constructor(init = undefined) {\n    if (init === null || init === undefined) {\n      this[searchParams] = [];\n    } else if (typeof init === 'object' || typeof init === 'function') {\n      const method = init[SymbolIterator];\n      if (method === this[SymbolIterator]) {\n        // While the spec does not have this branch\x2C we can use it as a\n        // shortcut to avoid having to go through the costly generic iterator.\n        const childParams = init[searchParams];\n        this[searchParams] = childParams.slice();\n      } else if (method !== null && method !== undefined) {\n        if (typeof method !== 'function') {\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\n        }\n\n        // Sequence<sequence<USVString>>\n        // Note: per spec we have to first exhaust the lists then process them\n        const pairs = [];\n        for (const pair of init) {\n          if ((typeof pair !== 'object' && typeof pair !== 'function') ||\n              pair === null ||\n              typeof pair[SymbolIterator] !== 'function') {\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\n          }\n          const convertedPair = [];\n          for (const element of pair)\n            ArrayPrototypePush(convertedPair\x2C toUSVString(element));\n          ArrayPrototypePush(pairs\x2C convertedPair);\n        }\n\n        this[searchParams] = [];\n        for (const pair of pairs) {\n          if (pair.length !== 2) {\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\n          }\n          ArrayPrototypePush(this[searchParams]\x2C pair[0]\x2C pair[1]);\n        }\n      } else {\n        // Record<USVString\x2C USVString>\n        // Need to use reflection APIs for full spec compliance.\n        const visited = {};\n        this[searchParams] = [];\n        const keys = ReflectOwnKeys(init);\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i];\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\n          if (desc !== undefined && desc.enumerable) {\n            const typedKey = toUSVString(key);\n            const typedValue = toUSVString(init[key]);\n\n            // Two different key may result same after `toUSVString()`\x2C we only\n            // leave the later one. Refers to WPT.\n            if (visited[typedKey] !== undefined) {\n              this[searchParams][visited[typedKey]] = typedValue;\n            } else {\n              visited[typedKey] = ArrayPrototypePush(this[searchParams]\x2C\n                                                     typedKey\x2C\n                                                     typedValue) - 1;\n            }\n          }\n        }\n      }\n    } else {\n      // USVString\n      init = toUSVString(init);\n      if (init[0] === '?') init = init.slice(1);\n      initSearchParams(this\x2C init);\n    }\n\n    // "associated url object"\n    this[context] = null;\n  }\n\n  [inspect.custom](recurseTimes\x2C ctx) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\n      return ctx.stylize('[Object]'\x2C 'special');\n\n    const separator = '\x2C ';\n    const innerOpts = { ...ctx };\n    if (recurseTimes !== null) {\n      innerOpts.depth = recurseTimes - 1;\n    }\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\n\n    const list = this[searchParams];\n    const output = [];\n    for (let i = 0; i < list.length; i += 2)\n      ArrayPrototypePush(\n        output\x2C\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\n\n    const length = ArrayPrototypeReduce(\n      output\x2C\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\n      -separator.length\n    );\n    if (length > ctx.breakLength) {\n      return `${this.constructor.name} {\\n` +\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\n    } else if (output.length) {\n      return `${this.constructor.name} { ` +\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\n    }\n    return `${this.constructor.name} {}`;\n  }\n\n  append(name\x2C value) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 2) {\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\n    }\n\n    name = toUSVString(name);\n    value = toUSVString(value);\n    ArrayPrototypePush(this[searchParams]\x2C name\x2C value);\n    update(this[context]\x2C this);\n  }\n\n  delete(name) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this[searchParams];\n    name = toUSVString(name);\n    for (let i = 0; i < list.length;) {\n      const cur = list[i];\n      if (cur === name) {\n        list.splice(i\x2C 2);\n      } else {\n        i += 2;\n      }\n    }\n    update(this[context]\x2C this);\n  }\n\n  get(name) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this[searchParams];\n    name = toUSVString(name);\n    for (let i = 0; i < list.length; i += 2) {\n      if (list[i] === name) {\n        return list[i + 1];\n      }\n    }\n    return null;\n  }\n\n  getAll(name) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this[searchParams];\n    const values = [];\n    name = toUSVString(name);\n    for (let i = 0; i < list.length; i += 2) {\n      if (list[i] === name) {\n        values.push(list[i + 1]);\n      }\n    }\n    return values;\n  }\n\n  has(name) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this[searchParams];\n    name = toUSVString(name);\n    for (let i = 0; i < list.length; i += 2) {\n      if (list[i] === name) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  set(name\x2C value) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 2) {\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\n    }\n\n    const list = this[searchParams];\n    name = toUSVString(name);\n    value = toUSVString(value);\n\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\n    // the value of the first such name-value pair to `value` and remove the\n    // others.\n    let found = false;\n    for (let i = 0; i < list.length;) {\n      const cur = list[i];\n      if (cur === name) {\n        if (!found) {\n          list[i + 1] = value;\n          found = true;\n          i += 2;\n        } else {\n          list.splice(i\x2C 2);\n        }\n      } else {\n        i += 2;\n      }\n    }\n\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\n    // is `value`\x2C to `list`.\n    if (!found) {\n      ArrayPrototypePush(list\x2C name\x2C value);\n    }\n\n    update(this[context]\x2C this);\n  }\n\n  sort() {\n    const a = this[searchParams];\n    const len = a.length;\n\n    if (len <= 2) {\n      // Nothing needs to be done.\n    } else if (len < 100) {\n      // 100 is found through testing.\n      // Simple stable in-place insertion sort\n      // Derived from v8/src/js/array.js\n      for (let i = 2; i < len; i += 2) {\n        const curKey = a[i];\n        const curVal = a[i + 1];\n        let j;\n        for (j = i - 2; j >= 0; j -= 2) {\n          if (a[j] > curKey) {\n            a[j + 2] = a[j];\n            a[j + 3] = a[j + 1];\n          } else {\n            break;\n          }\n        }\n        a[j + 2] = curKey;\n        a[j + 3] = curVal;\n      }\n    } else {\n      // Bottom-up iterative stable merge sort\n      const lBuffer = new Array(len);\n      const rBuffer = new Array(len);\n      for (let step = 2; step < len; step *= 2) {\n        for (let start = 0; start < len - 2; start += 2 * step) {\n          const mid = start + step;\n          let end = mid + step;\n          end = end < len ? end : len;\n          if (mid > end)\n            continue;\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\n        }\n      }\n    }\n\n    update(this[context]\x2C this);\n  }\n\n  // https://heycam.github.io/webidl/#es-iterators\n  // Define entries here rather than [Symbol.iterator] as the function name\n  // must be set to `entries`.\n  entries() {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return createSearchParamsIterator(this\x2C 'key+value');\n  }\n\n  forEach(callback\x2C thisArg = undefined) {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    validateFunction(callback\x2C 'callback');\n\n    let list = this[searchParams];\n\n    let i = 0;\n    while (i < list.length) {\n      const key = list[i];\n      const value = list[i + 1];\n      callback.call(thisArg\x2C value\x2C key\x2C this);\n      // In case the URL object's `search` is updated\n      list = this[searchParams];\n      i += 2;\n    }\n  }\n\n  // https://heycam.github.io/webidl/#es-iterable\n  keys() {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return createSearchParamsIterator(this\x2C 'key');\n  }\n\n  values() {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return createSearchParamsIterator(this\x2C 'value');\n  }\n\n  // https://heycam.github.io/webidl/#es-stringifier\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\n  toString() {\n    if (!isURLSearchParams(this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return serializeParams(this[searchParams]);\n  }\n}\n\nObjectDefineProperties(URLSearchParams.prototype\x2C {\n  append: kEnumerableProperty\x2C\n  delete: kEnumerableProperty\x2C\n  get: kEnumerableProperty\x2C\n  getAll: kEnumerableProperty\x2C\n  has: kEnumerableProperty\x2C\n  set: kEnumerableProperty\x2C\n  sort: kEnumerableProperty\x2C\n  entries: kEnumerableProperty\x2C\n  forEach: kEnumerableProperty\x2C\n  keys: kEnumerableProperty\x2C\n  values: kEnumerableProperty\x2C\n  toString: kEnumerableProperty\x2C\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URLSearchParams' }\x2C\n\n  // https://heycam.github.io/webidl/#es-iterable-entries\n  [SymbolIterator]: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    writable: true\x2C\n    value: URLSearchParams.prototype.entries\x2C\n  }\x2C\n});\n\nfunction onParseComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                         host\x2C port\x2C path\x2C query\x2C fragment) {\n  const ctx = this[context];\n  ctx.flags = flags;\n  ctx.scheme = protocol;\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\n  ctx.port = port;\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\n  ctx.query = query;\n  ctx.fragment = fragment;\n  ctx.host = host;\n  if (!this[searchParams]) { // Invoked from URL constructor\n    this[searchParams] = new URLSearchParams();\n    this[searchParams][context] = this;\n  }\n  initSearchParams(this[searchParams]\x2C query);\n}\n\nfunction onParseError(input\x2C flags) {\n  throw new ERR_INVALID_URL(input);\n}\n\nfunction onParseProtocolComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\n  const ctx = this[context];\n  if ((flags & URL_FLAGS_SPECIAL) !== 0) {\n    ctx.flags |= URL_FLAGS_SPECIAL;\n  } else {\n    ctx.flags &= ~URL_FLAGS_SPECIAL;\n  }\n  ctx.scheme = protocol;\n  ctx.port = port;\n}\n\nfunction onParseHostnameComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\n  const ctx = this[context];\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\n    ctx.host = host;\n    ctx.flags |= URL_FLAGS_HAS_HOST;\n  } else {\n    ctx.host = null;\n    ctx.flags &= ~URL_FLAGS_HAS_HOST;\n  }\n}\n\nfunction onParsePortComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\n  this[context].port = port;\n}\n\nfunction onParseHostComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\n  ReflectApply(onParseHostnameComplete\x2C this\x2C arguments);\n  if (port !== null || ((flags & URL_FLAGS_IS_DEFAULT_SCHEME_PORT) !== 0))\n    ReflectApply(onParsePortComplete\x2C this\x2C arguments);\n}\n\nfunction onParsePathComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\n  const ctx = this[context];\n  if ((flags & URL_FLAGS_HAS_PATH) !== 0) {\n    ctx.path = path;\n    ctx.flags |= URL_FLAGS_HAS_PATH;\n  } else {\n    ctx.path = [];\n    ctx.flags &= ~URL_FLAGS_HAS_PATH;\n  }\n\n  // The C++ binding may set host to empty string.\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\n    ctx.host = host;\n    ctx.flags |= URL_FLAGS_HAS_HOST;\n  }\n}\n\nfunction onParseSearchComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                               host\x2C port\x2C path\x2C query\x2C fragment) {\n  this[context].query = query;\n}\n\nfunction onParseHashComplete(flags\x2C protocol\x2C username\x2C password\x2C\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\n  this[context].fragment = fragment;\n}\n\nfunction isURLThis(self) {\n  return (self !== undefined && self !== null && self[context] !== undefined);\n}\n\nclass URL {\n  constructor(input\x2C base = undefined) {\n    // toUSVString is not needed.\n    input = `${input}`;\n    let base_context;\n    if (base !== undefined) {\n      base_context = new URL(base)[context];\n    }\n    this[context] = new URLContext();\n    parse(input\x2C -1\x2C base_context\x2C undefined\x2C\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C\n          FunctionPrototypeBind(onParseError\x2C this\x2C input));\n  }\n\n  get [special]() {\n    return (this[context].flags & URL_FLAGS_SPECIAL) !== 0;\n  }\n\n  get [cannotBeBase]() {\n    return (this[context].flags & URL_FLAGS_CANNOT_BE_BASE) !== 0;\n  }\n\n  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port\n  get [cannotHaveUsernamePasswordPort]() {\n    const { host\x2C scheme } = this[context];\n    return ((host == null || host === '') ||\n            this[cannotBeBase] ||\n            scheme === 'file:');\n  }\n\n  [inspect.custom](depth\x2C opts) {\n    if (this == null ||\n        ObjectGetPrototypeOf(this[context]) !== URLContext.prototype) {\n      throw new ERR_INVALID_THIS('URL');\n    }\n\n    if (typeof depth === 'number' && depth < 0)\n      return this;\n\n    const constructor = getConstructorOf(this) || URL;\n    const obj = { __proto__: { constructor } };\n\n    obj.href = this.href;\n    obj.origin = this.origin;\n    obj.protocol = this.protocol;\n    obj.username = this.username;\n    obj.password = this.password;\n    obj.host = this.host;\n    obj.hostname = this.hostname;\n    obj.port = this.port;\n    obj.pathname = this.pathname;\n    obj.search = this.search;\n    obj.searchParams = this.searchParams;\n    obj.hash = this.hash;\n\n    if (opts.showHidden) {\n      obj.cannotBeBase = this[cannotBeBase];\n      obj.special = this[special];\n      obj[context] = this[context];\n    }\n\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\n  }\n\n  [kFormat](options) {\n    if (options)\n      validateObject(options\x2C 'options');\n\n    options = {\n      fragment: true\x2C\n      unicode: false\x2C\n      search: true\x2C\n      auth: true\x2C\n      ...options\n    };\n    const ctx = this[context];\n    // https://url.spec.whatwg.org/#url-serializing\n    let ret = ctx.scheme;\n    if (ctx.host !== null) {\n      ret += '//';\n      const has_username = ctx.username !== '';\n      const has_password = ctx.password !== '';\n      if (options.auth && (has_username || has_password)) {\n        if (has_username)\n          ret += ctx.username;\n        if (has_password)\n          ret += `:${ctx.password}`;\n        ret += '@';\n      }\n      ret += options.unicode ?\n        domainToUnicode(ctx.host) : ctx.host;\n      if (ctx.port !== null)\n        ret += `:${ctx.port}`;\n    }\n    if (this[cannotBeBase]) {\n      ret += ctx.path[0];\n    } else {\n      if (ctx.host === null && ctx.path.length > 1 && ctx.path[0] === '') {\n        ret += '/.';\n      }\n      if (ctx.path.length) {\n        ret += '/' + ArrayPrototypeJoin(ctx.path\x2C '/');\n      }\n    }\n    if (options.search && ctx.query !== null)\n      ret += `?${ctx.query}`;\n    if (options.fragment && ctx.fragment !== null)\n      ret += `#${ctx.fragment}`;\n    return ret;\n  }\n\n  // https://heycam.github.io/webidl/#es-stringifier\n  toString() {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    return this[kFormat]();\n  }\n\n  get href() {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    return this[kFormat]();\n  }\n\n  set href(input) {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    // toUSVString is not needed.\n    input = `${input}`;\n    parse(input\x2C -1\x2C undefined\x2C undefined\x2C\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C\n          FunctionPrototypeBind(onParseError\x2C this\x2C input));\n  }\n\n  // readonly\n  get origin() {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    // Refs: https://url.spec.whatwg.org/#concept-url-origin\n    const ctx = this[context];\n    switch (ctx.scheme) {\n      case 'blob:':\n        if (ctx.path.length > 0) {\n          try {\n            return (new URL(ctx.path[0])).origin;\n          } catch {\n            // Fall through... do nothing\n          }\n        }\n        return kOpaqueOrigin;\n      case 'ftp:':\n      case 'http:':\n      case 'https:':\n      case 'ws:':\n      case 'wss:':\n        return serializeTupleOrigin(ctx.scheme\x2C ctx.host\x2C ctx.port);\n    }\n    return kOpaqueOrigin;\n  }\n\n  get protocol() {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    return this[context].scheme;\n  }\n\n  set protocol(scheme) {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    // toUSVString is not needed.\n    scheme = `${scheme}`;\n    if (scheme.length === 0)\n      return;\n    const ctx = this[context];\n    parse(scheme\x2C kSchemeStart\x2C null\x2C ctx\x2C\n          FunctionPrototypeBind(onParseProtocolComplete\x2C this));\n  }\n\n  get username() {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    return this[context].username;\n  }\n\n  set username(username) {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    // toUSVString is not needed.\n    username = `${username}`;\n    if (this[cannotHaveUsernamePasswordPort])\n      return;\n    const ctx = this[context];\n    if (username === '') {\n      ctx.username = '';\n      ctx.flags &= ~URL_FLAGS_HAS_USERNAME;\n      return;\n    }\n    ctx.username = encodeAuth(username);\n    ctx.flags |= URL_FLAGS_HAS_USERNAME;\n  }\n\n  get password() {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    return this[context].password;\n  }\n\n  set password(password) {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    // toUSVString is not needed.\n    password = `${password}`;\n    if (this[cannotHaveUsernamePasswordPort])\n      return;\n    const ctx = this[context];\n    if (password === '') {\n      ctx.password = '';\n      ctx.flags &= ~URL_FLAGS_HAS_PASSWORD;\n      return;\n    }\n    ctx.password = encodeAuth(password);\n    ctx.flags |= URL_FLAGS_HAS_PASSWORD;\n  }\n\n  get host() {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    const ctx = this[context];\n    let ret = ctx.host || '';\n    if (ctx.port !== null)\n      ret += `:${ctx.port}`;\n    return ret;\n  }\n\n  set host(host) {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    const ctx = this[context];\n    // toUSVString is not needed.\n    host = `${host}`;\n    if (this[cannotBeBase]) {\n      // Cannot set the host if cannot-be-base is set\n      return;\n    }\n    parse(host\x2C kHost\x2C null\x2C ctx\x2C\n          FunctionPrototypeBind(onParseHostComplete\x2C this));\n  }\n\n  get hostname() {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    return this[context].host || '';\n  }\n\n  set hostname(host) {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    const ctx = this[context];\n    // toUSVString is not needed.\n    host = `${host}`;\n    if (this[cannotBeBase]) {\n      // Cannot set the host if cannot-be-base is set\n      return;\n    }\n    parse(host\x2C kHostname\x2C null\x2C ctx\x2C onParseHostnameComplete.bind(this));\n  }\n\n  get port() {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    const port = this[context].port;\n    return port === null ? '' : String(port);\n  }\n\n  set port(port) {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    // toUSVString is not needed.\n    port = `${port}`;\n    if (this[cannotHaveUsernamePasswordPort])\n      return;\n    const ctx = this[context];\n    if (port === '') {\n      ctx.port = null;\n      return;\n    }\n    parse(port\x2C kPort\x2C null\x2C ctx\x2C\n          FunctionPrototypeBind(onParsePortComplete\x2C this));\n  }\n\n  get pathname() {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    const ctx = this[context];\n    if (this[cannotBeBase])\n      return ctx.path[0];\n    if (ctx.path.length === 0)\n      return '';\n    return `/${ArrayPrototypeJoin(ctx.path\x2C '/')}`;\n  }\n\n  set pathname(path) {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    // toUSVString is not needed.\n    path = `${path}`;\n    if (this[cannotBeBase])\n      return;\n    parse(path\x2C kPathStart\x2C null\x2C this[context]\x2C\n          onParsePathComplete.bind(this));\n  }\n\n  get search() {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    const { query } = this[context];\n    if (query === null || query === '')\n      return '';\n    return `?${query}`;\n  }\n\n  set search(search) {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    const ctx = this[context];\n    search = toUSVString(search);\n    if (search === '') {\n      ctx.query = null;\n      ctx.flags &= ~URL_FLAGS_HAS_QUERY;\n    } else {\n      if (search[0] === '?') search = StringPrototypeSlice(search\x2C 1);\n      ctx.query = '';\n      ctx.flags |= URL_FLAGS_HAS_QUERY;\n      if (search) {\n        parse(search\x2C kQuery\x2C null\x2C ctx\x2C\n              FunctionPrototypeBind(onParseSearchComplete\x2C this));\n      }\n    }\n    initSearchParams(this[searchParams]\x2C search);\n  }\n\n  // readonly\n  get searchParams() {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    return this[searchParams];\n  }\n\n  get hash() {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    const { fragment } = this[context];\n    if (fragment === null || fragment === '')\n      return '';\n    return `#${fragment}`;\n  }\n\n  set hash(hash) {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    const ctx = this[context];\n    // toUSVString is not needed.\n    hash = `${hash}`;\n    if (!hash) {\n      ctx.fragment = null;\n      ctx.flags &= ~URL_FLAGS_HAS_FRAGMENT;\n      return;\n    }\n    if (hash[0] === '#') hash = StringPrototypeSlice(hash\x2C 1);\n    ctx.fragment = '';\n    ctx.flags |= URL_FLAGS_HAS_FRAGMENT;\n    parse(hash\x2C kFragment\x2C null\x2C ctx\x2C\n          FunctionPrototypeBind(onParseHashComplete\x2C this));\n  }\n\n  toJSON() {\n    if (!isURLThis(this))\n      throw new ERR_INVALID_THIS('URL');\n    return this[kFormat]();\n  }\n\n  static createObjectURL(obj) {\n    const cryptoRandom = lazyCryptoRandom();\n    if (cryptoRandom === undefined)\n      throw new ERR_NO_CRYPTO();\n\n    // Yes\x2C lazy loading is annoying but because of circular\n    // references between the url\x2C internal/blob\x2C and buffer\n    // modules\x2C lazy loading here makes sure that things work.\n    const blob = lazyBlob();\n    if (!blob.isBlob(obj))\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\n\n    const id = cryptoRandom.randomUUID();\n\n    storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\n\n    return `blob:nodedata:${id}`;\n  }\n\n  static revokeObjectURL(url) {\n    url = `${url}`;\n    try {\n      const parsed = new URL(url);\n      const split = StringPrototypeSplit(parsed.pathname\x2C ':');\n      if (split.length === 2)\n        revokeDataObject(split[1]);\n    } catch {\n      // If there's an error\x2C it's ignored.\n    }\n  }\n}\n\nObjectDefineProperties(URL.prototype\x2C {\n  [kFormat]: { __proto__: null\x2C configurable: false\x2C writable: false }\x2C\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URL' }\x2C\n  toString: kEnumerableProperty\x2C\n  href: kEnumerableProperty\x2C\n  origin: kEnumerableProperty\x2C\n  protocol: kEnumerableProperty\x2C\n  username: kEnumerableProperty\x2C\n  password: kEnumerableProperty\x2C\n  host: kEnumerableProperty\x2C\n  hostname: kEnumerableProperty\x2C\n  port: kEnumerableProperty\x2C\n  pathname: kEnumerableProperty\x2C\n  search: kEnumerableProperty\x2C\n  searchParams: kEnumerableProperty\x2C\n  hash: kEnumerableProperty\x2C\n  toJSON: kEnumerableProperty\x2C\n});\n\nObjectDefineProperties(URL\x2C {\n  createObjectURL: kEnumerableProperty\x2C\n  revokeObjectURL: kEnumerableProperty\x2C\n});\n\nfunction update(url\x2C params) {\n  if (!url)\n    return;\n\n  const ctx = url[context];\n  const serializedParams = params.toString();\n  if (serializedParams) {\n    ctx.query = serializedParams;\n    ctx.flags |= URL_FLAGS_HAS_QUERY;\n  } else {\n    ctx.query = null;\n    ctx.flags &= ~URL_FLAGS_HAS_QUERY;\n  }\n}\n\nfunction initSearchParams(url\x2C init) {\n  if (!init) {\n    url[searchParams] = [];\n    return;\n  }\n  url[searchParams] = parseParams(init);\n}\n\n// application/x-www-form-urlencoded parser\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\nfunction parseParams(qs) {\n  const out = [];\n  let pairStart = 0;\n  let lastPos = 0;\n  let seenSep = false;\n  let buf = '';\n  let encoded = false;\n  let encodeCheck = 0;\n  let i;\n  for (i = 0; i < qs.length; ++i) {\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\n\n    // Try matching key/value pair separator\n    if (code === CHAR_AMPERSAND) {\n      if (pairStart === i) {\n        // We saw an empty substring between pair separators\n        lastPos = pairStart = i + 1;\n        continue;\n      }\n\n      if (lastPos < i)\n        buf += qs.slice(lastPos\x2C i);\n      if (encoded)\n        buf = querystring.unescape(buf);\n      out.push(buf);\n\n      // If `buf` is the key\x2C add an empty value.\n      if (!seenSep)\n        out.push('');\n\n      seenSep = false;\n      buf = '';\n      encoded = false;\n      encodeCheck = 0;\n      lastPos = pairStart = i + 1;\n      continue;\n    }\n\n    // Try matching key/value separator (e.g. '=') if we haven't already\n    if (!seenSep && code === CHAR_EQUAL) {\n      // Key/value separator match!\n      if (lastPos < i)\n        buf += qs.slice(lastPos\x2C i);\n      if (encoded)\n        buf = querystring.unescape(buf);\n      out.push(buf);\n\n      seenSep = true;\n      buf = '';\n      encoded = false;\n      encodeCheck = 0;\n      lastPos = i + 1;\n      continue;\n    }\n\n    // Handle + and percent decoding.\n    if (code === CHAR_PLUS) {\n      if (lastPos < i)\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\n      buf += ' ';\n      lastPos = i + 1;\n    } else if (!encoded) {\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\n      // calls to string decoding functions\n      if (code === CHAR_PERCENT) {\n        encodeCheck = 1;\n      } else if (encodeCheck > 0) {\n        if (isHexTable[code] === 1) {\n          if (++encodeCheck === 3) {\n            encoded = true;\n          }\n        } else {\n          encodeCheck = 0;\n        }\n      }\n    }\n  }\n\n  // Deal with any leftover key or value data\n\n  // There is a trailing &. No more processing is needed.\n  if (pairStart === i)\n    return out;\n\n  if (lastPos < i)\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\n  if (encoded)\n    buf = querystring.unescape(buf);\n  ArrayPrototypePush(out\x2C buf);\n\n  // If `buf` is the key\x2C add an empty value.\n  if (!seenSep)\n    ArrayPrototypePush(out\x2C '');\n\n  return out;\n}\n\n// Adapted from querystring's implementation.\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\nconst noEscape = new Int8Array([\n/*\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\n*/\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\n]);\n\n// Special version of hexTable that uses `+` for U+0020 SPACE.\nconst paramHexTable = hexTable.slice();\nparamHexTable[0x20] = '+';\n\n// application/x-www-form-urlencoded serializer\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\nfunction serializeParams(array) {\n  const len = array.length;\n  if (len === 0)\n    return '';\n\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\n\n  for (let i = 2; i < len; i += 2) {\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\n    output += `&${encodedParam}=${encodedValue}`;\n  }\n\n  return output;\n}\n\n// Mainly to mitigate func-name-matching ESLint rule\nfunction defineIDLClass(proto\x2C classStr\x2C obj) {\n  // https://heycam.github.io/webidl/#dfn-class-string\n  ObjectDefineProperty(proto\x2C SymbolToStringTag\x2C {\n    __proto__: null\x2C\n    writable: false\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: classStr\n  });\n\n  // https://heycam.github.io/webidl/#es-operations\n  for (const key of ObjectKeys(obj)) {\n    ObjectDefineProperty(proto\x2C key\x2C {\n      __proto__: null\x2C\n      writable: true\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      value: obj[key]\n    });\n  }\n  for (const key of ObjectGetOwnPropertySymbols(obj)) {\n    ObjectDefineProperty(proto\x2C key\x2C {\n      __proto__: null\x2C\n      writable: true\x2C\n      enumerable: false\x2C\n      configurable: true\x2C\n      value: obj[key]\n    });\n  }\n}\n\n// for merge sort\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\n  const sizeLeft = mid - start;\n  const sizeRight = end - mid;\n  let l\x2C r\x2C o;\n\n  for (l = 0; l < sizeLeft; l++)\n    lBuffer[l] = out[start + l];\n  for (r = 0; r < sizeRight; r++)\n    rBuffer[r] = out[mid + r];\n\n  l = 0;\n  r = 0;\n  o = start;\n  while (l < sizeLeft && r < sizeRight) {\n    if (lBuffer[l] <= rBuffer[r]) {\n      out[o++] = lBuffer[l++];\n      out[o++] = lBuffer[l++];\n    } else {\n      out[o++] = rBuffer[r++];\n      out[o++] = rBuffer[r++];\n    }\n  }\n  while (l < sizeLeft)\n    out[o++] = lBuffer[l++];\n  while (r < sizeRight)\n    out[o++] = rBuffer[r++];\n}\n\n// https://heycam.github.io/webidl/#dfn-default-iterator-object\nfunction createSearchParamsIterator(target\x2C kind) {\n  const iterator = { __proto__: URLSearchParamsIteratorPrototype };\n  iterator[context] = {\n    target\x2C\n    kind\x2C\n    index: 0\n  };\n  return iterator;\n}\n\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\nconst URLSearchParamsIteratorPrototype = { __proto__: IteratorPrototype };\n\ndefineIDLClass(URLSearchParamsIteratorPrototype\x2C 'URLSearchParams Iterator'\x2C {\n  next() {\n    if (!this ||\n        ObjectGetPrototypeOf(this) !== URLSearchParamsIteratorPrototype) {\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\n    }\n\n    const {\n      target\x2C\n      kind\x2C\n      index\n    } = this[context];\n    const values = target[searchParams];\n    const len = values.length;\n    if (index >= len) {\n      return {\n        value: undefined\x2C\n        done: true\n      };\n    }\n\n    const name = values[index];\n    const value = values[index + 1];\n    this[context].index = index + 2;\n\n    let result;\n    if (kind === 'key') {\n      result = name;\n    } else if (kind === 'value') {\n      result = value;\n    } else {\n      result = [name\x2C value];\n    }\n\n    return {\n      value: result\x2C\n      done: false\n    };\n  }\x2C\n  [inspect.custom](recurseTimes\x2C ctx) {\n    if (this == null || this[context] == null || this[context].target == null)\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\n\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\n      return ctx.stylize('[Object]'\x2C 'special');\n\n    const innerOpts = { ...ctx };\n    if (recurseTimes !== null) {\n      innerOpts.depth = recurseTimes - 1;\n    }\n    const {\n      target\x2C\n      kind\x2C\n      index\n    } = this[context];\n    const output = ArrayPrototypeReduce(\n      ArrayPrototypeSlice(target[searchParams]\x2C index)\x2C\n      (prev\x2C cur\x2C i) => {\n        const key = i % 2 === 0;\n        if (kind === 'key' && key) {\n          ArrayPrototypePush(prev\x2C cur);\n        } else if (kind === 'value' && !key) {\n          ArrayPrototypePush(prev\x2C cur);\n        } else if (kind === 'key+value' && !key) {\n          ArrayPrototypePush(prev\x2C [target[searchParams][index + i - 1]\x2C cur]);\n        }\n        return prev;\n      }\x2C\n      []\n    );\n    const breakLn = StringPrototypeIncludes(inspect(output\x2C innerOpts)\x2C '\\n');\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\n    let outputStr;\n    if (breakLn) {\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\n    } else {\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\n    }\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\n  }\n});\n\nfunction domainToASCII(domain) {\n  if (arguments.length < 1)\n    throw new ERR_MISSING_ARGS('domain');\n\n  // toUSVString is not needed.\n  return _domainToASCII(`${domain}`);\n}\n\nfunction domainToUnicode(domain) {\n  if (arguments.length < 1)\n    throw new ERR_MISSING_ARGS('domain');\n\n  // toUSVString is not needed.\n  return _domainToUnicode(`${domain}`);\n}\n\n// Utility function that converts a URL object into an ordinary\n// options object as expected by the http.request and https.request\n// APIs.\nfunction urlToHttpOptions(url) {\n  const options = {\n    protocol: url.protocol\x2C\n    hostname: typeof url.hostname === 'string' &&\n              StringPrototypeStartsWith(url.hostname\x2C '[') ?\n      StringPrototypeSlice(url.hostname\x2C 1\x2C -1) :\n      url.hostname\x2C\n    hash: url.hash\x2C\n    search: url.search\x2C\n    pathname: url.pathname\x2C\n    path: `${url.pathname || ''}${url.search || ''}`\x2C\n    href: url.href\n  };\n  if (url.port !== '') {\n    options.port = Number(url.port);\n  }\n  if (url.username || url.password) {\n    options.auth = `${decodeURIComponent(url.username)}:${decodeURIComponent(url.password)}`;\n  }\n  return options;\n}\n\nfunction getPathFromURLWin32(url) {\n  const hostname = url.hostname;\n  let pathname = url.pathname;\n  for (let n = 0; n < pathname.length; n++) {\n    if (pathname[n] === '%') {\n      const third = StringPrototypeCodePointAt(pathname\x2C n + 2) | 0x20;\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\n        throw new ERR_INVALID_FILE_URL_PATH(\n          'must not include encoded \\\\ or / characters'\n        );\n      }\n    }\n  }\n  pathname = SideEffectFreeRegExpPrototypeSymbolReplace(FORWARD_SLASH\x2C pathname\x2C '\\\\');\n  pathname = decodeURIComponent(pathname);\n  if (hostname !== '') {\n    // If hostname is set\x2C then we have a UNC path\n    // Pass the hostname through domainToUnicode just in case\n    // it is an IDN using punycode encoding. We do not need to worry\n    // about percent encoding because the URL parser will have\n    // already taken care of that for us. Note that this only\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\n  }\n  // Otherwise\x2C it's a local path that requires a drive letter\n  const letter = StringPrototypeCodePointAt(pathname\x2C 1) | 0x20;\n  const sep = StringPrototypeCharAt(pathname\x2C 2);\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\n      (sep !== ':')) {\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\n  }\n  return StringPrototypeSlice(pathname\x2C 1);\n}\n\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\n  }\n  const pathname = url.pathname;\n  for (let n = 0; n < pathname.length; n++) {\n    if (pathname[n] === '%') {\n      const third = StringPrototypeCodePointAt(pathname\x2C n + 2) | 0x20;\n      if (pathname[n + 1] === '2' && third === 102) {\n        throw new ERR_INVALID_FILE_URL_PATH(\n          'must not include encoded / characters'\n        );\n      }\n    }\n  }\n  return decodeURIComponent(pathname);\n}\n\nfunction fileURLToPath(path) {\n  if (typeof path === 'string')\n    path = new URL(path);\n  else if (!isURLInstance(path))\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\n  if (path.protocol !== 'file:')\n    throw new ERR_INVALID_URL_SCHEME('file');\n  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\n}\n\n// The following characters are percent-encoded when converting from file path\n// to URL:\n// - %: The percent character is the only character not encoded by the\n//        `pathname` setter.\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\n//      character but the `pathname` setters replaces it by a forward slash.\n// - LF: The newline character is stripped out by the `pathname` setter.\n//       (See whatwg/url#419)\n// - CR: The carriage return character is also stripped out by the `pathname`\n//       setter.\n// - TAB: The tab character is also stripped out by the `pathname` setter.\nconst percentRegEx = /%/g;\nconst backslashRegEx = /\\\\/g;\nconst newlineRegEx = /\\n/g;\nconst carriageReturnRegEx = /\\r/g;\nconst tabRegEx = /\\t/g;\n\nfunction encodePathChars(filepath) {\n  if (StringPrototypeIncludes(filepath\x2C '%'))\n    filepath = RegExpPrototypeSymbolReplace(percentRegEx\x2C filepath\x2C '%25');\n  // In posix\x2C backslash is a valid character in paths:\n  if (!isWindows && StringPrototypeIncludes(filepath\x2C '\\\\'))\n    filepath = RegExpPrototypeSymbolReplace(backslashRegEx\x2C filepath\x2C '%5C');\n  if (StringPrototypeIncludes(filepath\x2C '\\n'))\n    filepath = RegExpPrototypeSymbolReplace(newlineRegEx\x2C filepath\x2C '%0A');\n  if (StringPrototypeIncludes(filepath\x2C '\\r'))\n    filepath = RegExpPrototypeSymbolReplace(carriageReturnRegEx\x2C filepath\x2C '%0D');\n  if (StringPrototypeIncludes(filepath\x2C '\\t'))\n    filepath = RegExpPrototypeSymbolReplace(tabRegEx\x2C filepath\x2C '%09');\n  return filepath;\n}\n\nfunction pathToFileURL(filepath) {\n  const outURL = new URL('file://');\n  if (isWindows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\n    // UNC path format: \\\\server\\share\\resource\n    const hostnameEndIndex = StringPrototypeIndexOf(filepath\x2C '\\\\'\x2C 2);\n    if (hostnameEndIndex === -1) {\n      throw new ERR_INVALID_ARG_VALUE(\n        'filepath'\x2C\n        filepath\x2C\n        'Missing UNC resource path'\n      );\n    }\n    if (hostnameEndIndex === 2) {\n      throw new ERR_INVALID_ARG_VALUE(\n        'filepath'\x2C\n        filepath\x2C\n        'Empty UNC servername'\n      );\n    }\n    const hostname = StringPrototypeSlice(filepath\x2C 2\x2C hostnameEndIndex);\n    outURL.hostname = domainToASCII(hostname);\n    outURL.pathname = encodePathChars(\n      RegExpPrototypeSymbolReplace(backslashRegEx\x2C StringPrototypeSlice(filepath\x2C hostnameEndIndex)\x2C '/'));\n  } else {\n    let resolved = path.resolve(filepath);\n    // path.resolve strips trailing slashes so we must add them back\n    const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\n                                                   filepath.length - 1);\n    if ((filePathLast === CHAR_FORWARD_SLASH ||\n         (isWindows && filePathLast === CHAR_BACKWARD_SLASH)) &&\n        resolved[resolved.length - 1] !== path.sep)\n      resolved += '/';\n    outURL.pathname = encodePathChars(resolved);\n  }\n  return outURL;\n}\n\nfunction isURLInstance(fileURLOrPath) {\n  return fileURLOrPath != null && fileURLOrPath.href && fileURLOrPath.origin;\n}\n\nfunction toPathIfFileURL(fileURLOrPath) {\n  if (!isURLInstance(fileURLOrPath))\n    return fileURLOrPath;\n  return fileURLToPath(fileURLOrPath);\n}\n\nfunction constructUrl(flags\x2C protocol\x2C username\x2C password\x2C\n                      host\x2C port\x2C path\x2C query\x2C fragment) {\n  const ctx = new URLContext();\n  ctx.flags = flags;\n  ctx.scheme = protocol;\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\n  ctx.port = port;\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\n  ctx.query = query;\n  ctx.fragment = fragment;\n  ctx.host = host;\n\n  const url = { __proto__: URL.prototype };\n  url[context] = ctx;\n  const params = new URLSearchParams();\n  url[searchParams] = params;\n  params[context] = url;\n  initSearchParams(params\x2C query);\n  return url;\n}\nsetURLConstructor(constructUrl);\n\nmodule.exports = {\n  toUSVString\x2C\n  fileURLToPath\x2C\n  pathToFileURL\x2C\n  toPathIfFileURL\x2C\n  isURLInstance\x2C\n  URL\x2C\n  URLSearchParams\x2C\n  domainToASCII\x2C\n  domainToUnicode\x2C\n  urlToHttpOptions\x2C\n  formatSymbol: kFormat\x2C\n  searchParamsSymbol: searchParams\x2C\n  encodeStr\n};\n
code-source-info,0x3f1a4fb9a446,46,44236,44357,C0O44256C3O44261C9O44295C11O44316C12O44319C15O44326C19O44355,,
code-creation,JS,10,60625,0x3f1a4fb9d7be,17,isURLInstance node:internal/url:1565:23,0x286f2a27a848,~
code-source-info,0x3f1a4fb9d7be,46,44113,44210,C0O44133C3O44154C6O44179C12O44201C16O44208,,
tick,0x1a5244edc,60667,0,0x0,3,0x0,0x3f1a4fb919f0,0x3f1a4fb91531,0x3f1a4fb90db1,0x3f1a4fb9070f,0x3f1a4fb90217,0x16645fa759a9
code-creation,JS,10,60667,0x3f1a4fb9d91e,81, node:internal/fs/utils:690:38,0x3b5f1daf4110,~
code-source-info,0x3f1a4fb9d91e,56,18670,18940,C14O18703C22O18736C25O18736C31O18762C36O18793C49O18768C54O18762C55O18858C68O18858C74O18895C76O18924C78O18924C80O18939,,
code-creation,JS,10,60667,0x3f1a4fb9db2e,110, node:internal/fs/utils:359:35,0x3b5f1daf3710,~
code-source-info,0x3f1a4fb9db2e,56,8573,9162,C16O8637C21O8690C26O8690C31O8784C37O8807C41O8835C45O8852C51O8852C60O8903C64O8924C69O8924C76O8969C77O8976C78O8996C94O8996C100O9110C104O9132C106O9132C107O9149C109O9160,,
code-creation,JS,10,60708,0x3f1a4fb9dca6,16,isUint8Array node:internal/util/types:13:22,0x18a4fd0bbb78,~
script-source,22,node:internal/util/types,'use strict';\n\nconst {\n  ArrayBufferIsView\x2C\n  ObjectDefineProperties\x2C\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\n} = primordials;\n\nfunction isTypedArray(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\n}\n\nfunction isUint8Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\n}\n\nfunction isUint8ClampedArray(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\n}\n\nfunction isUint16Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\n}\n\nfunction isUint32Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\n}\n\nfunction isInt8Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\n}\n\nfunction isInt16Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\n}\n\nfunction isInt32Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\n}\n\nfunction isFloat32Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\n}\n\nfunction isFloat64Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\n}\n\nfunction isBigInt64Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\n}\n\nfunction isBigUint64Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\n}\n\nmodule.exports = {\n  ...internalBinding('types')\x2C\n  isArrayBufferView: ArrayBufferIsView\x2C\n  isTypedArray\x2C\n  isUint8Array\x2C\n  isUint8ClampedArray\x2C\n  isUint16Array\x2C\n  isUint32Array\x2C\n  isInt8Array\x2C\n  isInt16Array\x2C\n  isInt32Array\x2C\n  isFloat32Array\x2C\n  isFloat64Array\x2C\n  isBigInt64Array\x2C\n  isBigUint64Array\x2C\n};\n\nlet isCryptoKey;\nlet isKeyObject;\n\nObjectDefineProperties(module.exports\x2C {\n  isKeyObject: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    value(obj) {\n      if (!process.versions.openssl) {\n        return false;\n      }\n\n      if (!isKeyObject) {\n        ({ isKeyObject } = require('internal/crypto/keys'));\n      }\n\n      return isKeyObject(obj);\n    }\n  }\x2C\n  isCryptoKey: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    value(obj) {\n      if (!process.versions.openssl) {\n        return false;\n      }\n\n      if (!isCryptoKey) {\n        ({ isCryptoKey } = require('internal/crypto/keys'));\n      }\n\n      return isCryptoKey(obj);\n    }\n  }\n});\n
code-source-info,0x3f1a4fb9dca6,22,257,342,C0O269C5O276C12O323C15O340,,
code-creation,JS,10,61000,0x3f1a4fb9e12e,62,splitRoot node:fs:2448:33,0x3b5f1daeab80,~
code-source-info,0x3f1a4fb9e12e,55,65834,66026,C0O65859C2O65870C6O65864C11O65891C16O65895C24O65933C26O65929C31O65961C44O65968C49O66000C50O65880C55O65846C59O66011C61O66022,,
code-creation,JS,10,61000,0x3f1a4fb9e266,20,nextPart node:fs:2481:31,0x3b5f1daeac20,~
code-source-info,0x3f1a4fb9e266,55,66741,66799,C0O66754C14O66761C19O66795,,
code-creation,JS,10,61083,0x3f1a4fb9e446,63,handleErrorFromBinding node:internal/fs/utils:342:32,0x3b5f1daf36c0,~
code-source-info,0x3f1a4fb9e446,56,7934,8432,C0O7952C6O8015C11O8015C16O8037C24O8037C29O8094C31O8094C32O8119C38O8347C43O8374C51O8347C56O8420C60O8410C62O8431,,
code-creation,JS,10,61125,0x3f1a4fb9e596,34,isFileType node:fs:198:20,0x3b5f1dae8e40,~
code-source-info,0x3f1a4fb9e596,55,5010,5251,C0O5144C2O5149C6O5156C10O5190C15O5197C20O5213C22O5228C24O5226C30O5236C33O5249,,
tick,0x10069ecdc,61167,0,0x0,0,0x0,0x10012db30,0x3f1a4fb9e5a5,0x3f1a4fb91c28,0x3f1a4fb91531,0x3f1a4fb90db1,0x3f1a4fb9070f,0x3f1a4fb90217,0x16645fa759a9
code-creation,JS,10,61333,0x3f1a4fb9e6de,72,encodeRealpathResult node:fs:2457:30,0x3b5f1daeabd0,~
code-source-info,0x3f1a4fb9e6de,55,66060,66318,C0O66082C4O66107C10O66127C17O66136C22O66152C24O66166C25O66186C30O66193C35O66193C41O66221C48O66230C53O66250C55O66266C56O66289C61O66306C66O66289C71O66316,,
code-creation,JS,10,61375,0x3f1a4fb9e936,131,shouldUseESMLoader node:internal/modules/run_main:26:28,0x5d9fd2dd260,~
code-source-info,0x3f1a4fb9e936,68,695,1558,C0O880C8O880C13O1096C21O1096C26O1142C32O1149C37O1168C43O1175C48O1184C49O1196C50O1228C56O1228C61O1207C66O1315C72O1331C78O1331C85O1378C86O1390C87O1393C93O1410C99O1410C106O1457C107O1470C108O1485C113O1515C115O1533C120O1538C127O1543C130O1556,,
code-creation,JS,10,61542,0x3f1a4fb9ebfe,132,readPackageScope node:internal/modules/cjs/loader:387:26,0x5d9fd2ce218,~
code-source-info,0x3f1a4fb9ebfe,59,10630,11149,C0O10673C7O10707C10O10673C16O10719C18O10746C25O10801C28O10763C34O10811C47O10823C54O10879C61O10918C66O10922C70O10883C77O10947C78O10960C79O10979C86O11004C88O11002C92O10979C97O11014C99O11025C106O11046C112O11065C118O11082C119O11109C121O11109C126O10737C130O11134C131O11147,,
code-creation,JS,10,61583,0x3f1a4fb9ef96,201,readPackage node:internal/modules/cjs/loader:345:21,0x5d9fd2ce128,~
code-source-info,0x3f1a4fb9ef96,59,9585,10317,C0O9620C5O9625C13O9625C20O9683C25O9700C30O9700C36O9717C38O9745C40O9761C41O9780C46O9798C51O9798C57O9836C71O9875C76O9885C78O9915C83O9932C90O9932C96O9958C97O9971C101O10006C108O10026C111O10026C121O10006C127O10133C132O10150C137O10150C143O10179C145O10195C157O10216C162O10223C166O10239C174O10268C180O10279C187O10290C191O10286C194O10249C198O10303C200O10303,,
code-creation,JS,10,61625,0x3f1a4fb9f27e,199,read node:internal/modules/package_json_reader:16:14,0x5d9fd2d67f0,~
script-source,64,node:internal/modules/package_json_reader,'use strict';\n\nconst { SafeMap } = primordials;\nconst { internalModuleReadJSON } = internalBinding('fs');\nconst { pathToFileURL } = require('url');\nconst { toNamespacedPath } = require('path');\n\nconst cache = new SafeMap();\n\nlet manifest;\n\n/**\n *\n * @param {string} jsonPath\n */\nfunction read(jsonPath) {\n  if (cache.has(jsonPath)) {\n    return cache.get(jsonPath);\n  }\n\n  const { 0: string\x2C 1: containsKeys } = internalModuleReadJSON(\n    toNamespacedPath(jsonPath)\n  );\n  const result = { string\x2C containsKeys };\n  const { getOptionValue } = require('internal/options');\n  if (string !== undefined) {\n    if (manifest === undefined) {\n      manifest = getOptionValue('--experimental-policy') ?\n        require('internal/process/policy').manifest :\n        null;\n    }\n    if (manifest !== null) {\n      const jsonURL = pathToFileURL(jsonPath);\n      manifest.assertIntegrity(jsonURL\x2C string);\n    }\n  }\n  cache.set(jsonPath\x2C result);\n  return result;\n}\n\nmodule.exports = { read };\n
code-source-info,0x3f1a4fb9f27e,64,292,954,C0O307C5O317C10O317C17O338C22O351C27O351C32O365C33O412C40O440C43O440C48O412C55O384C62O395C66O489C73O491C79O499C86O544C92O544C97O525C102O575C106O607C112O643C115O654C127O704C132O738C142O652C148O774C154O821C159O821C164O852C169O861C174O861C180O907C185O913C190O913C196O938C198O952,,
code-creation,JS,10,61875,0x3f1a4fb9f686,55,filterOwnProperties node:internal/util:618:29,0x18a4fd0baa80,~
code-source-info,0x3f1a4fb9f686,21,16741,16985,C0O16777C5O16813C7O16825C11O16818C16O16856C18O16860C22O16869C27O16873C34O16925C36O16947C39O16939C43O16834C48O16800C52O16967C54O16983,,
code-creation,JS,10,61958,0x3f1a4fb9fa66,648,Module._load node:internal/modules/cjs/loader:871:24,0x5d9fd2ce7d8,~
code-source-info,0x3f1a4fb9fa
code-creation,JS,10,62083,0x3f1a4fba033e,944,Module._resolveFilename node:internal/modules/cjs/loader:968:35,0x5d9fd2ce848,~
code-source-info,0x3f1a4fba033e
code-creation,JS,10,62167,0x3f1a4fba09b6,28,canBeRequiredByUsers node:internal/bootstrap/loaders:247:30,0x18a4fd087520,~
code-source-info,0x3f1a4fba09b6,15,7512,7609,C0O7535C5O7549C10O7553C15O7553C21O7566C23O7584C27O7605,,
code-creation,JS,10,62208,0x3f1a4fba0cd6,408,Module._resolveLookupPaths node:internal/modules/cjs/loader:770:38,0x5d9fd2ce608,~
code-source-info,0x3f1a4fba0cd
code-creation,JS,10,62250,0x3f1a4fba1016,89,logger node:internal/util/debuglog:94:18,0xd5ac0c5aab8,~
code-source-info,0x3f1a4fba1016,27,2854,3049,C0O2854C3O2886C24O2910C30O2927C34O2917C38O2932C39O2947C45O2964C51O2973C55O2954C60O2978C61O2994C65O3001C72O3014C77O3010C83O3001C88O3039,,
code-creation,JS,10,62250,0x3f1a4fba126e,3, node:internal/per_context/primordials:321:21,0x23275ac3f710,~
code-source-info,0x3f1a4fba126e,12,8987,9016,C0O8998C2O9010,,
code-creation,JS,10,62292,0x3f1a4fba1346,140,debug node:internal/util/debuglog:75:15,0xd5ac0c5aa18,~
code-source-info,0x3f1a4fba1346,27,2342,2736,C0O2342C3O2361C6O2361C9O2469C16O2490C22O2477C30O2475C36O2509C42O2545C47O2548C50O2545C54O2573C75O2597C81O2614C85O2604C89O2619C90O2634C96O2651C102O2660C106O2641C111O2665C112O2681C116O2688C123O2701C128O2697C134O2688C139O2726,,
code-creation,JS,10,62292,0x3f1a4fba14f6,41,init node:internal/util/debuglog:71:16,0xd5ac0c5a9c8,~
code-source-info,0x3f1a4fba14f6,27,2244,2327,C0O2253C10O2259C14O2257C16O2296C26O2306C33O2304C40O2326,,
tick,0x10046dea0,62417,0,0x0,0,0x0,0x3f1a4fba1500,0x3f1a4fba134c,0x3f1a4fba1069,0x3f1a4fba0de6,0x3f1a4fba04e8,0x3f1a4fb9fb3f,0x3f1a4fb90255,0x16645fa759a9
code-creation,JS,10,62500,0x3f1a4fba15e6,2,testEnabled node:internal/util/debuglog:31:19,0x3f1a4fb83c58,~
code-source-info,0x3f1a4fba15e6,27,958,969,C0O964C1O969,,
code-creation,JS,10,62542,0x3f1a4fba175e,116,debuglogImpl node:internal/util/debuglog:48:22,0xd5ac0c5a780,~
code-source-info,0x3f1a4fba175e,27,1436,1980,C0O1436C9O1455C18O1469C23O1496C34O1529C39O1537C43O1529C45O1548C55O1548C59O1580C71O1591C75O1596C83O1919C97O1937C99O1935C103O1955C112O1972C115O1978,,
code-creation,JS,10,62542,0x3f1a4fba1916,10, node:internal/modules/cjs/loader:278:66,0x5d9fd2ce058,~
code-source-info,0x3f1a4fba1916,59,7576,7601,C0O7588C2O7594C9O7600,,
code-creation,JS,10,62542,0x3f1a4fba19c6,2,noop node:internal/util/debuglog:46:14,0xd5ac0c5a730,~
code-source-info,0x3f1a4fba19c6,27,1404,1412,C1O1411,,
code-creation,JS,10,62583,0x3f1a4fba1aee,76,trySelfParentPath node:internal/modules/cjs/loader:493:27,0x5d9fd2ce3f8,~
code-source-info,0x3f1a4fba1aee,59,14005,14268,C0O14018C4O14031C5O14044C6O14059C12O14089C16O14098C17O14119C24O14122C29O14145C36O14148C44O14190C47O14205C52O14205C59O14213C62O14218C66O14211C69O14222C72O14243C73O14256C75O14267,,
code-creation,JS,10,62625,0x3f1a4fba1d96,247,trySelf node:internal/modules/cjs/loader:507:17,0x5d9fd2ce448,~
code-source-info,0x3f1a4fba1d96,59,14286,15194,C0O14312C4O14329C5O14342C6O14383C9O14383C17O14360C22O14371C27O14421C31O14437C37O14460C38O14473C39O14491C47O14510C48O14523C49O14531C51O14564C55O14556C60O14576C65O14602C70O14648C82O14606C89O14664C94O14682C97O14716C102O14721C107O14682C112O14680C118O14745C119O14758C123O14810C129O14810C134O14784C139O14855C144O14913C149O14935C153O14913C160O14977C163O14977C170O15004C173O15004C183O14884C195O14862C200O15046C212O15067C215O15073C222O15078C227O15112C234O15156C238O15118C243O15112C244O15180C246O15180,,
code-creation,JS,10,62667,0x3f1a4fba208e,60,loadBuiltinModule node:internal/modules/helpers:54:27,0x5d9fd2d6010,~
code-source-info,0x3f1a4fba208e,63,1406,1689,C0O1442C5O1456C10O1460C15O1460C21O1477C24O1484C33O1514C41O1514C46O1642C51O1642C55O1672C57O1683C59O1688,,
code-creation,JS,10,62667,0x3f1a4fba220e,107,Module node:internal/modules/cjs/loader:199:16,0x5d9fd2cdce8,~
code-source-info,0x3f1a4fba220e,59,5818,6073,C14O5840C16O5848C20O5856C22O5868C25O5873C30O5873C35O5866C39O5888C52O5888C57O5927C62O5945C67O5945C73O5966C84O5966C89O6005C90O6019C94O6029C95O6041C99O6052C101O6066C106O6072,,
code-creation,JS,10,62708,0x3f1a4fba2546,163,dirname node:path:1279:10,0x286f2a2605b8,~
code-source-info,0x3f1a4fba2546,39,38863,39532,C0O38876C8O38876C13O38919C19O38926C24O38939C26O38950C27O38971C34O38971C42O39010C44O39006C48O39044C51O39071C53O39099C57O39106C61O39113C63O39113C68O39132C73O39136C81O39175C83O39171C88O39205C92O39236C97O39255C101O39342C103O39121C108O39081C112O39383C114O39391C119O39405C129O39432C130O39437C136O39456C141O39469C143O39481C144O39486C157O39493C162O39528,,
code-creation,JS,10,62750,0x3f1a4fba27de,28,setOwnProperty node:internal/util:637:24,0x18a4fd0baad0,~
code-source-info,0x3f1a4fba27de,21,17176,17343,C0O17198C5O17231C12O17309C22O17205C27O17341,,
code-creation,JS,10,62792,0x3f1a4fba2966,45,updateChildren node:internal/modules/cjs/loader:180:24,0x5d9fd2cdbf8,~
code-source-info,0x3f1a4fba2966,59,5184,5357,C0O5227C7O5233C15O5247C19O5265C23O5273C26O5273C33O5319C38O5319C44O5356,,
code-creation,JS,10,62792,0x3f1a4fba2bee,58,reportModuleToWatchMode node:internal/modules/cjs/loader:186:33,0x5d9fd2cdc48,~
code-source-info,0x3f1a4fba2bee,59,5391,5515,C0O5406C5O5410C13O5451C19O5463C22O5471C32O5495C41O5496C51O5471C57O5514,,
code-creation,JS,10,62833,0x3f1a4fba2d0e,40, node:internal/util:708:18,0x18a4fd0bae28,~
code-source-info,0x3f1a4fba2d0e,21,19453,19573,C0O19462C10O19497C13O19505C19O19503C25O19526C29O19538C35O19556C39O19569,,
code-creation,JS,10,62833,0x3f1a4fba2e4e,13, node:internal/modules/cjs/loader:113:45,0x5d9fd2cda68,~
code-source-info,0x3f1a4fba2e4e,59,3589,3632,C0O3607C3O3603C8O3607C12O3632,,
code-creation,JS,10,62875,0x3f1a4fba305e,245,Module.load node:internal/modules/cjs/loader:1091:33,0x5d9fd2ce978,~
code-source-info,0x3f1a4fba305e,59,34293,35122,C0O34308C8O34354C16O34308C21O34362C26O34375C32O34362C36O34386C38O34400C42O34414C45O34434C52O34451C55O34456C60O34456C66O34434C71O34425C75O34497C78O34497C83O34574C91O34578C101O34631C106O34642C112O34656C124O34662C129O34656C130O34702C133O34709C140O34720C144O34731C150O34751C151O34763C155O34797C160O34797C164O34909C169O34944C174O34955C186O34995C191O35002C196O35002C203O35016C205O35014C210O35053C215O35062C220O35062C227O35092C232O35101C237O35101C244O35121,,
code-creation,JS,10,62917,0x3f1a4fba341e,184,Module._nodeModulePaths node:internal/modules/cjs/loader:732:37,0x5d9fd2ce578,~
code-source-info,0x3f1a4fba341e,59,22233,23364,C0O22288C5O22300C10O22300C17O22479C19O22488C24O22503C28O22528C29O22743C32O22769C36O22776C40O22785C42O22800C47O22810C48O22810C53O22842C58O22842C64O22884C66O22897C68O22893C73O22927C75O22937C77O22933C82O22954C89O23005C100O23005C108O23041C112O22954C117O23080C120O23098C124O23118C126O23124C131O23142C138O23153C144O23157C149O23179C156O23211C159O22818C164O22751C168O23298C176O23298C181O23347C183O23360,,
code-creation,JS,10,62958,0x3f1a4fba37e6,99,findLongestRegisteredExtension node:internal/modules/cjs/loader:479:40,0x5d9fd2ce3a8,~
code-source-info,0x3f1a4fba37e6,59,13548,13977,C0O13576C5O13581C10O13581C16O13607C18O13631C20O13657C22O13725C36O13678C44O13725C49O13739C51O13758C55O13767C56O13777C61O13784C63O13831C68O13850C74O13889C77O13900C84O13911C89O13931C91O13955C92O13662C96O13962C98O13975,,
code-creation,JS,10,63000,0x3f1a4fba39fe,355,basename node:path:1310:11,0x286f2a260608,~
code-source-info,0x3f1a4fba39fe
code-creation,JS,10,63083,0x3f1a4fba3f96,482,Module._extensions..js node:internal/modules/cjs/loader:1255:37,0x5d9fd2ceb80,~
code-source-info,0x3f1a4fba3f
code-creation,JS,10,63167,0x3f1a4fba43ee,378,readFileSync node:fs:450:22,0x3b5f1dae92a0,~
code-source-info,0x3f1a4fba43ee
code-creation,JS,10,63250,0x3f1a4fba4a96,30,isEncoding node:buffer:533:40,0xd5ac0c712b0,~
script-source,29,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  Array\x2C\n  ArrayFrom\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeIndexOf\x2C\n  MathFloor\x2C\n  MathMin\x2C\n  MathTrunc\x2C\n  NumberIsNaN\x2C\n  NumberMAX_SAFE_INTEGER\x2C\n  NumberMIN_SAFE_INTEGER\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeTrim\x2C\n  SymbolSpecies\x2C\n  SymbolToPrimitive\x2C\n  TypedArrayPrototypeGetByteLength\x2C\n  TypedArrayPrototypeFill\x2C\n  TypedArrayPrototypeSet\x2C\n  Uint8Array\x2C\n  Uint8ArrayPrototype\x2C\n} = primordials;\n\nconst {\n  byteLengthUtf8\x2C\n  compare: _compare\x2C\n  compareOffset\x2C\n  createFromString\x2C\n  fill: bindingFill\x2C\n  isAscii: bindingIsAscii\x2C\n  isUtf8: bindingIsUtf8\x2C\n  indexOfBuffer\x2C\n  indexOfNumber\x2C\n  indexOfString\x2C\n  swap16: _swap16\x2C\n  swap32: _swap32\x2C\n  swap64: _swap64\x2C\n  kMaxLength\x2C\n  kStringMaxLength\n} = internalBinding('buffer');\nconst {\n  constants: {\n    ALL_PROPERTIES\x2C\n    ONLY_ENUMERABLE\x2C\n  }\x2C\n  getOwnNonIndexProperties\x2C\n} = internalBinding('util');\nconst {\n  customInspectSymbol\x2C\n  isInsideNodeModules\x2C\n  lazyDOMException\x2C\n  normalizeEncoding\x2C\n  kIsEncodingSymbol\x2C\n  defineLazyProperties\x2C\n} = require('internal/util');\nconst {\n  isAnyArrayBuffer\x2C\n  isArrayBufferView\x2C\n  isUint8Array\x2C\n  isTypedArray\x2C\n} = require('internal/util/types');\nconst {\n  inspect: utilInspect\n} = require('internal/util/inspect');\nconst { encodings } = internalBinding('string_decoder');\n\nconst {\n  codes: {\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_BUFFER_SIZE\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_UNKNOWN_ENCODING\n  }\x2C\n  genericNodeError\x2C\n  hideStackFrames\x2C\n} = require('internal/errors');\nconst {\n  validateArray\x2C\n  validateBuffer\x2C\n  validateNumber\x2C\n  validateInteger\x2C\n  validateString\n} = require('internal/validators');\n// Provide validateInteger() but with kMaxLength as the default maximum value.\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\n  validateInteger(value\x2C name\x2C min\x2C max);\n\nconst {\n  FastBuffer\x2C\n  markAsUntransferable\x2C\n  addBufferPrototypeMethods\x2C\n  createUnsafeBuffer\n} = require('internal/buffer');\n\nFastBuffer.prototype.constructor = Buffer;\nBuffer.prototype = FastBuffer.prototype;\naddBufferPrototypeMethods(Buffer.prototype);\n\nconst constants = ObjectDefineProperties({}\x2C {\n  MAX_LENGTH: {\n    __proto__: null\x2C\n    value: kMaxLength\x2C\n    writable: false\x2C\n    enumerable: true\n  }\x2C\n  MAX_STRING_LENGTH: {\n    __proto__: null\x2C\n    value: kStringMaxLength\x2C\n    writable: false\x2C\n    enumerable: true\n  }\n});\n\nBuffer.poolSize = 8 * 1024;\nlet poolSize\x2C poolOffset\x2C allocPool;\n\nconst encodingsMap = { __proto__: null };\nfor (let i = 0; i < encodings.length; ++i)\n  encodingsMap[encodings[i]] = i;\n\nfunction createPool() {\n  poolSize = Buffer.poolSize;\n  allocPool = createUnsafeBuffer(poolSize).buffer;\n  markAsUntransferable(allocPool);\n  poolOffset = 0;\n}\ncreatePool();\n\nfunction alignPool() {\n  // Ensure aligned slices\n  if (poolOffset & 0x7) {\n    poolOffset |= 0x7;\n    poolOffset++;\n  }\n}\n\nlet bufferWarningAlreadyEmitted = false;\nlet nodeModulesCheckCounter = 0;\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\n                      'issues. Please use the Buffer.alloc()\x2C ' +\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\n\nfunction showFlaggedDeprecation() {\n  if (bufferWarningAlreadyEmitted ||\n      ++nodeModulesCheckCounter > 10000 ||\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\n       isInsideNodeModules())) {\n    // We don't emit a warning\x2C because we either:\n    // - Already did so\x2C or\n    // - Already checked too many times whether a call is coming\n    //   from node_modules and want to stop slowing down things\x2C or\n    // - We aren't running with `--pending-deprecation` enabled\x2C\n    //   and the code is inside `node_modules`.\n    return;\n  }\n\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\n  bufferWarningAlreadyEmitted = true;\n}\n\nfunction toInteger(n\x2C defaultVal) {\n  n = +n;\n  if (!NumberIsNaN(n) &&\n      n >= NumberMIN_SAFE_INTEGER &&\n      n <= NumberMAX_SAFE_INTEGER) {\n    return ((n % 1) === 0 ? n : MathFloor(n));\n  }\n  return defaultVal;\n}\n\nfunction _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\n  if (!isUint8Array(source))\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\n  if (!isUint8Array(target))\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\n\n  if (targetStart === undefined) {\n    targetStart = 0;\n  } else {\n    targetStart = toInteger(targetStart\x2C 0);\n    if (targetStart < 0)\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\n  }\n\n  if (sourceStart === undefined) {\n    sourceStart = 0;\n  } else {\n    sourceStart = toInteger(sourceStart\x2C 0);\n    if (sourceStart < 0)\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C '>= 0'\x2C sourceStart);\n  }\n\n  if (sourceEnd === undefined) {\n    sourceEnd = source.length;\n  } else {\n    sourceEnd = toInteger(sourceEnd\x2C 0);\n    if (sourceEnd < 0)\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\n  }\n\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\n    return 0;\n\n  if (sourceStart > source.length) {\n    throw new ERR_OUT_OF_RANGE('sourceStart'\x2C\n                               `<= ${source.length}`\x2C\n                               sourceStart);\n  }\n\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\n}\n\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\n  if (sourceEnd - sourceStart > target.length - targetStart)\n    sourceEnd = sourceStart + target.length - targetStart;\n\n  let nb = sourceEnd - sourceStart;\n  const sourceLen = source.length - sourceStart;\n  if (nb > sourceLen)\n    nb = sourceLen;\n\n  if (sourceStart !== 0 || sourceEnd < source.length)\n    source = new Uint8Array(source.buffer\x2C source.byteOffset + sourceStart\x2C nb);\n\n  TypedArrayPrototypeSet(target\x2C source\x2C targetStart);\n\n  return nb;\n}\n\n/**\n * The Buffer() constructor is deprecated in documentation and should not be\n * used moving forward. Rather\x2C developers should use one of the three new\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\n * their specific needs. There is no runtime deprecation because of the extent\n * to which the Buffer constructor is used in the ecosystem currently -- a\n * runtime deprecation would introduce too much breakage at this time. It's not\n * likely that the Buffer constructors would ever actually be removed.\n * Deprecation Code: DEP0005\n */\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\n  showFlaggedDeprecation();\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\n    }\n    return Buffer.alloc(arg);\n  }\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\n}\n\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\n  __proto__: null\x2C\n  enumerable: false\x2C\n  configurable: true\x2C\n  get() { return FastBuffer; }\n});\n\n/**\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[\x2C encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\n */\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\n  if (typeof value === 'string')\n    return fromString(value\x2C encodingOrOffset);\n\n  if (typeof value === 'object' && value !== null) {\n    if (isAnyArrayBuffer(value))\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\n\n    const valueOf = value.valueOf && value.valueOf();\n    if (valueOf != null &&\n        valueOf !== value &&\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\n      return from(valueOf\x2C encodingOrOffset\x2C length);\n    }\n\n    const b = fromObject(value);\n    if (b)\n      return b;\n\n    if (typeof value[SymbolToPrimitive] === 'function') {\n      const primitive = value[SymbolToPrimitive]('string');\n      if (typeof primitive === 'string') {\n        return fromString(primitive\x2C encodingOrOffset);\n      }\n    }\n  }\n\n  throw new ERR_INVALID_ARG_TYPE(\n    'first argument'\x2C\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\n    value\n  );\n};\n\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\n// adding a `prototype` property and making the function a constructor.\n//\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\nconst of = (...items) => {\n  const newObj = createUnsafeBuffer(items.length);\n  for (let k = 0; k < items.length; k++)\n    newObj[k] = items[k];\n  return newObj;\n};\nBuffer.of = of;\n\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\n\n// The 'assertSize' method will remove itself from the callstack when an error\n// occurs. This is done simply to keep the internal details of the\n// implementation from bleeding out to users.\nconst assertSize = hideStackFrames((size) => {\n  validateNumber(size\x2C 'size');\n  if (!(size >= 0 && size <= kMaxLength)) {\n    throw new ERR_INVALID_ARG_VALUE.RangeError('size'\x2C size);\n  }\n});\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[\x2C fill[\x2C encoding]])\n */\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\n  assertSize(size);\n  if (fill !== undefined && fill !== 0 && size > 0) {\n    const buf = createUnsafeBuffer(size);\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\n  }\n  return new FastBuffer(size);\n};\n\n/**\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\n */\nBuffer.allocUnsafe = function allocUnsafe(size) {\n  assertSize(size);\n  return allocate(size);\n};\n\n/**\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\n * Buffer instance that is not allocated off the pre-initialized pool.\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\n */\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\n  assertSize(size);\n  return createUnsafeBuffer(size);\n};\n\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\n// buffer is returned.\nfunction SlowBuffer(length) {\n  assertSize(length);\n  return createUnsafeBuffer(length);\n}\n\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\n\nfunction allocate(size) {\n  if (size <= 0) {\n    return new FastBuffer();\n  }\n  if (size < (Buffer.poolSize >>> 1)) {\n    if (size > (poolSize - poolOffset))\n      createPool();\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\n    poolOffset += size;\n    alignPool();\n    return b;\n  }\n  return createUnsafeBuffer(size);\n}\n\nfunction fromStringFast(string\x2C ops) {\n  const length = ops.byteLength(string);\n\n  if (length >= (Buffer.poolSize >>> 1))\n    return createFromString(string\x2C ops.encodingVal);\n\n  if (length > (poolSize - poolOffset))\n    createPool();\n  let b = new FastBuffer(allocPool\x2C poolOffset\x2C length);\n  const actual = ops.write(b\x2C string\x2C 0\x2C length);\n  if (actual !== length) {\n    // byteLength() may overestimate. That's a rare case\x2C though.\n    b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\n  }\n  poolOffset += actual;\n  alignPool();\n  return b;\n}\n\nfunction fromString(string\x2C encoding) {\n  let ops;\n  if (typeof encoding !== 'string' || encoding.length === 0) {\n    if (string.length === 0)\n      return new FastBuffer();\n    ops = encodingOps.utf8;\n    encoding = undefined;\n  } else {\n    ops = getEncodingOps(encoding);\n    if (ops === undefined)\n      throw new ERR_UNKNOWN_ENCODING(encoding);\n    if (string.length === 0)\n      return new FastBuffer();\n  }\n  return fromStringFast(string\x2C ops);\n}\n\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\n  // Convert byteOffset to integer\n  if (byteOffset === undefined) {\n    byteOffset = 0;\n  } else {\n    byteOffset = +byteOffset;\n    if (NumberIsNaN(byteOffset))\n      byteOffset = 0;\n  }\n\n  const maxLength = obj.byteLength - byteOffset;\n\n  if (maxLength < 0)\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\n\n  if (length === undefined) {\n    length = maxLength;\n  } else {\n    // Convert length to non-negative integer.\n    length = +length;\n    if (length > 0) {\n      if (length > maxLength)\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\n    } else {\n      length = 0;\n    }\n  }\n\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\n}\n\nfunction fromArrayLike(obj) {\n  if (obj.length <= 0)\n    return new FastBuffer();\n  if (obj.length < (Buffer.poolSize >>> 1)) {\n    if (obj.length > (poolSize - poolOffset))\n      createPool();\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\n    poolOffset += obj.length;\n    alignPool();\n    return b;\n  }\n  return new FastBuffer(obj);\n}\n\nfunction fromObject(obj) {\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\n    if (typeof obj.length !== 'number') {\n      return new FastBuffer();\n    }\n    return fromArrayLike(obj);\n  }\n\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\n    return fromArrayLike(obj.data);\n  }\n}\n\n// Static methods\n\nBuffer.isBuffer = function isBuffer(b) {\n  return b instanceof Buffer;\n};\n\nBuffer.compare = function compare(buf1\x2C buf2) {\n  if (!isUint8Array(buf1)) {\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\n  }\n\n  if (!isUint8Array(buf2)) {\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\n  }\n\n  if (buf1 === buf2) {\n    return 0;\n  }\n\n  return _compare(buf1\x2C buf2);\n};\n\nBuffer.isEncoding = function isEncoding(encoding) {\n  return typeof encoding === 'string' && encoding.length !== 0 &&\n         normalizeEncoding(encoding) !== undefined;\n};\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\n\nBuffer.concat = function concat(list\x2C length) {\n  validateArray(list\x2C 'list');\n\n  if (list.length === 0)\n    return new FastBuffer();\n\n  if (length === undefined) {\n    length = 0;\n    for (let i = 0; i < list.length; i++) {\n      if (list[i].length) {\n        length += list[i].length;\n      }\n    }\n  } else {\n    validateOffset(length\x2C 'length');\n  }\n\n  const buffer = Buffer.allocUnsafe(length);\n  let pos = 0;\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    if (!isUint8Array(buf)) {\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\n      // Instead\x2C find the proper error code for this.\n      throw new ERR_INVALID_ARG_TYPE(\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\n    }\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\n  }\n\n  // Note: `length` is always equal to `buffer.length` at this point\n  if (pos < length) {\n    // Zero-fill the remaining bytes if the specified `length` was more than\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\n    // there were not initialized.\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\n  }\n\n  return buffer;\n};\n\nfunction base64ByteLength(str\x2C bytes) {\n  // Handle padding\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\n    bytes--;\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\n    bytes--;\n\n  // Base64 ratio: 3/4\n  return (bytes * 3) >>> 2;\n}\n\nconst encodingOps = {\n  utf8: {\n    encoding: 'utf8'\x2C\n    encodingVal: encodingsMap.utf8\x2C\n    byteLength: byteLengthUtf8\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\n  }\x2C\n  ucs2: {\n    encoding: 'ucs2'\x2C\n    encodingVal: encodingsMap.utf16le\x2C\n    byteLength: (string) => string.length * 2\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\n  }\x2C\n  utf16le: {\n    encoding: 'utf16le'\x2C\n    encodingVal: encodingsMap.utf16le\x2C\n    byteLength: (string) => string.length * 2\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\n  }\x2C\n  latin1: {\n    encoding: 'latin1'\x2C\n    encodingVal: encodingsMap.latin1\x2C\n    byteLength: (string) => string.length\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\n  }\x2C\n  ascii: {\n    encoding: 'ascii'\x2C\n    encodingVal: encodingsMap.ascii\x2C\n    byteLength: (string) => string.length\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfBuffer(buf\x2C\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\n                    byteOffset\x2C\n                    encodingsMap.ascii\x2C\n                    dir)\n  }\x2C\n  base64: {\n    encoding: 'base64'\x2C\n    encodingVal: encodingsMap.base64\x2C\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfBuffer(buf\x2C\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\n                    byteOffset\x2C\n                    encodingsMap.base64\x2C\n                    dir)\n  }\x2C\n  base64url: {\n    encoding: 'base64url'\x2C\n    encodingVal: encodingsMap.base64url\x2C\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\n    write: (buf\x2C string\x2C offset\x2C len) =>\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfBuffer(buf\x2C\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\n                    byteOffset\x2C\n                    encodingsMap.base64url\x2C\n                    dir)\n  }\x2C\n  hex: {\n    encoding: 'hex'\x2C\n    encodingVal: encodingsMap.hex\x2C\n    byteLength: (string) => string.length >>> 1\x2C\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\n      indexOfBuffer(buf\x2C\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\n                    byteOffset\x2C\n                    encodingsMap.hex\x2C\n                    dir)\n  }\n};\nfunction getEncodingOps(encoding) {\n  encoding += '';\n  switch (encoding.length) {\n    case 4:\n      if (encoding === 'utf8') return encodingOps.utf8;\n      if (encoding === 'ucs2') return encodingOps.ucs2;\n      encoding = StringPrototypeToLowerCase(encoding);\n      if (encoding === 'utf8') return encodingOps.utf8;\n      if (encoding === 'ucs2') return encodingOps.ucs2;\n      break;\n    case 5:\n      if (encoding === 'utf-8') return encodingOps.utf8;\n      if (encoding === 'ascii') return encodingOps.ascii;\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\n      encoding = StringPrototypeToLowerCase(encoding);\n      if (encoding === 'utf-8') return encodingOps.utf8;\n      if (encoding === 'ascii') return encodingOps.ascii;\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\n      break;\n    case 7:\n      if (encoding === 'utf16le' ||\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\n        return encodingOps.utf16le;\n      break;\n    case 8:\n      if (encoding === 'utf-16le' ||\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\n        return encodingOps.utf16le;\n      break;\n    case 6:\n      if (encoding === 'latin1' || encoding === 'binary')\n        return encodingOps.latin1;\n      if (encoding === 'base64') return encodingOps.base64;\n      encoding = StringPrototypeToLowerCase(encoding);\n      if (encoding === 'latin1' || encoding === 'binary')\n        return encodingOps.latin1;\n      if (encoding === 'base64') return encodingOps.base64;\n      break;\n    case 3:\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\n        return encodingOps.hex;\n      break;\n    case 9:\n      if (encoding === 'base64url' ||\n          StringPrototypeToLowerCase(encoding) === 'base64url')\n        return encodingOps.base64url;\n      break;\n  }\n}\n\nfunction byteLength(string\x2C encoding) {\n  if (typeof string !== 'string') {\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\n      return string.byteLength;\n    }\n\n    throw new ERR_INVALID_ARG_TYPE(\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\n    );\n  }\n\n  const len = string.length;\n  if (len === 0)\n    return 0;\n\n  if (encoding) {\n    const ops = getEncodingOps(encoding);\n    if (ops) {\n      return ops.byteLength(string);\n    }\n  }\n  return byteLengthUtf8(string);\n}\n\nBuffer.byteLength = byteLength;\n\n// For backwards compatibility.\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get() {\n    if (!(this instanceof Buffer))\n      return undefined;\n    return this.buffer;\n  }\n});\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get() {\n    if (!(this instanceof Buffer))\n      return undefined;\n    return this.byteOffset;\n  }\n});\n\nBuffer.prototype.copy =\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\n    return _copy(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\n  };\n\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\n// property of a typed array.\n// This behaves neither like String nor Uint8Array in that we set start/end\n// to their upper/lower bounds if the value passed is out of range.\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\n  if (arguments.length === 0) {\n    return this.utf8Slice(0\x2C this.length);\n  }\n\n  const len = this.length;\n\n  if (start <= 0)\n    start = 0;\n  else if (start >= len)\n    return '';\n  else\n    start |= 0;\n\n  if (end === undefined || end > len)\n    end = len;\n  else\n    end |= 0;\n\n  if (end <= start)\n    return '';\n\n  if (encoding === undefined)\n    return this.utf8Slice(start\x2C end);\n\n  const ops = getEncodingOps(encoding);\n  if (ops === undefined)\n    throw new ERR_UNKNOWN_ENCODING(encoding);\n\n  return ops.slice(this\x2C start\x2C end);\n};\n\nBuffer.prototype.equals = function equals(otherBuffer) {\n  if (!isUint8Array(otherBuffer)) {\n    throw new ERR_INVALID_ARG_TYPE(\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\n  }\n\n  if (this === otherBuffer)\n    return true;\n\n  if (this.byteLength !== otherBuffer.byteLength)\n    return false;\n\n  return this.byteLength === 0 || _compare(this\x2C otherBuffer) === 0;\n};\n\nlet INSPECT_MAX_BYTES = 50;\n// Override how buffers are presented by util.inspect().\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\n  const max = INSPECT_MAX_BYTES;\n  const actualMax = MathMin(max\x2C this.length);\n  const remaining = this.length - max;\n  let str = StringPrototypeTrim(RegExpPrototypeSymbolReplace(\n    /(.{2})/g\x2C this.hexSlice(0\x2C actualMax)\x2C '$1 '));\n  if (remaining > 0)\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\n  // Inspect special properties as well\x2C if possible.\n  if (ctx) {\n    let extras = false;\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\n    const obj = { __proto__: null };\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\n                          (key) => {\n                            extras = true;\n                            obj[key] = this[key];\n                          });\n    if (extras) {\n      if (this.length !== 0)\n        str += '\x2C ';\n      // '[Object: null prototype] {'.length === 26\n      // This is guarded with a test.\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\n        ...ctx\x2C\n        breakLength: Infinity\x2C\n        compact: true\n      })\x2C 27\x2C -2);\n    }\n  }\n  return `<${this.constructor.name} ${str}>`;\n};\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\n\nBuffer.prototype.compare = function compare(target\x2C\n                                            targetStart\x2C\n                                            targetEnd\x2C\n                                            sourceStart\x2C\n                                            sourceEnd) {\n  if (!isUint8Array(target)) {\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\n  }\n  if (arguments.length === 1)\n    return _compare(this\x2C target);\n\n  if (targetStart === undefined)\n    targetStart = 0;\n  else\n    validateOffset(targetStart\x2C 'targetStart');\n\n  if (targetEnd === undefined)\n    targetEnd = target.length;\n  else\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\n\n  if (sourceStart === undefined)\n    sourceStart = 0;\n  else\n    validateOffset(sourceStart\x2C 'sourceStart');\n\n  if (sourceEnd === undefined)\n    sourceEnd = this.length;\n  else\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\n\n  if (sourceStart >= sourceEnd)\n    return (targetStart >= targetEnd ? 0 : -1);\n  if (targetStart >= targetEnd)\n    return 1;\n\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\n                       sourceEnd);\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string\x2C Buffer\x2C or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding\x2C relevant if val is a string\n// - dir - true for indexOf\x2C false for lastIndexOf\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\n  validateBuffer(buffer);\n\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = undefined;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  // Coerce to Number. Values like null and [] become 0.\n  byteOffset = +byteOffset;\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\n  if (NumberIsNaN(byteOffset)) {\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\n  }\n  dir = !!dir;  // Cast to bool.\n\n  if (typeof val === 'number')\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\n\n  let ops;\n  if (encoding === undefined)\n    ops = encodingOps.utf8;\n  else\n    ops = getEncodingOps(encoding);\n\n  if (typeof val === 'string') {\n    if (ops === undefined)\n      throw new ERR_UNKNOWN_ENCODING(encoding);\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\n  }\n\n  if (isUint8Array(val)) {\n    const encodingVal =\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\n  }\n\n  throw new ERR_INVALID_ARG_TYPE(\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\n  );\n}\n\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\n};\n\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\n};\n\n// Usage:\n//    buffer.fill(number[\x2C offset[\x2C end]])\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\n};\n\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\n  if (typeof value === 'string') {\n    if (offset === undefined || typeof offset === 'string') {\n      encoding = offset;\n      offset = 0;\n      end = buf.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = buf.length;\n    }\n\n    const normalizedEncoding = normalizeEncoding(encoding);\n    if (normalizedEncoding === undefined) {\n      validateString(encoding\x2C 'encoding');\n      throw new ERR_UNKNOWN_ENCODING(encoding);\n    }\n\n    if (value.length === 0) {\n      // If value === '' default to zero.\n      value = 0;\n    } else if (value.length === 1) {\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\n      if (normalizedEncoding === 'utf8') {\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\n        if (code < 128) {\n          value = code;\n        }\n      } else if (normalizedEncoding === 'latin1') {\n        value = StringPrototypeCharCodeAt(value\x2C 0);\n      }\n    }\n  } else {\n    encoding = undefined;\n  }\n\n  if (offset === undefined) {\n    offset = 0;\n    end = buf.length;\n  } else {\n    validateOffset(offset\x2C 'offset');\n    // Invalid ranges are not set to a default\x2C so can range check early.\n    if (end === undefined) {\n      end = buf.length;\n    } else {\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\n    }\n    if (offset >= end)\n      return buf;\n  }\n\n\n  if (typeof value === 'number') {\n    // OOB check\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\n    const fillLength = end - offset;\n    if (offset > end || fillLength + offset > byteLen)\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\n\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\n  } else {\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\n    if (res < 0) {\n      if (res === -1)\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\n    }\n  }\n\n  return buf;\n}\n\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\n  // Buffer#write(string);\n  if (offset === undefined) {\n    return this.utf8Write(string\x2C 0\x2C this.length);\n  }\n  // Buffer#write(string\x2C encoding)\n  if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\n  } else {\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\n\n    const remaining = this.length - offset;\n\n    if (length === undefined) {\n      length = remaining;\n    } else if (typeof length === 'string') {\n      encoding = length;\n      length = remaining;\n    } else {\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\n      if (length > remaining)\n        length = remaining;\n    }\n  }\n\n  if (!encoding)\n    return this.utf8Write(string\x2C offset\x2C length);\n\n  const ops = getEncodingOps(encoding);\n  if (ops === undefined)\n    throw new ERR_UNKNOWN_ENCODING(encoding);\n  return ops.write(this\x2C string\x2C offset\x2C length);\n};\n\nBuffer.prototype.toJSON = function toJSON() {\n  if (this.length > 0) {\n    const data = new Array(this.length);\n    for (let i = 0; i < this.length; ++i)\n      data[i] = this[i];\n    return { type: 'Buffer'\x2C data };\n  }\n  return { type: 'Buffer'\x2C data: [] };\n};\n\nfunction adjustOffset(offset\x2C length) {\n  // Use Math.trunc() to convert offset to an integer value that can be larger\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\n  offset = MathTrunc(offset);\n  if (offset === 0) {\n    return 0;\n  }\n  if (offset < 0) {\n    offset += length;\n    return offset > 0 ? offset : 0;\n  }\n  if (offset < length) {\n    return offset;\n  }\n  return NumberIsNaN(offset) ? 0 : length;\n}\n\nBuffer.prototype.subarray = function subarray(start\x2C end) {\n  const srcLength = this.length;\n  start = adjustOffset(start\x2C srcLength);\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\n  const newLength = end > start ? end - start : 0;\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\n};\n\nBuffer.prototype.slice = function slice(start\x2C end) {\n  return this.subarray(start\x2C end);\n};\n\nfunction swap(b\x2C n\x2C m) {\n  const i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16() {\n  // For Buffer.length < 128\x2C it's generally faster to\n  // do the swap in javascript. For larger buffers\x2C\n  // dropping down to the native code is faster.\n  const len = this.length;\n  if (len % 2 !== 0)\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\n  if (len < 128) {\n    for (let i = 0; i < len; i += 2)\n      swap(this\x2C i\x2C i + 1);\n    return this;\n  }\n  return _swap16(this);\n};\n\nBuffer.prototype.swap32 = function swap32() {\n  // For Buffer.length < 192\x2C it's generally faster to\n  // do the swap in javascript. For larger buffers\x2C\n  // dropping down to the native code is faster.\n  const len = this.length;\n  if (len % 4 !== 0)\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\n  if (len < 192) {\n    for (let i = 0; i < len; i += 4) {\n      swap(this\x2C i\x2C i + 3);\n      swap(this\x2C i + 1\x2C i + 2);\n    }\n    return this;\n  }\n  return _swap32(this);\n};\n\nBuffer.prototype.swap64 = function swap64() {\n  // For Buffer.length < 192\x2C it's generally faster to\n  // do the swap in javascript. For larger buffers\x2C\n  // dropping down to the native code is faster.\n  const len = this.length;\n  if (len % 8 !== 0)\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\n  if (len < 192) {\n    for (let i = 0; i < len; i += 8) {\n      swap(this\x2C i\x2C i + 7);\n      swap(this\x2C i + 1\x2C i + 6);\n      swap(this\x2C i + 2\x2C i + 5);\n      swap(this\x2C i + 3\x2C i + 4);\n    }\n    return this;\n  }\n  return _swap64(this);\n};\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\n\nlet transcode;\nif (internalBinding('config').hasIntl) {\n  const {\n    icuErrName\x2C\n    transcode: _transcode\n  } = internalBinding('icu');\n\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\n  // Buffer instance.\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\n    if (!isUint8Array(source)) {\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\n    }\n    if (source.length === 0) return Buffer.alloc(0);\n\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\n    if (typeof result !== 'number')\n      return result;\n\n    const code = icuErrName(result);\n    const err = genericNodeError(\n      `Unable to transcode Buffer [${code}]`\x2C\n      { code: code\x2C errno: result }\n    );\n    throw err;\n  };\n}\n\nfunction btoa(input) {\n  // The implementation here has not been performance optimized in any way and\n  // should not be.\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\n  if (arguments.length === 0) {\n    throw new ERR_MISSING_ARGS('input');\n  }\n  input = `${input}`;\n  for (let n = 0; n < input.length; n++) {\n    if (input[n].charCodeAt(0) > 0xff)\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\n  }\n  const buf = Buffer.from(input\x2C 'latin1');\n  return buf.toString('base64');\n}\n\n// Refs: https://infra.spec.whatwg.org/#forgiving-base64-decode\nconst kForgivingBase64AllowedChars = [\n  // ASCII whitespace\n  // Refs: https://infra.spec.whatwg.org/#ascii-whitespace\n  0x09\x2C 0x0A\x2C 0x0C\x2C 0x0D\x2C 0x20\x2C\n\n  // Uppercase letters\n  ...ArrayFrom({ length: 26 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('A') + i)\x2C\n\n  // Lowercase letters\n  ...ArrayFrom({ length: 26 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('a') + i)\x2C\n\n  // Decimal digits\n  ...ArrayFrom({ length: 10 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('0') + i)\x2C\n\n  0x2B\x2C // +\n  0x2F\x2C // /\n  0x3D\x2C // =\n];\nconst kEqualSignIndex = ArrayPrototypeIndexOf(kForgivingBase64AllowedChars\x2C\n                                              0x3D);\n\nfunction atob(input) {\n  // The implementation here has not been performance optimized in any way and\n  // should not be.\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\n  if (arguments.length === 0) {\n    throw new ERR_MISSING_ARGS('input');\n  }\n\n  input = `${input}`;\n  let nonAsciiWhitespaceCharCount = 0;\n  let equalCharCount = 0;\n\n  for (let n = 0; n < input.length; n++) {\n    const index = ArrayPrototypeIndexOf(\n      kForgivingBase64AllowedChars\x2C\n      StringPrototypeCharCodeAt(input\x2C n));\n\n    if (index > 4) {\n      // The first 5 elements of `kForgivingBase64AllowedChars` are\n      // ASCII whitespace char codes.\n      nonAsciiWhitespaceCharCount++;\n\n      if (index === kEqualSignIndex) {\n        equalCharCount++;\n      } else if (equalCharCount) {\n        // The `=` char is only allowed at the end.\n        throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\n      }\n\n      if (equalCharCount > 2) {\n        // Only one more `=` is permitted after the first equal sign.\n        throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\n      }\n    } else if (index === -1) {\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\n    }\n  }\n\n  let reminder = nonAsciiWhitespaceCharCount % 4;\n\n  // See #2\x2C #3\x2C #4 - https://infra.spec.whatwg.org/#forgiving-base64\n  if (!reminder) {\n    // Remove all trailing `=` characters and get the new reminder.\n    reminder = (nonAsciiWhitespaceCharCount - equalCharCount) % 4;\n  } else if (equalCharCount) {\n    // `=` should not in the input if there's a reminder.\n    throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\n  }\n\n  // See #3 - https://infra.spec.whatwg.org/#forgiving-base64\n  if (reminder === 1) {\n    throw lazyDOMException(\n      'The string to be decoded is not correctly encoded.'\x2C\n      'InvalidCharacterError');\n  }\n\n  return Buffer.from(input\x2C 'base64').toString('latin1');\n}\n\nfunction isUtf8(input) {\n  if (isTypedArray(input) || isAnyArrayBuffer(input)) {\n    return bindingIsUtf8(input);\n  }\n\n  throw new ERR_INVALID_ARG_TYPE('input'\x2C ['TypedArray'\x2C 'Buffer']\x2C input);\n}\n\nfunction isAscii(input) {\n  if (isTypedArray(input) || isAnyArrayBuffer(input)) {\n    return bindingIsAscii(input);\n  }\n\n  throw new ERR_INVALID_ARG_TYPE('input'\x2C ['ArrayBuffer'\x2C 'Buffer'\x2C 'TypedArray']\x2C input);\n}\n\nmodule.exports = {\n  Buffer\x2C\n  SlowBuffer\x2C\n  transcode\x2C\n  isUtf8\x2C\n  isAscii\x2C\n\n  // Legacy\n  kMaxLength\x2C\n  kStringMaxLength\x2C\n  btoa\x2C\n  atob\x2C\n};\n\nObjectDefineProperties(module.exports\x2C {\n  constants: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    value: constants\n  }\x2C\n  INSPECT_MAX_BYTES: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() { return INSPECT_MAX_BYTES; }\x2C\n    set(val) { INSPECT_MAX_BYTES = val; }\n  }\n});\n\ndefineLazyProperties(\n  module.exports\x2C\n  'internal/blob'\x2C\n  ['Blob'\x2C 'resolveObjectURL']\n);\ndefineLazyProperties(\n  module.exports\x2C\n  'internal/file'\x2C\n  ['File']\n);\n
code-source-info,0x3f1a4fba4a96,29,14921,15053,C0O14936C6O14984C12O14991C20O15009C23O15009C28O15037C29O15051,,
code-creation,JS,10,64625,0x3f1a4fba76d6,30,normalizeEncoding node:internal/util:177:27,0x18a4fd0b9580,~
code-source-info,0x3f1a4fba76d6,21,4631,4736,C0O4641C7O4664C14O4682C19O4695C21O4709C22O4712C25O4719C29O4734,,
tick,0x1a535b9cc,64625,0,0x0,3,0x0,0x3f1a4fb9a33c,0x3f1a4fb983ee,0x3f1a4fba43f8,0x3f1a4fba3fd2,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
code-creation,JS,10,64667,0x3f1a4fba77be,9,isUint32 node:internal/validators:51:18,0x18a4fd0b2c70,~
code-source-info,0x3f1a4fba77be,20,961,1006,C0O973C2O997C5O986C8O1004,,
code-creation,JS,10,64667,0x3f1a4fba7936,113,openSync node:fs:576:18,0x3b5f1dae9430,~
code-source-info,0x3f1a4fba7936,55,14693,15072,C0O14717C5O14724C11O14770C16O14770C21O14794C37O14801C44O14852C51O14854C58O14879C63O14887C70O14892C73O14903C78O14903C95O14887C101O15025C106O15025C110O15056C112O15070,,
code-creation,JS,10,64708,0x3f1a4fba7ab6,37, node:internal/fs/utils:702:42,0x3b5f1daf4160,~
code-source-info,0x3f1a4fba7ab6,56,18985,19120,C14O19040C19O19040C24O19074C29O19074C34O19106C36O19118,,
code-creation,JS,10,64750,0x3f1a4fba7e8e,515,stringToFlags node:internal/fs/utils:577:23,0x3b5f1daf3f80,~
code-source-info,0x3f1a4fba7e8e
code-creation,JS,10,64792,0x3f1a4fba8266,86,parseFileMode node:internal/validators:70:23,0x18a4fd0b2cc0,~
code-source-info,0x3f1a4fba8266,20,1652,1941,C0O1675C11O1692C17O1729C24O1753C27O1733C34O1788C41O1833C52O1794C57O1788C58O1854C66O1862C73O1895C78O1895C83O1926C85O1939,,
code-creation,JS,10,64833,0x3f1a4fba845e,148, node:internal/validators:138:40,0x18a4fd0b2db0,~
code-source-info,0x3f1a4fba845e,20,3511,3943,C16O3550C22O3587C38O3593C43O3587C44O3648C49O3653C55O3683C71O3689C76O3683C77O3756C87O3816C90O3833C92O3843C99O3858C104O3871C114O3910C127O3923C140O3877C145O3871C147O3942,,
code-creation,JS,10,64875,0x3f1a4fba861e,66,tryStatSync node:fs:404:21,0x3b5f1dae91b0,~
code-source-info,0x3f1a4fba861e,55,10597,10807,C0O10628C2O10648C7O10656C22O10656C28O10700C36O10724C38O10740C43O10743C48O10743C53O10762C58O10768C62O10762C63O10792C65O10805,,
code-creation,JS,10,64875,0x3f1a4fba8796,96,tryCreateBuffer node:fs:414:25,0x3b5f1dae9200,~
code-source-info,0x3f1a4fba8796,55,10833,11120,C0O10870C2O10882C7O10902C9O10913C11O10911C16O10935C23O10941C28O10935C29O10984C34O11000C39O11000C45O11023C57O11029C58O11056C65O11070C67O11080C72O11083C77O11083C93O11104C95O11118,,
code-creation,JS,10,64917,0x3f1a4fba88ee,17,allocUnsafe node:buffer:376:42,0xd5ac0c70bb8,~
code-source-info,0x3f1a4fba88ee,29,11018,11073,C0O11029C5O11029C9O11049C12O11056C16O11071,,
tick,0x1a51affd8,64917,0,0x0,2,0x0,0x3f1a4fba88f3,0x3f1a4fba87bd,0x3f1a4fba446a,0x3f1a4fba3fd2,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
code-creation,JS,10,64917,0x3f1a4fba89f6,54, node:buffer:352:36,0xd5ac0c70b18,~
code-source-info,0x3f1a4fba89f6,29,10316,10471,C0O10330C8O10330C13O10362C14O10373C21O10389C23O10386C28O10408C33O10440C46O10414C51O10408C53O10470,,
code-creation,JS,10,64958,0x3f1a4fba8b7e,177,validateNumber node:internal/validators:176:24,0x18a4fd0b2f38,~
code-source-info,0x3f1a4fba8b7e,20,4452,4897,C19O4492C25O4527C41O4533C46O4527C47O4585C54O4611C66O4643C83O4692C86O4692C92O4719C110O4788C136O4820C151O4864C169O4725C174O4719C176O4896,,
code-creation,JS,10,65000,0x3f1a4fba8d46,119,allocate node:buffer:401:18,0xd5ac0c70ca8,~
code-source-info,0x3f1a4fba8d46,29,11720,12035,C0O11731C1O11740C6O11752C11O11759C16O11776C17O11783C20O11802C24O11811C27O11792C32O11825C34O11837C39O11848C41O11846C44O11834C49O11867C52O11867C55O11895C62O11910C67O11921C75O11895C81O11944C88O11958C94O11955C100O11968C103O11968C106O11985C108O11994C109O12001C114O12008C118O12033,,
code-creation,JS,10,65042,0x3f1a4fba8f1e,86,tryReadSync node:fs:429:21,0x3b5f1dae9250,~
code-source-info,0x3f1a4fba8f1e,55,11142,11377,C0O11191C2O11203C7O11226C12O11241C29O11241C35O11277C47O11283C48O11310C55O11324C57O11334C62O11337C67O11337C83O11358C85O11375,,
code-creation,JS,10,65083,0x3f1a4fba9186,281,readSync node:fs:693:18,0x3b5f1dae9500,~
code-source-info,0x3f1a4fba9186,55,17867,18987,C0O17867C2O17919C7O17924C13O17947C18O17947C22O17987C25O18020C32O18027C43O18078C47O18121C55O18136C63O18121C68O18196C76O18310C79O18205C87O18223C93O18239C100O18250C105O18266C114O18332C118O18364C122O18391C135O18391C140O18436C147O18452C148O18463C153O18476C154O18485C155O18504C161O18515C166O18528C182O18534C187O18528C188O18656C193O18704C204O18656C209O18720C214O18746C218O18764C226O18764C231O18819C233O18840C238O18848C263O18848C269O18940C274O18940C278O18971C280O18985,,
code-creation,JS,10,65125,0x3f1a4fba9416,52, node:internal/fs/utils:708:40,0x3b5f1daf41b0,~
code-source-info,0x3f1a4fba9416,56,19163,19284,C14O19192C22O19196C29O19220C30O19229C31O19237C44O19237C49O19272C51O19282,,
code-creation,JS,10,65125,0x3f1a4fba955e,155, node:internal/validators:115:3,0x18a4fd0b2d60,~
code-source-info,0x3f1a4fba955e,20,2811,3274,C36O2952C42O2991C58O2997C63O2991C64O3056C69O3061C75O3093C91O3099C96O3093C97O3158C99O3168C106O3183C111O3198C121O3237C134O3250C147O3204C152O3198C154O3273,,
code-creation,JS,10,65333,0x3f1a4fba974e,51, node:internal/validators:354:40,0x18a4fd0b3258,~
code-source-info,0x3f1a4fba974e,20,9420,9650,C14O9453C19O9458C25O9491C30O9522C43O9497C48O9491C50O9649,,
code-creation,JS,10,65333,0x3f1a4fba98a6,151, node:internal/validators:94:3,0x18a4fd0b2d10,~
code-source-info,0x3f1a4fba98a6,20,2187,2568,C12O2207C25O2237C32O2270C38O2307C54O2313C59O2307C60O2366C65O2371C71O2401C87O2407C92O2401C93O2460C95O2470C102O2485C107O2498C117O2537C130O2550C143O2504C148O2498C150O2567,,
code-creation,JS,10,65375,0x3f1a4fba9a96,103, node:internal/fs/utils:658:3,0x3b5f1daf4070,~
code-source-info,0x3f1a4fba9a96,56,17787,18166,C0O17827C1O17838C6O17851C22O17857C27O17851C28O17915C29O17926C34O17939C50O17945C55O17939C56O18003C58O18014C64O18023C69O18047C82O18136C95O18053C100O18047C102O18165,,
code-creation,JS,10,65417,0x3f1a4fba9d96,148, node:internal/fs/utils:896:42,0x3b5f1daf44d0,~
code-source-info,0x3f1a4fba9d96,56,24356,24826,C0O24380C6O24420C11O24420C18O24462C24O24502C29O24525C32O24520C34O24517C44O24551C50O24558C53O24545C58O24573C71O24650C74O24645C92O24670C98O24677C114O24579C119O24573C122O24750C127O24781C140O24756C145O24750C147O24825,,
code-creation,JS,10,65458,0x3f1a4fba9f56,47,closeSync node:fs:526:19,0x3b5f1dae9390,~
code-source-info,0x3f1a4fba9f56,55,13562,13684,C0O13571C5O13576C11O13611C13O13617C18O13625C31O13625C36O13654C41O13654C46O13683,,
code-creation,JS,10,65458,0x3f1a4fbaa09e,162,toString node:buffer:787:46,0xd5ac0c72bf0,~
code-source-info,0x3f1a4fbaa09e,29,23297,23859,C0O23297C2O23338C8O23345C13O23370C20O23388C25O23370C31O23396C32O23421C37O23432C38O23442C43O23452C48O23470C50O23480C55O23492C57O23502C58O23514C65O23529C71O23558C76O23569C83O23591C90O23604C92O23612C97O23626C99O23636C100O23640C104O23684C109O23684C115O23706C116O23722C119O23722C124O23750C126O23777C133O23783C138O23777C139O23833C156O23833C161O23857,,
code-creation,JS,10,65542,0x3f1a4fbaa376,499,getEncodingOps node:buffer:682:24,0xd5ac0c72a60,~
code-source-info,0x3f1a4fbaa
code-creation,JS,10,65583,0x3f1a4fbaa776,12,slice node:buffer:597:12,0xd5ac0c71508,~
code-source-info,0x3f1a4fbaa776,29,16749,16795,C0O16774C5O16774C11O16795,,
code-creation,JS,10,65792,0x3f1a4fbaaac6,463,Module._compile node:internal/modules/cjs/loader:1200:37,0x5d9fd2ceaf0,~
code-source-info,0x3f1a4fbaaac
code-creation,JS,10,65833,0x3f1a4fbaae46,28, node:internal/modules/cjs/loader:111:3,0x5d9fd2cda18,~
code-source-info,0x3f1a4fbaae46,59,3450,3541,C0O3457C8O3457C20O3499C27O3541,,
code-creation,JS,10,65875,0x3f1a4fbab3a6,301,wrapSafe node:internal/modules/cjs/loader:1139:18,0x5d9fd2cea70,~
code-source-info,0x3f1a4fbab3a6,59,35747,37409,C0O35747C9O35790C17O35825C22O35832C27O35832C33O35851C41O35885C49O35899C54O35888C71O35940C78O35951C85O35968C89O36030C102O35940C108O36350C114O36372C128O36442C139O36372C144O36482C154O36482C159O36535C163O36568C170O36592C182O36707C186O36723C197O36568C203O37057C209O37079C223O37149C234O37079C239O37189C243O37198C255O37221C260O37233C267O37244C272O37302C280O37302C285O37283C290O37353C293O37353C298O37393C300O37393,,
code-creation,JS,10,65958,0x3f1a4fbabd66,438,internalCompileFunction node:internal/vm:31:33,0x5d9fd2d3df0,~
script-source,62,node:internal/vm,'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n} = primordials;\n\nconst {\n  compileFunction\x2C\n  isContext: _isContext\x2C\n} = internalBinding('contextify');\nconst {\n  validateArray\x2C\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateFunction\x2C\n  validateObject\x2C\n  validateString\x2C\n  validateStringArray\x2C\n  validateUint32\x2C\n} = require('internal/validators');\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n} = require('internal/errors').codes;\n\nfunction isContext(object) {\n  validateObject(object\x2C 'object'\x2C { __proto__: null\x2C allowArray: true });\n\n  return _isContext(object);\n}\n\nfunction internalCompileFunction(code\x2C params\x2C options) {\n  validateString(code\x2C 'code');\n  if (params !== undefined) {\n    validateStringArray(params\x2C 'params');\n  }\n\n  const {\n    filename = ''\x2C\n    columnOffset = 0\x2C\n    lineOffset = 0\x2C\n    cachedData = undefined\x2C\n    produceCachedData = false\x2C\n    parsingContext = undefined\x2C\n    contextExtensions = []\x2C\n    importModuleDynamically\x2C\n  } = options;\n\n  validateString(filename\x2C 'options.filename');\n  validateUint32(columnOffset\x2C 'options.columnOffset');\n  validateUint32(lineOffset\x2C 'options.lineOffset');\n  if (cachedData !== undefined)\n    validateBuffer(cachedData\x2C 'options.cachedData');\n  validateBoolean(produceCachedData\x2C 'options.produceCachedData');\n  if (parsingContext !== undefined) {\n    if (\n      typeof parsingContext !== 'object' ||\n      parsingContext === null ||\n      !isContext(parsingContext)\n    ) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'options.parsingContext'\x2C\n        'Context'\x2C\n        parsingContext\n      );\n    }\n  }\n  validateArray(contextExtensions\x2C 'options.contextExtensions');\n  ArrayPrototypeForEach(contextExtensions\x2C (extension\x2C i) => {\n    const name = `options.contextExtensions[${i}]`;\n    validateObject(extension\x2C name\x2C { __proto__: null\x2C nullable: true });\n  });\n\n  const result = compileFunction(\n    code\x2C\n    filename\x2C\n    lineOffset\x2C\n    columnOffset\x2C\n    cachedData\x2C\n    produceCachedData\x2C\n    parsingContext\x2C\n    contextExtensions\x2C\n    params\n  );\n\n  if (produceCachedData) {\n    result.function.cachedDataProduced = result.cachedDataProduced;\n  }\n\n  if (result.cachedData) {\n    result.function.cachedData = result.cachedData;\n  }\n\n  if (typeof result.cachedDataRejected === 'boolean') {\n    result.function.cachedDataRejected = result.cachedDataRejected;\n  }\n\n  if (importModuleDynamically !== undefined) {\n    validateFunction(importModuleDynamically\x2C\n                     'options.importModuleDynamically');\n    const { importModuleDynamicallyWrap } = require('internal/vm/module');\n    const wrapped = importModuleDynamicallyWrap(importModuleDynamically);\n    const func = result.function;\n    const { setCallbackForWrap } = require('internal/modules/esm/utils');\n    setCallbackForWrap(result.cacheKey\x2C {\n      importModuleDynamically: (s\x2C _k\x2C i) => wrapped(s\x2C func\x2C i)\x2C\n    });\n  }\n\n  return result;\n}\n\nmodule.exports = {\n  internalCompileFunction\x2C\n  isContext\x2C\n};\n
code-source-info,0x3f1a4fbabd
code-creation,JS,10,66125,0x3f1a4fbac4de,69,validateStringArray node:internal/validators:306:29,0x18a4fd0b3168,~
code-source-info,0x3f1a4fbac4de,20,8245,8386,C0O8263C5O8263C10O8306C12O8319C16O8311C21O8338C26O8358C32O8366C42O8374C53O8338C58O8328C63O8293C68O8385,,
code-creation,JS,10,66125,0x3f1a4fbac686,95, node:internal/validators:288:39,0x18a4fd0b3118,~
code-source-info,0x3f1a4fbac686,20,7774,8052,C16O7810C21O7815C27O7842C43O7848C48O7842C49O7912C56O7919C61O7953C66O7976C71O7993C87O7999C92O7993C94O8051,,
tick,0x100863bf4,66167,1,0x10028a9dc,2,0x0,0x3f1a4fbabe74,0x3f1a4fbab46b,0x3f1a4fbaab0b,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
code-creation,Eval,10,66458,0x3f1a4fbac9be,5, /Users/guilhermegarcia/jumblie/prof-array-slice.js:1:1,0x3f1a4fbac878,~
script-source,383,/Users/guilhermegarcia/jumblie/prof-array-slice.js,/**\n * Returns an array where the index represents the ascii\n * code and the value represents the number of occurences\n * for each letter in `letters`.\n *\n * @param {String} letters\n * @returns {Array.<int>}\n */\nfunction createPool(letters) {\n  var arr = new Array(256);\n  for (let i = 0; i < 256; i++) {\n    arr[i] = 0;\n  }\n\n  for (i = 0; i < letters.length; i++) {\n    arr[letters.charCodeAt(i)] += 1;\n  }\n  return arr;\n}\n\nconst letters = "showclownjuggletrapeze";\n\nfor (let i = 0; i < 1000000; i++) {\n  const pool = createPool(letters);\n  const secPool = pool.slice(0);\n}\n
code-source-info,0x3f1a4fbac9be,383,0,575,C0O0C4O575,,
code-creation,JS,10,66500,0x3f1a4fbaca9e,50, /Users/guilhermegarcia/jumblie/prof-array-slice.js:1:1,0x3f1a4fbac938,~
code-source-info,0x3f1a4fbaca9e,383,0,575,C0O0C5O441C8O481C10O486C16O486C21O519C26O563C33O563C39O498C44O468C49O574,,
code-creation,JS,10,66542,0x3f1a4fbacfb6,19,importModuleDynamicallyWrap node:internal/vm/module:426:37,0x5d9fd2db748,~
script-source,66,node:internal/vm/module,'use strict';\n\nconst assert = require('internal/assert');\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypeSome\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  SafePromiseAllReturnVoid\x2C\n  SafeWeakMap\x2C\n  Symbol\x2C\n  SymbolToStringTag\x2C\n  TypeError\x2C\n} = primordials;\n\nconst { isContext } = internalBinding('contextify');\nconst {\n  isModuleNamespaceObject\x2C\n} = require('internal/util/types');\nconst {\n  customInspectSymbol\x2C\n  emitExperimentalWarning\x2C\n  getConstructorOf\x2C\n  kEmptyObject\x2C\n} = require('internal/util');\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_VM_MODULE_ALREADY_LINKED\x2C\n  ERR_VM_MODULE_DIFFERENT_CONTEXT\x2C\n  ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA\x2C\n  ERR_VM_MODULE_LINK_FAILURE\x2C\n  ERR_VM_MODULE_NOT_MODULE\x2C\n  ERR_VM_MODULE_STATUS\x2C\n} = require('internal/errors').codes;\nconst {\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateObject\x2C\n  validateUint32\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst binding = internalBinding('module_wrap');\nconst {\n  ModuleWrap\x2C\n  kUninstantiated\x2C\n  kInstantiating\x2C\n  kInstantiated\x2C\n  kEvaluating\x2C\n  kEvaluated\x2C\n  kErrored\x2C\n} = binding;\n\nconst STATUS_MAP = {\n  [kUninstantiated]: 'unlinked'\x2C\n  [kInstantiating]: 'linking'\x2C\n  [kInstantiated]: 'linked'\x2C\n  [kEvaluating]: 'evaluating'\x2C\n  [kEvaluated]: 'evaluated'\x2C\n  [kErrored]: 'errored'\x2C\n};\n\nlet globalModuleId = 0;\nconst defaultModuleName = 'vm:module';\nconst wrapToModuleMap = new SafeWeakMap();\n\nconst kWrap = Symbol('kWrap');\nconst kContext = Symbol('kContext');\nconst kPerContextModuleId = Symbol('kPerContextModuleId');\nconst kLink = Symbol('kLink');\n\nclass Module {\n  constructor(options) {\n    emitExperimentalWarning('VM Modules');\n\n    if (new.target === Module) {\n      // eslint-disable-next-line no-restricted-syntax\n      throw new TypeError('Module is not a constructor');\n    }\n\n    const {\n      context\x2C\n      sourceText\x2C\n      syntheticExportNames\x2C\n      syntheticEvaluationSteps\x2C\n    } = options;\n\n    if (context !== undefined) {\n      validateObject(context\x2C 'context');\n      if (!isContext(context)) {\n        throw new ERR_INVALID_ARG_TYPE('options.context'\x2C 'vm.Context'\x2C\n                                       context);\n      }\n    }\n\n    let { identifier } = options;\n    if (identifier !== undefined) {\n      validateString(identifier\x2C 'options.identifier');\n    } else if (context === undefined) {\n      identifier = `${defaultModuleName}(${globalModuleId++})`;\n    } else if (context[kPerContextModuleId] !== undefined) {\n      const curId = context[kPerContextModuleId];\n      identifier = `${defaultModuleName}(${curId})`;\n      context[kPerContextModuleId] += 1;\n    } else {\n      identifier = `${defaultModuleName}(0)`;\n      ObjectDefineProperty(context\x2C kPerContextModuleId\x2C {\n        __proto__: null\x2C\n        value: 1\x2C\n        writable: true\x2C\n        enumerable: false\x2C\n        configurable: true\x2C\n      });\n    }\n\n    if (sourceText !== undefined) {\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C sourceText\x2C\n                                   options.lineOffset\x2C options.columnOffset\x2C\n                                   options.cachedData);\n      const { setCallbackForWrap } = require('internal/modules/esm/utils');\n      setCallbackForWrap(this[kWrap]\x2C {\n        initializeImportMeta: options.initializeImportMeta\x2C\n        importModuleDynamically: options.importModuleDynamically ?\n          importModuleDynamicallyWrap(options.importModuleDynamically) :\n          undefined\x2C\n      });\n    } else {\n      assert(syntheticEvaluationSteps);\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C\n                                   syntheticExportNames\x2C\n                                   syntheticEvaluationSteps);\n    }\n\n    wrapToModuleMap.set(this[kWrap]\x2C this);\n\n    this[kContext] = context;\n  }\n\n  get identifier() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    return this[kWrap].url;\n  }\n\n  get context() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    return this[kContext];\n  }\n\n  get namespace() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (this[kWrap].getStatus() < kInstantiated) {\n      throw new ERR_VM_MODULE_STATUS('must not be unlinked or linking');\n    }\n    return this[kWrap].getNamespace();\n  }\n\n  get status() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    return STATUS_MAP[this[kWrap].getStatus()];\n  }\n\n  get error() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (this[kWrap].getStatus() !== kErrored) {\n      throw new ERR_VM_MODULE_STATUS('must be errored');\n    }\n    return this[kWrap].getError();\n  }\n\n  async link(linker) {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    validateFunction(linker\x2C 'linker');\n    if (this.status === 'linked') {\n      throw new ERR_VM_MODULE_ALREADY_LINKED();\n    }\n    if (this.status !== 'unlinked') {\n      throw new ERR_VM_MODULE_STATUS('must be unlinked');\n    }\n    await this[kLink](linker);\n    this[kWrap].instantiate();\n  }\n\n  async evaluate(options = kEmptyObject) {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n\n    validateObject(options\x2C 'options');\n\n    let timeout = options.timeout;\n    if (timeout === undefined) {\n      timeout = -1;\n    } else {\n      validateUint32(timeout\x2C 'options.timeout'\x2C true);\n    }\n    const { breakOnSigint = false } = options;\n    validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\n    const status = this[kWrap].getStatus();\n    if (status !== kInstantiated &&\n        status !== kEvaluated &&\n        status !== kErrored) {\n      throw new ERR_VM_MODULE_STATUS(\n        'must be one of linked\x2C evaluated\x2C or errored'\n      );\n    }\n    await this[kWrap].evaluate(timeout\x2C breakOnSigint);\n  }\n\n  [customInspectSymbol](depth\x2C options) {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (typeof depth === 'number' && depth < 0)\n      return this;\n\n    const constructor = getConstructorOf(this) || Module;\n    const o = { __proto__: { constructor } };\n    o.status = this.status;\n    o.identifier = this.identifier;\n    o.context = this.context;\n\n    ObjectSetPrototypeOf(o\x2C ObjectGetPrototypeOf(this));\n    ObjectDefineProperty(o\x2C SymbolToStringTag\x2C {\n      __proto__: null\x2C\n      value: constructor.name\x2C\n      configurable: true\n    });\n\n    // Lazy to avoid circular dependency\n    const { inspect } = require('internal/util/inspect');\n    return inspect(o\x2C { ...options\x2C customInspect: false });\n  }\n}\n\nconst kDependencySpecifiers = Symbol('kDependencySpecifiers');\nconst kNoError = Symbol('kNoError');\n\nclass SourceTextModule extends Module {\n  #error = kNoError;\n  #statusOverride;\n\n  constructor(sourceText\x2C options = kEmptyObject) {\n    validateString(sourceText\x2C 'sourceText');\n    validateObject(options\x2C 'options');\n\n    const {\n      lineOffset = 0\x2C\n      columnOffset = 0\x2C\n      initializeImportMeta\x2C\n      importModuleDynamically\x2C\n      context\x2C\n      identifier\x2C\n      cachedData\x2C\n    } = options;\n\n    validateInt32(lineOffset\x2C 'options.lineOffset');\n    validateInt32(columnOffset\x2C 'options.columnOffset');\n\n    if (initializeImportMeta !== undefined) {\n      validateFunction(initializeImportMeta\x2C 'options.initializeImportMeta');\n    }\n\n    if (importModuleDynamically !== undefined) {\n      validateFunction(importModuleDynamically\x2C 'options.importModuleDynamically');\n    }\n\n    if (cachedData !== undefined) {\n      validateBuffer(cachedData\x2C 'options.cachedData');\n    }\n\n    super({\n      sourceText\x2C\n      context\x2C\n      identifier\x2C\n      lineOffset\x2C\n      columnOffset\x2C\n      cachedData\x2C\n      initializeImportMeta\x2C\n      importModuleDynamically\x2C\n    });\n\n    this[kLink] = async (linker) => {\n      this.#statusOverride = 'linking';\n\n      const promises = this[kWrap].link(async (identifier\x2C assert) => {\n        const module = await linker(identifier\x2C this\x2C { assert });\n        if (module[kWrap] === undefined) {\n          throw new ERR_VM_MODULE_NOT_MODULE();\n        }\n        if (module.context !== this.context) {\n          throw new ERR_VM_MODULE_DIFFERENT_CONTEXT();\n        }\n        if (module.status === 'errored') {\n          throw new ERR_VM_MODULE_LINK_FAILURE(`request for '${identifier}' resolved to an errored module`\x2C module.error);\n        }\n        if (module.status === 'unlinked') {\n          await module[kLink](linker);\n        }\n        return module[kWrap];\n      });\n\n      try {\n        if (promises !== undefined) {\n          await SafePromiseAllReturnVoid(promises);\n        }\n      } catch (e) {\n        this.#error = e;\n        throw e;\n      } finally {\n        this.#statusOverride = undefined;\n      }\n    };\n\n    this[kDependencySpecifiers] = undefined;\n  }\n\n  get dependencySpecifiers() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (this[kDependencySpecifiers] === undefined) {\n      this[kDependencySpecifiers] = this[kWrap].getStaticDependencySpecifiers();\n    }\n    return this[kDependencySpecifiers];\n  }\n\n  get status() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (this.#error !== kNoError) {\n      return 'errored';\n    }\n    if (this.#statusOverride) {\n      return this.#statusOverride;\n    }\n    return super.status;\n  }\n\n  get error() {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (this.#error !== kNoError) {\n      return this.#error;\n    }\n    return super.error;\n  }\n\n  createCachedData() {\n    const { status } = this;\n    if (status === 'evaluating' ||\n        status === 'evaluated' ||\n        status === 'errored') {\n      throw new ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA();\n    }\n    return this[kWrap].createCachedData();\n  }\n}\n\nclass SyntheticModule extends Module {\n  constructor(exportNames\x2C evaluateCallback\x2C options = kEmptyObject) {\n    if (!ArrayIsArray(exportNames) ||\n      ArrayPrototypeSome(exportNames\x2C (e) => typeof e !== 'string')) {\n      throw new ERR_INVALID_ARG_TYPE('exportNames'\x2C\n                                     'Array of unique strings'\x2C\n                                     exportNames);\n    } else {\n      ArrayPrototypeForEach(exportNames\x2C (name\x2C i) => {\n        if (ArrayPrototypeIndexOf(exportNames\x2C name\x2C i + 1) !== -1) {\n          throw new ERR_INVALID_ARG_VALUE(`exportNames.${name}`\x2C\n                                          name\x2C\n                                          'is duplicated');\n        }\n      });\n    }\n    validateFunction(evaluateCallback\x2C 'evaluateCallback');\n\n    validateObject(options\x2C 'options');\n\n    const { context\x2C identifier } = options;\n\n    super({\n      syntheticExportNames: exportNames\x2C\n      syntheticEvaluationSteps: evaluateCallback\x2C\n      context\x2C\n      identifier\x2C\n    });\n\n    this[kLink] = () => this[kWrap].link(() => {\n      assert.fail('link callback should not be called');\n    });\n  }\n\n  setExport(name\x2C value) {\n    if (this[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    validateString(name\x2C 'name');\n    if (this[kWrap].getStatus() < kInstantiated) {\n      throw new ERR_VM_MODULE_STATUS('must be linked');\n    }\n    this[kWrap].setExport(name\x2C value);\n  }\n}\n\nfunction importModuleDynamicallyWrap(importModuleDynamically) {\n  const importModuleDynamicallyWrapper = async (...args) => {\n    const m = await ReflectApply(importModuleDynamically\x2C this\x2C args);\n    if (isModuleNamespaceObject(m)) {\n      return m;\n    }\n    if (!m || m[kWrap] === undefined) {\n      throw new ERR_VM_MODULE_NOT_MODULE();\n    }\n    if (m.status === 'errored') {\n      throw m.error;\n    }\n    return m.namespace;\n  };\n  return importModuleDynamicallyWrapper;\n}\n\nmodule.exports = {\n  Module\x2C\n  SourceTextModule\x2C\n  SyntheticModule\x2C\n  importModuleDynamicallyWrap\x2C\n  getModuleFromWrap: (wrap) => wrapToModuleMap.get(wrap)\x2C\n};\n
code-source-info,0x3f1a4fbacfb6,66,11530,11973,C0O11530C13O11599C18O11971,,
code-creation,JS,10,66958,0x3f1a4fbadfee,18,setCallbackForWrap node:internal/modules/esm/utils:26:28,0x5d9fd2d7628,~
code-source-info,0x3f1a4fbadfee,65,565,612,C0O582C5O594C10O594C17O611,,
code-creation,JS,10,67000,0x3f1a4fbae366,176,makeRequireFunction node:internal/modules/helpers:68:29,0x5d9fd2d6060,~
code-source-info,0x3f1a4fbae366,63,1966,3960,C0O1966C22O2002C25O2006C29O2002C31O2026C33O2037C53O2069C58O2073C69O2089C73O2069C75O2116C80O2116C83O2116C85O2148C91O2157C97O2185C106O3346C111O3577C113O3593C117O3733C119O3747C123O3759C138O3799C146O3759C151O3865C154O3893C158O3884C162O3909C165O3932C169O3923C173O3943C175O3958,,
code-creation,JS,10,67042,0x3f1a4fbae876,99,createPool /Users/guilhermegarcia/jumblie/prof-array-slice.js:9:20,0x3f1a4fbac9f0,~
code-source-info,0x3f1a4fbae876,383,231,423,C0O255C11O255C17O286C19O291C23O291C28O309C29O316C33O299C38O273C42O333C43O335C46O342C50O352C54O342C59O383C64O394C68O383C80O398C84O361C89O361C92O328C96O410C98O421,,
code-creation,JS,11,67250,0x1075ccd80,472, /Users/guilhermegarcia/jumblie/prof-array-slice.js:1:1,0x3f1a4fbac938,^
code-source-info,0x1075ccd80,383,0,575,,,
code-creation,JS,11,67292,0x1075ccfc0,1576,dirname node:path:1279:10,0x286f2a2605b8,^
code-source-info,0x1075ccfc0,39,38863,39532,,,
code-creation,JS,11,67292,0x1075cd660,1752,Module._nodeModulePaths node:internal/modules/cjs/loader:732:37,0x5d9fd2ce578,^
code-source-info,0x1075cd660,59,22233,23364,,,
code-creation,JS,11,67292,0x1075cdda0,336,validateString node:internal/validators:161:24,0x18a4fd0b2e00,^
code-source-info,0x1075cdda0,20,4119,4228,,,
code-creation,JS,11,67333,0x1075cdf60,904,createPool /Users/guilhermegarcia/jumblie/prof-array-slice.js:9:20,0x3f1a4fbac9f0,^
code-source-info,0x1075cdf60,383,231,423,,,
tick,0x100d058c0,67458,0,0x0,4,0x0,0x1075cce2c,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x100cc8000,68708,0,0x0,4,0x0,0x1075cce2c,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1000ba1e4,69958,0,0x0,0,0x1075ce024,0x1075cce2c,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
new,MemoryChunk,0x221e19480000,262144
new,MemoryChunk,0x3e8911000000,262144
new,MemoryChunk,0x33cf40cc0000,262144
new,MemoryChunk,0x29bfde140000,262144
tick,0x100594000,71208,0,0x0,1
tick,0x1005b0b40,72458,0,0x0,1
new,MemoryChunk,0x2a5308e80000,262144
new,MemoryChunk,0x2c9b8b1c0000,262144
tick,0x100582da8,73667,0,0x0,1
tick,0x1000b95fc,74917,0,0x0,0,0x1075ce1c0,0x1075cce2c,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ce02c,76167,0,0x0,0,0x1075cce2c,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1000b9bf4,77417,0,0x0,0,0x1075ce024,0x1075cce2c,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1000b9bf4,78667,0,0x0,0,0x1075ce024,0x1075cce2c,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
code-creation,JS,13,79083,0x1075ce360,1516,createPool /Users/guilhermegarcia/jumblie/prof-array-slice.js:9:20,0x3f1a4fbac9f0,*
code-source-info,0x1075ce360,383,231,423,C0O231C100O255C196O316C212O273C232O291C240O316C256O299C260O273C276O335C284O352C316O342C336O383C492O398C500O383C536O398C544O361C552O328C568O342C580O383C760O398C768O383C804O361C808O398C816O361C824O328C840O421C884O231C952O273C1064O383C1148O328C1216O383C1308O328,,
tick,0x1075ce464,79917,0,0x0,0,0x1075cce2c,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ce654,81000,0,0x0,0,0x1075cce2c,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
code-creation,JS,13,81917,0x1075cea00,1852, /Users/guilhermegarcia/jumblie/prof-array-slice.js:1:1,0x3f1a4fbac938,*
code-source-info,0x1075cea00,383,0,575,C0O0C80O486C116O519C172O255I0C268O316I0C284O273I0C304O291I0C312O316I0C328O299I0C332O273I0C348O335I0C356O352I0C384O342I0C400O383I0C560O398I0C568O383I0C604O398I0C612O361I0C620O328I0C632O383I0C636O342I0C644O383I0C824O398I0C832O383I0C868O361I0C872O398I0C880O361I0C888O328I0C904O498C908O563C932O498C944O468C960O574C1004O0C1096O273I0C1248O383I0C1356O328I0C1444O383I0C1556O328I0C1644O468,F0O519,S0x3f1a4fbac9f0
tick,0x1075ceae4,82250,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x10060848c,83500,0,0x0,1
tick,0x1075ceb30,84792,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc84,86042,0,0x0,1
tick,0x1075cead4,87292,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,88542,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,89792,0,0x0,1
tick,0x1075ceb4c,91042,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cece0,92292,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cead4,93542,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,94833,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cead4,96083,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x10060848c,97292,0,0x0,1
tick,0x1075cead4,98583,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,99833,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a538ef94,101083,0,0x0,0,0x1000a0b5c,0x1075ceda4,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a538ef84,102333,0,0x0,0,0x1000a0b5c,0x1075ceda4,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,103583,0,0x0,1
tick,0x1075ceb4c,104708,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1006084ac,105958,0,0x0,1
tick,0x1075ceb4c,107250,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,108500,0,0x0,1
tick,0x1075ced1c,109583,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cead4,110792,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x10060848c,112083,0,0x0,1
tick,0x1a538ec8c,113333,0,0x0,1
tick,0x1075ced4c,114625,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a538ef84,115875,0,0x0,0,0x1000a0b5c,0x1075ceda4,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,117125,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,118333,0,0x0,1
tick,0x1075ceb5c,119458,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc44,120667,0,0x0,1
tick,0x1075cead4,121958,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb30,123208,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x10060848c,124458,0,0x0,1
tick,0x1075ced5c,125750,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1005f3664,126958,0,0x0,1
tick,0x1075cec78,128250,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cec78,129500,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc70,130708,0,0x0,1
tick,0x1075ced5c,132000,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,133208,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc70,134500,0,0x0,1
tick,0x1075ceb5c,135750,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceca4,137000,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb30,138250,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,139500,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1006084ac,140750,0,0x0,1
tick,0x1075ceb5c,142042,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cead4,143292,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cec9c,144542,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cead4,145792,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,147000,0,0x0,1
tick,0x1a5225bec,148125,0,0x0,1
tick,0x1075ceb4c,149375,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb30,150583,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,151875,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a538ef84,153125,0,0x0,0,0x1000a0b5c,0x1075ceda4,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a538ef84,154375,0,0x0,0,0x1000a0b5c,0x1075ceda4,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc5c,155625,0,0x0,1
tick,0x1075ceb4c,156875,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb0c,158125,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,159375,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cead4,160625,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc44,161875,0,0x0,1
tick,0x1075ceb30,163167,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cead4,164417,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb30,165667,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cead4,166917,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,168208,0,0x0,1
tick,0x10060848c,169417,0,0x0,1
tick,0x1075ceae4,170667,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb30,171917,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,173167,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cead8,174417,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x10060848c,175667,0,0x0,1
tick,0x1075ceb4c,176958,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cec9c,178208,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a538ef84,179458,0,0x0,0,0x1000a0b5c,0x1075ceda4,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cead4,180708,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cead4,181958,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc70,183208,0,0x0,1
tick,0x1075ceb5c,184458,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb30,185708,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb30,186958,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb30,188208,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,189458,0,0x0,1
tick,0x1075cead4,190583,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1006084ac,191833,0,0x0,1
tick,0x1075cead4,193125,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb30,194375,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cead4,195625,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ced4c,196875,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1006084ac,198083,0,0x0,1
tick,0x1075cead4,199375,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,200625,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb30,201875,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb30,203167,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc70,204375,0,0x0,1
tick,0x1075ceb30,205625,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,206917,0,0x0,1
tick,0x1075cead4,207958,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb30,209250,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x10060848c,210458,0,0x0,1
tick,0x1075ceb4c,211750,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cead4,213000,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb30,214250,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ced5c,215500,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceae4,216750,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,217958,0,0x0,1
tick,0x1075cead4,219125,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1006084ac,220333,0,0x0,1
tick,0x1075ceb30,221625,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cead4,222833,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,224125,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cead4,225375,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,226625,0,0x0,1
tick,0x1075ceb30,227667,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a538ef84,228958,0,0x0,0,0x1000a0b5c,0x1075ceda4,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,230208,0,0x0,1
tick,0x1006084ac,231458,0,0x0,1
tick,0x1075ceb4c,232708,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,234000,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ced1c,235250,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cead4,236500,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cead4,237750,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,238958,0,0x0,1
tick,0x1075ced5c,240083,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc5c,241333,0,0x0,1
tick,0x1075ceae4,242625,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x10058fb28,243875,0,0x0,1
tick,0x1a538ef94,245125,0,0x0,0,0x1000a0b5c,0x1075ceda4,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cec9c,246375,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc44,247583,0,0x0,1
tick,0x1075ced78,248875,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cead4,250125,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cec9c,251333,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb5c,252625,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc44,253875,0,0x0,1
tick,0x1075cead4,255167,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,256417,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cead4,257625,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a538ef84,258917,0,0x0,0,0x1000a0b5c,0x1075ceda4,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,260125,0,0x0,1
tick,0x1075ceb30,261208,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,262458,0,0x0,1
tick,0x1a538eedc,263583,0,0x0,0,0x1000a0b5c,0x1075ceda4,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc44,264792,0,0x0,1
tick,0x1075ced78,266083,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1005f3664,267292,0,0x0,1
tick,0x1a538ef94,268583,0,0x0,0,0x1000a0b5c,0x1075ceda4,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,269833,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,271083,0,0x0,1
tick,0x1075ceb4c,272167,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ced1c,273417,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1006084ac,274667,0,0x0,1
tick,0x1075cead4,275917,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,277167,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,278458,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb30,279708,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,280917,0,0x0,1
tick,0x1075ceb4c,282042,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1006084ac,283250,0,0x0,1
tick,0x1075ceb4c,284542,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cead4,285792,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc84,287042,0,0x0,1
tick,0x1a538ef84,288292,0,0x0,0,0x1000a0b5c,0x1075ceda4,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,289542,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb5c,290792,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ced4c,292083,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,293292,0,0x0,1
tick,0x1075ceb4c,294375,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb5c,295625,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,296875,0,0x0,1
tick,0x1000a0cd4,298000,0,0x0,0,0x1075ceda4,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc84,299208,0,0x0,1
tick,0x1075ceb30,300500,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1005e6398,301708,0,0x0,1
tick,0x1075ced78,303000,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,304125,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cead4,305375,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc64,306583,0,0x0,1
tick,0x1075ceb4c,307875,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb5c,309125,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,310417,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a538ef84,311667,0,0x0,0,0x1000a0b5c,0x1075ceda4,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb30,312917,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc64,314125,0,0x0,1
tick,0x1075ceb4c,315417,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ced78,316667,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cead4,317917,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1006084ac,319125,0,0x0,1
tick,0x1075cead4,320417,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ced78,321625,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x10059d2a4,322875,0,0x0,1
tick,0x1075ceae4,324167,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,325417,0,0x0,1
tick,0x1a538ec8c,326667,0,0x0,1
tick,0x1075ceb4c,327958,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cec78,329208,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5322234,330417,0,0x0,1
tick,0x1008ffc5c,331667,0,0x0,1
tick,0x1005188f0,332958,0,0x0,1
tick,0x10040299c,334167,0,0x0,1
tick,0x1075ceb30,335458,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,336708,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a51cf104,337958,0,0x0,1
tick,0x1075cead4,339250,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,340458,0,0x0,1
tick,0x1075ceb5c,341583,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,342833,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,344042,0,0x0,1
tick,0x1075ceb4c,345167,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc70,346375,0,0x0,1
tick,0x1075ceb4c,347667,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cead4,348917,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc84,350167,0,0x0,1
tick,0x1075cead4,351458,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,352708,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,353958,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,355208,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,356417,0,0x0,1
tick,0x1075ceb4c,357542,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cead4,358792,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x10060848c,360000,0,0x0,1
tick,0x1a51ad56c,361292,0,0x0,1
tick,0x1075ceb4c,362542,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cead4,363792,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb34,365042,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cece0,366292,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc70,367542,0,0x0,1
tick,0x1075ceb30,368792,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,370083,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a538ef84,371333,0,0x0,0,0x1000a0b5c,0x1075ceda4,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cead4,372583,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x10058bb50,373792,0,0x0,1
tick,0x1008ffc70,375042,0,0x0,1
tick,0x1008ffc44,376292,0,0x0,1
tick,0x1075cead4,377583,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb50,378833,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a538ef84,380083,0,0x0,0,0x1000a0b5c,0x1075ceda4,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cead4,381375,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cead4,382583,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc70,383833,0,0x0,1
tick,0x1075cead4,385125,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a538ef94,386375,0,0x0,0,0x1000a0b5c,0x1075ceda4,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb30,387625,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,388833,0,0x0,1
tick,0x1075ceb30,389958,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc64,391167,0,0x0,1
tick,0x1075ceb4c,392458,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,393750,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5322234,394958,0,0x0,1
tick,0x1a538ef84,396250,0,0x0,0,0x1000a0b5c,0x1075ceda4,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,397500,0,0x0,1
tick,0x1075cec78,398583,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ced1c,399833,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,401042,0,0x0,1
tick,0x1075cead4,402167,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc84,403375,0,0x0,1
tick,0x1075cead4,404667,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5322234,405875,0,0x0,1
tick,0x1075cead4,407167,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a538ef84,408458,0,0x0,0,0x1000a0b5c,0x1075ceda4,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc84,409667,0,0x0,1
tick,0x1075cead4,410958,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc5c,412167,0,0x0,1
tick,0x1075ced78,413417,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cec14,414708,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb5c,415958,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,417208,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1006084ac,418417,0,0x0,1
tick,0x1075ceb4c,419708,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,420958,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1000a0d1c,422250,0,0x0,0,0x1075ceda4,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a538ef84,423292,0,0x0,0,0x1000a0b5c,0x1075ceda4,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ced78,424542,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,425750,0,0x0,1
tick,0x1075cead4,426875,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc70,428083,0,0x0,1
tick,0x1075cead4,429333,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,430625,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x100519014,431875,0,0x0,1
tick,0x1a538ef84,433167,0,0x0,0,0x1000a0b5c,0x1075ceda4,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,434375,0,0x0,1
tick,0x1075ceb4c,435500,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ced34,436708,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc5c,437958,0,0x0,1
tick,0x1008ffc44,439208,0,0x0,1
tick,0x1075cead4,440500,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ced4c,441750,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,443000,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,444250,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,445458,0,0x0,1
tick,0x1075ceb30,446625,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc84,447833,0,0x0,1
tick,0x1075cead4,449125,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc70,450333,0,0x0,1
tick,0x1075cece0,451625,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ced78,452833,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc84,454083,0,0x0,1
tick,0x1075ceb4c,455375,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb30,456625,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc84,457875,0,0x0,1
tick,0x1075ceb4c,459167,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,460375,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc84,461625,0,0x0,1
tick,0x1075ceb4c,462917,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a538ef9c,464167,0,0x0,0,0x1000a0b5c,0x1075ceda4,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc84,465375,0,0x0,1
tick,0x1075ceb30,466667,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,467917,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,469167,0,0x0,1
tick,0x1075ceb30,470292,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,471500,0,0x0,1
tick,0x1075ceb30,472583,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc70,473833,0,0x0,1
tick,0x1075ceb4c,475125,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb30,476375,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a538ef84,477625,0,0x0,0,0x1000a0b5c,0x1075ceda4,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb30,478917,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,480125,0,0x0,1
tick,0x1075cead4,481208,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ced4c,482458,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x10060848c,483708,0,0x0,1
tick,0x1a538ec8c,484958,0,0x0,1
tick,0x1075cead4,486208,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb5c,487333,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc5c,488542,0,0x0,1
tick,0x1075cead4,489833,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a51bc400,491083,0,0x0,1
tick,0x1075ceb4c,492333,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cead4,493625,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc5c,494833,0,0x0,1
tick,0x1a538ef84,496125,0,0x0,0,0x1000a0b5c,0x1075ceda4,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb30,497375,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc44,498583,0,0x0,1
tick,0x1075ceb4c,499875,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,501083,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,502375,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cec9c,503625,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x10060848c,504833,0,0x0,1
tick,0x1075ceb30,506083,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1000a0d14,507417,0,0x0,0,0x1075ceda4,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,508625,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb30,509917,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x100b54484,511125,0,0x0,1
tick,0x1075ceb4c,512417,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ced1c,513667,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1006084ac,514875,0,0x0,1
tick,0x1075ced4c,516167,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,517458,0,0x0,1
tick,0x1075cead4,518500,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,519750,0,0x0,1
tick,0x1006084ac,521000,0,0x0,1
tick,0x1075cead4,522250,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cec78,523542,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a538ef84,524792,0,0x0,0,0x1000a0b5c,0x1075ceda4,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,526042,0,0x0,1
tick,0x1075ceb4c,527125,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x10060848c,528333,0,0x0,1
tick,0x1a538ef84,529625,0,0x0,0,0x1000a0b5c,0x1075ceda4,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,530833,0,0x0,1
tick,0x1075ceb4c,531958,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,533167,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,534417,0,0x0,1
tick,0x1a538ef84,535542,0,0x0,0,0x1000a0b5c,0x1075ceda4,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc5c,536750,0,0x0,1
tick,0x1075ced4c,538042,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb5c,539292,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb5c,540542,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,541833,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,543042,0,0x0,1
tick,0x1075ceb30,544125,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,545375,0,0x0,1
tick,0x1075cead4,546500,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc70,547708,0,0x0,1
tick,0x1075ceb4c,549000,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cead4,550250,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1006084ac,551458,0,0x0,1
tick,0x1075cece0,552750,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075cead4,553958,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceb4c,555083,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1075ceae4,556333,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1a5325564,557583,0,0x0,1
tick,0x1075ceb4c,558667,0,0x0,0,0x3f1a4fbaac6d,0x3f1a4fba4170,0x3f1a4fba30ee,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008ffc70,559917,0,0x0,1
code-creation,JS,10,560167,0x3f1a4fbafcfe,16, node:internal/modules/cjs/loader:116:3,0x5d9fd2cdab8,~
code-source-info,0x3f1a4fbafcfe,59,3673,3727,C0O3717C6O3679C11O3717C15O3727,,
code-creation,Eval,10,561167,0x3f1a4fbb024e,5, node:internal/process/esm_loader:1:1,0x3f1a4fbb0038,~
script-source,384,node:internal/process/esm_loader,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypePushApply\x2C\n} = primordials;\n\nconst { ESMLoader } = require('internal/modules/esm/loader');\nconst {\n  hasUncaughtExceptionCaptureCallback\x2C\n} = require('internal/process/execution');\nconst { pathToFileURL } = require('internal/url');\nconst { kEmptyObject } = require('internal/util');\n\nconst esmLoader = new ESMLoader();\nexports.esmLoader = esmLoader;\n\n// Module.runMain() causes loadESM() to re-run (which it should do); however\x2C this should NOT cause\n// ESM to be re-initialised; doing so causes duplicate custom loaders to be added to the public\n// esmLoader.\nlet isESMInitialized = false;\n\n/**\n * Causes side-effects: user-defined loader hooks are added to esmLoader.\n * @returns {void}\n */\nasync function initializeLoader() {\n  if (isESMInitialized) { return; }\n\n  const { getOptionValue } = require('internal/options');\n  const customLoaders = getOptionValue('--experimental-loader');\n  const preloadModules = getOptionValue('--import');\n\n  let cwd;\n  try {\n    cwd = process.cwd() + '/';\n  } catch {\n    cwd = '/';\n  }\n\n  const internalEsmLoader = new ESMLoader();\n  const allLoaders = [];\n\n  const parentURL = pathToFileURL(cwd).href;\n\n  for (let i = 0; i < customLoaders.length; i++) {\n    const customLoader = customLoaders[i];\n\n    // Importation must be handled by internal loader to avoid polluting user-land\n    const keyedExportsSublist = await internalEsmLoader.import(\n      [customLoader]\x2C\n      parentURL\x2C\n      kEmptyObject\x2C\n    );\n\n    internalEsmLoader.addCustomLoaders(keyedExportsSublist);\n    ArrayPrototypePushApply(allLoaders\x2C keyedExportsSublist);\n  }\n\n  // Hooks must then be added to external/public loader\n  // (so they're triggered in userland)\n  esmLoader.addCustomLoaders(allLoaders);\n  esmLoader.preload();\n\n  // Preload after loaders are added so they can be used\n  if (preloadModules?.length) {\n    await loadModulesInIsolation(parentURL\x2C preloadModules\x2C allLoaders);\n  }\n\n  isESMInitialized = true;\n}\n\nfunction loadModulesInIsolation(parentURL\x2C specifiers\x2C loaders = []) {\n  if (!ArrayIsArray(specifiers) || specifiers.length === 0) { return; }\n\n  // A separate loader instance is necessary to avoid cross-contamination\n  // between internal Node.js and userland. For example\x2C a module with internal\n  // state (such as a counter) should be independent.\n  const internalEsmLoader = new ESMLoader();\n  internalEsmLoader.addCustomLoaders(loaders);\n  internalEsmLoader.preload();\n\n  // Importation must be handled by internal loader to avoid poluting userland\n  return internalEsmLoader.import(\n    specifiers\x2C\n    parentURL\x2C\n    kEmptyObject\x2C\n  );\n}\n\nexports.loadESM = async function loadESM(callback) {\n  try {\n    await initializeLoader();\n    await callback(esmLoader);\n  } catch (err) {\n    if (hasUncaughtExceptionCaptureCallback()) {\n      process._fatalException(err);\n      return;\n    }\n    internalBinding('errors').triggerUncaughtException(\n      err\x2C\n      true /* fromPromise */\n    );\n  }\n};\n
code-source-info,0x3f1a4fbb024e,384,0,2995,C0O0C4O2995,,
code-creation,JS,10,561292,0x3f1a4fbb0436,162, node:internal/process/esm_loader:1:1,0x3f1a4fbb01c8,~
code-source-info,0x3f1a4fbb0436,384,0,2995,C0O0C53O25C59O41C65O106C71O106C76O92C82O197C88O197C93O156C99O262C105O262C110O244C116O312C122O312C127O295C133O357C136O357C141O357C143O374C145O392C149O639C150O639C152O2640C156O2656C161O2994,,
tick,0x1a535bd7c,561292,1,0x10027c640,3,0x0,0x1075c9144,0x1075c8e2c,0x3f1a4fbafd04,0x3f1a4fba2d1b,0x3f1a4fba30fe,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
code-creation,Eval,10,562208,0x3f1a4fbb18ae,5, node:internal/modules/esm/loader:1:1,0x3f1a4fbb1440,~
script-source,385,node:internal/modules/esm/loader,'use strict';\n\n// This is needed to avoid cycles in esm/resolve <-> cjs/loader\nrequire('internal/modules/cjs/loader');\n\nconst {\n  Array\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypePush\x2C\n  FunctionPrototypeCall\x2C\n  ObjectAssign\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  RegExpPrototypeExec\x2C\n  SafePromiseAllReturnArrayLike\x2C\n  SafeWeakMap\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeToUpperCase\x2C\n  globalThis\x2C\n} = primordials;\n\nconst {\n  ERR_LOADER_CHAIN_INCOMPLETE\x2C\n  ERR_INTERNAL_ASSERTION\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x2C\n  ERR_INVALID_RETURN_VALUE\x2C\n  ERR_UNKNOWN_MODULE_FORMAT\x2C\n} = require('internal/errors').codes;\nconst { pathToFileURL\x2C isURLInstance\x2C URL } = require('internal/url');\nconst { emitExperimentalWarning } = require('internal/util');\nconst {\n  isAnyArrayBuffer\x2C\n  isArrayBufferView\x2C\n} = require('internal/util/types');\nconst {\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\nfunction newModuleMap() {\n  const ModuleMap = require('internal/modules/esm/module_map');\n  return new ModuleMap();\n}\n\nconst {\n  defaultResolve\x2C\n} = require('internal/modules/esm/resolve');\n\nconst {\n  getDefaultConditions\x2C\n} = require('internal/modules/esm/utils');\n\nfunction getTranslators() {\n  const { translators } = require('internal/modules/esm/translators');\n  return translators;\n}\nconst { getOptionValue } = require('internal/options');\n\n/**\n * @typedef {object} ExportedHooks\n * @property {Function} globalPreload Global preload hook.\n * @property {Function} resolve Resolve hook.\n * @property {Function} load Load hook.\n */\n\n/**\n * @typedef {Record<string\x2C any>} ModuleExports\n */\n\n/**\n * @typedef {object} KeyedExports\n * @property {ModuleExports} exports The contents of the module.\n * @property {URL['href']} url The URL of the module.\n */\n\n/**\n * @typedef {object} KeyedHook\n * @property {Function} fn The hook function.\n * @property {URL['href']} url The URL of the module.\n */\n\n/**\n * @typedef {'builtin'|'commonjs'|'json'|'module'|'wasm'} ModuleFormat\n */\n\n/**\n * @typedef {ArrayBuffer|TypedArray|string} ModuleSource\n */\n\n// [2] `validate...()`s throw the wrong error\n\n/**\n * A utility function to iterate through a hook chain\x2C track advancement in the\n * chain\x2C and generate and supply the `next<HookName>` argument to the custom\n * hook.\n * @param {KeyedHook[]} chain The whole hook chain.\n * @param {object} meta Properties that change as the current hook advances\n * along the chain.\n * @param {boolean} meta.chainFinished Whether the end of the chain has been\n * reached AND invoked.\n * @param {string} meta.hookErrIdentifier A user-facing identifier to help\n *  pinpoint where an error occurred. Ex "file:///foo.mjs 'resolve'".\n * @param {number} meta.hookIndex A non-negative integer tracking the current\n * position in the hook chain.\n * @param {string} meta.hookName The kind of hook the chain is (ex 'resolve')\n * @param {boolean} meta.shortCircuited Whether a hook signaled a short-circuit.\n * @param {(hookErrIdentifier\x2C hookArgs) => void} validate A wrapper function\n *  containing all validation of a custom loader hook's intermediary output. Any\n *  validation within MUST throw.\n * @returns {function next<HookName>(...hookArgs)} The next hook in the chain.\n */\nfunction nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput }) {\n  // First\x2C prepare the current\n  const { hookName } = meta;\n  const {\n    fn: hook\x2C\n    url: hookFilePath\x2C\n  } = chain[meta.hookIndex];\n\n  // ex 'nextResolve'\n  const nextHookName = `next${\n    StringPrototypeToUpperCase(hookName[0]) +\n    StringPrototypeSlice(hookName\x2C 1)\n  }`;\n\n  // When hookIndex is 0\x2C it's reached the default\x2C which does not call next()\n  // so feed it a noop that blows up if called\x2C so the problem is obvious.\n  const generatedHookIndex = meta.hookIndex;\n  let nextNextHook;\n  if (meta.hookIndex > 0) {\n    // Now\x2C prepare the next: decrement the pointer so the next call to the\n    // factory generates the next link in the chain.\n    meta.hookIndex--;\n\n    nextNextHook = nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput });\n  } else {\n    // eslint-disable-next-line func-name-matching\n    nextNextHook = function chainAdvancedTooFar() {\n      throw new ERR_INTERNAL_ASSERTION(\n        `ESM custom loader '${hookName}' advanced beyond the end of the chain.`\n      );\n    };\n  }\n\n  return ObjectDefineProperty(\n    async (arg0 = undefined\x2C context) => {\n      // Update only when hook is invoked to avoid fingering the wrong filePath\n      meta.hookErrIdentifier = `${hookFilePath} '${hookName}'`;\n\n      validateArgs(`${meta.hookErrIdentifier} hook's ${nextHookName}()`\x2C arg0\x2C context);\n\n      const outputErrIdentifier = `${chain[generatedHookIndex].url} '${hookName}' hook's ${nextHookName}()`;\n\n      // Set when next<HookName> is actually called\x2C not just generated.\n      if (generatedHookIndex === 0) { meta.chainFinished = true; }\n\n      if (context) { // `context` has already been validated\x2C so no fancy check needed.\n        ObjectAssign(meta.context\x2C context);\n      }\n\n      const output = await hook(arg0\x2C meta.context\x2C nextNextHook);\n\n      validateOutput(outputErrIdentifier\x2C output);\n\n      if (output?.shortCircuit === true) { meta.shortCircuited = true; }\n      return output;\n\n    }\x2C\n    'name'\x2C\n    { __proto__: null\x2C value: nextHookName }\x2C\n  );\n}\n\n/**\n * An ESMLoader instance is used as the main entry point for loading ES modules.\n * Currently\x2C this is a singleton -- there is only one used for loading\n * the main module and everything in its dependency graph.\n */\n\nclass ESMLoader {\n  #hooks = {\n    /**\n     * Prior to ESM loading. These are called once before any modules are started.\n     * @private\n     * @property {KeyedHook[]} globalPreload Last-in-first-out list of preload hooks.\n     */\n    globalPreload: []\x2C\n\n    /**\n     * Phase 2 of 2 in ESM loading (phase 1 is below).\n     * @private\n     * @property {KeyedHook[]} load Last-in-first-out collection of loader hooks.\n     */\n    load: [\n      {\n        fn: require('internal/modules/esm/load').defaultLoad\x2C\n        url: 'node:internal/modules/esm/load'\x2C\n      }\x2C\n    ]\x2C\n\n    /**\n     * Phase 1 of 2 in ESM loading.\n     * @private\n     * @property {KeyedHook[]} resolve Last-in-first-out collection of resolve hooks.\n     */\n    resolve: [\n      {\n        fn: defaultResolve\x2C\n        url: 'node:internal/modules/esm/resolve'\x2C\n      }\x2C\n    ]\x2C\n  };\n\n  #importMetaInitializer = require('internal/modules/esm/initialize_import_meta').initializeImportMeta;\n\n  /**\n   * Map of already-loaded CJS modules to use\n   */\n  cjsCache = new SafeWeakMap();\n\n  /**\n   * The index for assigning unique URLs to anonymous module evaluation\n   */\n  evalIndex = 0;\n\n  /**\n   * Registry of loaded modules\x2C akin to `require.cache`\n   */\n  moduleMap = newModuleMap();\n\n  /**\n   * Methods which translate input code or other information into ES modules\n   */\n  translators = getTranslators();\n\n  constructor() {\n    if (getOptionValue('--experimental-loader').length > 0) {\n      emitExperimentalWarning('Custom ESM Loaders');\n    }\n    if (getOptionValue('--experimental-network-imports')) {\n      emitExperimentalWarning('Network Imports');\n    }\n  }\n\n  /**\n   *\n   * @param {ModuleExports} exports\n   * @returns {ExportedHooks}\n   */\n  static pluckHooks({\n    globalPreload\x2C\n    resolve\x2C\n    load\x2C\n    // obsolete hooks:\n    dynamicInstantiate\x2C\n    getFormat\x2C\n    getGlobalPreloadCode\x2C\n    getSource\x2C\n    transformSource\x2C\n  }) {\n    const obsoleteHooks = [];\n    const acceptedHooks = { __proto__: null };\n\n    if (getGlobalPreloadCode) {\n      globalPreload ??= getGlobalPreloadCode;\n\n      process.emitWarning(\n        'Loader hook "getGlobalPreloadCode" has been renamed to "globalPreload"'\n      );\n    }\n    if (dynamicInstantiate) ArrayPrototypePush(\n      obsoleteHooks\x2C\n      'dynamicInstantiate'\n    );\n    if (getFormat) ArrayPrototypePush(\n      obsoleteHooks\x2C\n      'getFormat'\x2C\n    );\n    if (getSource) ArrayPrototypePush(\n      obsoleteHooks\x2C\n      'getSource'\x2C\n    );\n    if (transformSource) ArrayPrototypePush(\n      obsoleteHooks\x2C\n      'transformSource'\x2C\n    );\n\n    if (obsoleteHooks.length) process.emitWarning(\n      `Obsolete loader hook(s) supplied and will be ignored: ${\n        ArrayPrototypeJoin(obsoleteHooks\x2C '\x2C ')\n      }`\x2C\n      'DeprecationWarning'\x2C\n    );\n\n    if (globalPreload) {\n      acceptedHooks.globalPreload = globalPreload;\n    }\n    if (resolve) {\n      acceptedHooks.resolve = resolve;\n    }\n    if (load) {\n      acceptedHooks.load = load;\n    }\n\n    return acceptedHooks;\n  }\n\n  /**\n   * Collect custom/user-defined hook(s). After all hooks have been collected\x2C\n   * the global preload hook(s) must be called.\n   * @param {KeyedExports} customLoaders\n   *  A list of exports from user-defined loaders (as returned by\n   *  ESMLoader.import()).\n   */\n  addCustomLoaders(\n    customLoaders = []\x2C\n  ) {\n    for (let i = 0; i < customLoaders.length; i++) {\n      const {\n        exports\x2C\n        url\x2C\n      } = customLoaders[i];\n      const {\n        globalPreload\x2C\n        resolve\x2C\n        load\x2C\n      } = ESMLoader.pluckHooks(exports);\n\n      if (globalPreload) {\n        ArrayPrototypePush(\n          this.#hooks.globalPreload\x2C\n          {\n            fn: globalPreload\x2C\n            url\x2C\n          }\x2C\n        );\n      }\n      if (resolve) {\n        ArrayPrototypePush(\n          this.#hooks.resolve\x2C\n          {\n            fn: resolve\x2C\n            url\x2C\n          }\x2C\n        );\n      }\n      if (load) {\n        ArrayPrototypePush(\n          this.#hooks.load\x2C\n          {\n            fn: load\x2C\n            url\x2C\n          }\x2C\n        );\n      }\n    }\n  }\n\n  async eval(\n    source\x2C\n    url = pathToFileURL(`${process.cwd()}/[eval${++this.evalIndex}]`).href\n  ) {\n    const evalInstance = (url) => {\n      const { ModuleWrap } = internalBinding('module_wrap');\n      const { setCallbackForWrap } = require('internal/modules/esm/utils');\n      const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\n      setCallbackForWrap(module\x2C {\n        importModuleDynamically: (specifier\x2C { url }\x2C importAssertions) => {\n          return this.import(specifier\x2C url\x2C importAssertions);\n        }\n      });\n\n      return module;\n    };\n    const ModuleJob = require('internal/modules/esm/module_job');\n    const job = new ModuleJob(\n      this\x2C url\x2C undefined\x2C evalInstance\x2C false\x2C false);\n    this.moduleMap.set(url\x2C undefined\x2C job);\n    const { module } = await job.run();\n\n    return {\n      __proto__: null\x2C\n      namespace: module.getNamespace()\x2C\n    };\n  }\n\n  /**\n   * Get a (possibly still pending) module job from the cache\x2C\n   * or create one and return its Promise.\n   * @param {string} specifier The string after `from` in an `import` statement\x2C\n   *                           or the first parameter of an `import()`\n   *                           expression\n   * @param {string | undefined} parentURL The URL of the module importing this\n   *                                     one\x2C unless this is the Node.js entry\n   *                                     point.\n   * @param {Record<string\x2C string>} importAssertions Validations for the\n   *                                                  module import.\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\n   */\n  async getModuleJob(specifier\x2C parentURL\x2C importAssertions) {\n    let importAssertionsForResolve;\n\n    // By default\x2C `this.#hooks.load` contains just the Node default load hook\n    if (this.#hooks.load.length !== 1) {\n      // We can skip cloning if there are no user-provided loaders because\n      // the Node.js default resolve hook does not use import assertions.\n      importAssertionsForResolve = {\n        __proto__: null\x2C\n        ...importAssertions\x2C\n      };\n    }\n\n    const { format\x2C url } =\n      await this.resolve(specifier\x2C parentURL\x2C importAssertionsForResolve);\n\n    let job = this.moduleMap.get(url\x2C importAssertions.type);\n\n    // CommonJS will set functions for lazy job evaluation.\n    if (typeof job === 'function') {\n      this.moduleMap.set(url\x2C undefined\x2C job = job());\n    }\n\n    if (job === undefined) {\n      job = this.#createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format);\n    }\n\n    return job;\n  }\n\n  /**\n   * Create and cache an object representing a loaded module.\n   * @param {string} url The absolute URL that was resolved for this module\n   * @param {Record<string\x2C string>} importAssertions Validations for the\n   *                                                  module import.\n   * @param {string} [parentURL] The absolute URL of the module importing this\n   *                             one\x2C unless this is the Node.js entry point\n   * @param {string} [format] The format hint possibly returned by the\n   *                          `resolve` hook\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\n   */\n  #createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format) {\n    const moduleProvider = async (url\x2C isMain) => {\n      const {\n        format: finalFormat\x2C\n        responseURL\x2C\n        source\x2C\n      } = await this.load(url\x2C {\n        format\x2C\n        importAssertions\x2C\n      });\n\n      const translator = getTranslators().get(finalFormat);\n\n      if (!translator) {\n        throw new ERR_UNKNOWN_MODULE_FORMAT(finalFormat\x2C responseURL);\n      }\n\n      return FunctionPrototypeCall(translator\x2C this\x2C responseURL\x2C source\x2C isMain);\n    };\n\n    const inspectBrk = (\n      parentURL === undefined &&\n      getOptionValue('--inspect-brk')\n    );\n\n    if (process.env.WATCH_REPORT_DEPENDENCIES && process.send) {\n      process.send({ 'watch:import': [url] });\n    }\n    const ModuleJob = require('internal/modules/esm/module_job');\n    const job = new ModuleJob(\n      this\x2C\n      url\x2C\n      importAssertions\x2C\n      moduleProvider\x2C\n      parentURL === undefined\x2C\n      inspectBrk\n    );\n\n    this.moduleMap.set(url\x2C importAssertions.type\x2C job);\n\n    return job;\n  }\n\n  /**\n   * This method is usually called indirectly as part of the loading processes.\n   * Internally\x2C it is used directly to add loaders. Use directly with caution.\n   *\n   * This method must NOT be renamed: it functions as a dynamic import on a\n   * loader module.\n   *\n   * @param {string | string[]} specifiers Path(s) to the module.\n   * @param {string} parentURL Path of the parent importing the module.\n   * @param {Record<string\x2C string>} importAssertions Validations for the\n   *                                                  module import.\n   * @returns {Promise<ExportedHooks | KeyedExports[]>}\n   *  A collection of module export(s) or a list of collections of module\n   *  export(s).\n   */\n  async import(specifiers\x2C parentURL\x2C importAssertions) {\n    // For loaders\x2C `import` is passed multiple things to process\x2C it returns a\n    // list pairing the url and exports collected. This is especially useful for\n    // error messaging\x2C to identity from where an export came. But\x2C in most\n    // cases\x2C only a single url is being "imported" (ex `import()`)\x2C so there is\n    // only 1 possible url from which the exports were collected and it is\n    // already known to the caller. Nesting that in a list would only ever\n    // create redundant work for the caller\x2C so it is later popped off the\n    // internal list.\n    const wasArr = ArrayIsArray(specifiers);\n    if (!wasArr) { specifiers = [specifiers]; }\n\n    const count = specifiers.length;\n    const jobs = new Array(count);\n\n    for (let i = 0; i < count; i++) {\n      jobs[i] = this.getModuleJob(specifiers[i]\x2C parentURL\x2C importAssertions)\n        .then((job) => job.run())\n        .then(({ module }) => module.getNamespace());\n    }\n\n    const namespaces = await SafePromiseAllReturnArrayLike(jobs);\n\n    if (!wasArr) { return namespaces[0]; } // We can skip the pairing below\n\n    for (let i = 0; i < count; i++) {\n      namespaces[i] = {\n        __proto__: null\x2C\n        url: specifiers[i]\x2C\n        exports: namespaces[i]\x2C\n      };\n    }\n\n    return namespaces;\n  }\n\n  /**\n   * Provide source that is understood by one of Node's translators.\n   *\n   * Internally\x2C this behaves like a backwards iterator\x2C wherein the stack of\n   * hooks starts at the top and each call to `nextLoad()` moves down 1 step\n   * until it reaches the bottom or short-circuits.\n   *\n   * @param {URL['href']} url The URL/path of the module to be loaded\n   * @param {object} context Metadata about the module\n   * @returns {{ format: ModuleFormat\x2C source: ModuleSource }}\n   */\n  async load(url\x2C context = {}) {\n    const chain = this.#hooks.load;\n    const meta = {\n      chainFinished: null\x2C\n      context\x2C\n      hookErrIdentifier: ''\x2C\n      hookIndex: chain.length - 1\x2C\n      hookName: 'load'\x2C\n      shortCircuited: false\x2C\n    };\n\n    const validateArgs = (hookErrIdentifier\x2C nextUrl\x2C ctx) => {\n      if (typeof nextUrl !== 'string') {\n        // non-strings can be coerced to a url string\n        // validateString() throws a less-specific error\n        throw new ERR_INVALID_ARG_TYPE(\n          `${hookErrIdentifier} url`\x2C\n          'a url string'\x2C\n          nextUrl\x2C\n        );\n      }\n\n      // Try to avoid expensive URL instantiation for known-good urls\n      if (!this.moduleMap.has(nextUrl)) {\n        try {\n          new URL(nextUrl);\n        } catch {\n          throw new ERR_INVALID_ARG_VALUE(\n            `${hookErrIdentifier} url`\x2C\n            nextUrl\x2C\n            'should be a url string'\x2C\n          );\n        }\n      }\n\n      if (ctx) validateObject(ctx\x2C `${hookErrIdentifier} context`);\n    };\n    const validateOutput = (hookErrIdentifier\x2C output) => {\n      if (typeof output !== 'object' || output === null) { // [2]\n        throw new ERR_INVALID_RETURN_VALUE(\n          'an object'\x2C\n          hookErrIdentifier\x2C\n          output\x2C\n        );\n      }\n    };\n\n    const nextLoad = nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput });\n\n    const loaded = await nextLoad(url\x2C context);\n    const { hookErrIdentifier } = meta; // Retrieve the value after all settled\n\n    validateOutput(hookErrIdentifier\x2C loaded);\n\n    if (loaded?.shortCircuit === true) { meta.shortCircuited = true; }\n\n    if (!meta.chainFinished && !meta.shortCircuited) {\n      throw new ERR_LOADER_CHAIN_INCOMPLETE(hookErrIdentifier);\n    }\n\n    const {\n      format\x2C\n      source\x2C\n    } = loaded;\n    let responseURL = loaded.responseURL;\n\n    if (responseURL === undefined) {\n      responseURL = url;\n    }\n\n    let responseURLObj;\n    if (typeof responseURL === 'string') {\n      try {\n        responseURLObj = new URL(responseURL);\n      } catch {\n        // responseURLObj not defined will throw in next branch.\n      }\n    }\n\n    if (responseURLObj?.href !== responseURL) {\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\n        'undefined or a fully resolved URL string'\x2C\n        hookErrIdentifier\x2C\n        'responseURL'\x2C\n        responseURL\x2C\n      );\n    }\n\n    if (format == null) {\n      const dataUrl = RegExpPrototypeExec(\n        /^data:([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\n        url\x2C\n      );\n\n      throw new ERR_UNKNOWN_MODULE_FORMAT(\n        dataUrl ? dataUrl[1] : format\x2C\n        url);\n    }\n\n    if (typeof format !== 'string') { // [2]\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\n        'a string'\x2C\n        hookErrIdentifier\x2C\n        'format'\x2C\n        format\x2C\n      );\n    }\n\n    if (\n      source != null &&\n      typeof source !== 'string' &&\n      !isAnyArrayBuffer(source) &&\n      !isArrayBufferView(source)\n    ) {\n      throw ERR_INVALID_RETURN_PROPERTY_VALUE(\n        'a string\x2C an ArrayBuffer\x2C or a TypedArray'\x2C\n        hookErrIdentifier\x2C\n        'source'\x2C\n        source\n      );\n    }\n\n    return {\n      __proto__: null\x2C\n      format\x2C\n      responseURL\x2C\n      source\x2C\n    };\n  }\n\n  preload() {\n    for (let i = this.#hooks.globalPreload.length - 1; i >= 0; i--) {\n      const { MessageChannel } = require('internal/worker/io');\n      const channel = new MessageChannel();\n      const {\n        port1: insidePreload\x2C\n        port2: insideLoader\x2C\n      } = channel;\n\n      insidePreload.unref();\n      insideLoader.unref();\n\n      const {\n        fn: preload\x2C\n        url: specifier\x2C\n      } = this.#hooks.globalPreload[i];\n\n      const preloaded = preload({\n        port: insideLoader\x2C\n      });\n\n      if (preloaded == null) { return; }\n\n      const hookErrIdentifier = `${specifier} globalPreload`;\n\n      if (typeof preloaded !== 'string') { // [2]\n        throw new ERR_INVALID_RETURN_VALUE(\n          'a string'\x2C\n          hookErrIdentifier\x2C\n          preload\x2C\n        );\n      }\n      const { compileFunction } = require('vm');\n      const preloadInit = compileFunction(\n        preloaded\x2C\n        ['getBuiltin'\x2C 'port'\x2C 'setImportMetaCallback']\x2C\n        {\n          filename: '<preload>'\x2C\n        }\n      );\n      const { BuiltinModule } = require('internal/bootstrap/loaders');\n      // We only allow replacing the importMetaInitializer during preload\x2C\n      // after preload is finished\x2C we disable the ability to replace it\n      //\n      // This exposes accidentally setting the initializer too late by\n      // throwing an error.\n      let finished = false;\n      let replacedImportMetaInitializer = false;\n      let next = this.#importMetaInitializer;\n      try {\n        // Calls the compiled preload source text gotten from the hook\n        // Since the parameters are named we use positional parameters\n        // see compileFunction above to cross reference the names\n        FunctionPrototypeCall(\n          preloadInit\x2C\n          globalThis\x2C\n          // Param getBuiltin\n          (builtinName) => {\n            if (BuiltinModule.canBeRequiredByUsers(builtinName) &&\n                BuiltinModule.canBeRequiredWithoutScheme(builtinName)) {\n              return require(builtinName);\n            }\n            throw new ERR_INVALID_ARG_VALUE('builtinName'\x2C builtinName);\n          }\x2C\n          // Param port\n          insidePreload\x2C\n          // Param setImportMetaCallback\n          (fn) => {\n            if (finished || typeof fn !== 'function') {\n              throw new ERR_INVALID_ARG_TYPE('fn'\x2C fn);\n            }\n            replacedImportMetaInitializer = true;\n            const parent = next;\n            next = (meta\x2C context) => {\n              return fn(meta\x2C context\x2C parent);\n            };\n          });\n      } finally {\n        finished = true;\n        if (replacedImportMetaInitializer) {\n          this.#importMetaInitializer = next;\n        }\n      }\n    }\n  }\n\n  importMetaInitialize(meta\x2C context) {\n    this.#importMetaInitializer(meta\x2C context);\n  }\n\n  /**\n   * Resolve the location of the module.\n   *\n   * Internally\x2C this behaves like a backwards iterator\x2C wherein the stack of\n   * hooks starts at the top and each call to `nextResolve()` moves down 1 step\n   * until it reaches the bottom or short-circuits.\n   *\n   * @param {string} originalSpecifier The specified URL path of the module to\n   *                                   be resolved.\n   * @param {string} [parentURL] The URL path of the module's parent.\n   * @param {ImportAssertions} importAssertions Assertions from the import\n   *                                              statement or expression.\n   * @returns {{ format: string\x2C url: URL['href'] }}\n   */\n  async resolve(\n    originalSpecifier\x2C\n    parentURL\x2C\n    importAssertions\x2C\n  ) {\n    const isMain = parentURL === undefined;\n\n    if (\n      !isMain &&\n      typeof parentURL !== 'string' &&\n      !isURLInstance(parentURL)\n    ) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'parentURL'\x2C\n        ['string'\x2C 'URL']\x2C\n        parentURL\x2C\n      );\n    }\n    const chain = this.#hooks.resolve;\n    const context = {\n      conditions: getDefaultConditions()\x2C\n      importAssertions\x2C\n      parentURL\x2C\n    };\n    const meta = {\n      chainFinished: null\x2C\n      context\x2C\n      hookErrIdentifier: ''\x2C\n      hookIndex: chain.length - 1\x2C\n      hookName: 'resolve'\x2C\n      shortCircuited: false\x2C\n    };\n\n    const validateArgs = (hookErrIdentifier\x2C suppliedSpecifier\x2C ctx) => {\n      validateString(\n        suppliedSpecifier\x2C\n        `${hookErrIdentifier} specifier`\x2C\n      ); // non-strings can be coerced to a url string\n\n      if (ctx) validateObject(ctx\x2C `${hookErrIdentifier} context`);\n    };\n    const validateOutput = (hookErrIdentifier\x2C output) => {\n      if (typeof output !== 'object' || output === null) { // [2]\n        throw new ERR_INVALID_RETURN_VALUE(\n          'an object'\x2C\n          hookErrIdentifier\x2C\n          output\x2C\n        );\n      }\n    };\n\n    const nextResolve = nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput });\n\n    const resolution = await nextResolve(originalSpecifier\x2C context);\n    const { hookErrIdentifier } = meta; // Retrieve the value after all settled\n\n    validateOutput(hookErrIdentifier\x2C resolution);\n\n    if (resolution?.shortCircuit === true) { meta.shortCircuited = true; }\n\n    if (!meta.chainFinished && !meta.shortCircuited) {\n      throw new ERR_LOADER_CHAIN_INCOMPLETE(hookErrIdentifier);\n    }\n\n    const {\n      format\x2C\n      url\x2C\n    } = resolution;\n\n    if (\n      format != null &&\n      typeof format !== 'string' // [2]\n    ) {\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\n        'a string'\x2C\n        hookErrIdentifier\x2C\n        'format'\x2C\n        format\x2C\n      );\n    }\n\n    if (typeof url !== 'string') {\n      // non-strings can be coerced to a url string\n      // validateString() throws a less-specific error\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\n        'a url string'\x2C\n        hookErrIdentifier\x2C\n        'url'\x2C\n        url\x2C\n      );\n    }\n\n    // Try to avoid expensive URL instantiation for known-good urls\n    if (!this.moduleMap.has(url)) {\n      try {\n        new URL(url);\n      } catch {\n        throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\n          'a url string'\x2C\n          hookErrIdentifier\x2C\n          'url'\x2C\n          url\x2C\n        );\n      }\n    }\n\n    return {\n      __proto__: null\x2C\n      format\x2C\n      url\x2C\n    };\n  }\n}\n\nObjectSetPrototypeOf(ESMLoader.prototype\x2C null);\n\nexports.ESMLoader = ESMLoader;\n
code-source-info,0x3f1a4fbb18ae,385,0,26002,C0O0C4O26002,,
code-creation,JS,10,563083,0x3f1a4fbb2206,573, node:internal/modules/esm/loader:1:1,0x3f1a4fbb1828,~
code-source-info,0x3f1a4fbb2206,385,0,26002,C0O0C128O79C134O79C138O130C144O139C150O155C156O177C162O199C168O224C174O240C180O264C185O288C191O311C197O344C203O359C209O383C215O413C221O655C227O655C232O681C237O453C243O484C249O510C255O534C261O559C267O596C273O624C279O735C285O735C290O697C296O712C302O727C308O796C314O796C319O768C325O875C331O875C336O832C342O852C348O955C354O955C359O917C365O935C371O1136C377O1136C382O1116C388O1214C394O1214C399O1188C405O1404C411O1404C416O1385C553O25952C560O25921C565O25971C567O25989C572O26001,,
code-creation,JS,10,563125,0x3f1a4fbb273e,164,<instance_members_initializer> node:internal/modules/esm/loader:182:1,0x3f1a4fbb1d70,~
code-source-info,0x3f1a4fbb273e,385,5588,25919,C3O5617C8O6023C28O6045C33O6081C53O6326C69O6348C96O6517C104O6463C109O6517C117O6612C124O6612C133O6730C138O6817C143O6817C150O6939C155O6939C163O25919,,
tick,0x1004631f8,563167,1,0x10027c640,3,0x0,0x1075c9144,0x1075c8e2c,0x3f1a4fbb047d,0x1075c9210,0x1075c8e2c,0x3f1a4fbafd04,0x3f1a4fba2d1b,0x3f1a4fba30fe,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
tick,0x1008744a4,563750,1,0x10027c640,2,0x0,0x1075c9144,0x1075c8e2c,0x3f1a4fbb237f,0x1075c9210,0x1075c8e2c,0x3f1a4fbb047d,0x1075c9210,0x1075c8e2c,0x3f1a4fbafd04,0x3f1a4fba2d1b,0x3f1a4fba30fe,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
code-creation,Eval,10,564125,0x3f1a4fbb6b9e,5, node:internal/modules/esm/resolve:1:1,0x3f1a4fbb5730,~
script-source,386,node:internal/modules/esm/resolve,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeShift\x2C\n  JSONStringify\x2C\n  ObjectGetOwnPropertyNames\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  RegExp\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  String\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeLastIndexOf\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\nconst internalFS = require('internal/fs/utils');\nconst { BuiltinModule } = require('internal/bootstrap/loaders');\nconst {\n  realpathSync\x2C\n  statSync\x2C\n  Stats\x2C\n} = require('fs');\nconst { getOptionValue } = require('internal/options');\n// Do not eagerly grab .manifest\x2C it may be in TDZ\nconst policy = getOptionValue('--experimental-policy') ?\n  require('internal/process/policy') :\n  null;\nconst { sep\x2C relative } = require('path');\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\nconst experimentalNetworkImports =\n  getOptionValue('--experimental-network-imports');\nconst typeFlag = getOptionValue('--input-type');\nconst { URL\x2C pathToFileURL\x2C fileURLToPath } = require('internal/url');\nconst {\n  ERR_INPUT_TYPE_NOT_ALLOWED\x2C\n  ERR_INVALID_MODULE_SPECIFIER\x2C\n  ERR_INVALID_PACKAGE_CONFIG\x2C\n  ERR_INVALID_PACKAGE_TARGET\x2C\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\n  ERR_MODULE_NOT_FOUND\x2C\n  ERR_PACKAGE_IMPORT_NOT_DEFINED\x2C\n  ERR_PACKAGE_PATH_NOT_EXPORTED\x2C\n  ERR_UNSUPPORTED_DIR_IMPORT\x2C\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\n} = require('internal/errors').codes;\n\nconst { Module: CJSModule } = require('internal/modules/cjs/loader');\nconst { getPackageConfig\x2C getPackageScopeConfig } = require('internal/modules/esm/package_config');\nconst { getConditionsSet } = require('internal/modules/esm/utils');\n\n/**\n * @typedef {import('internal/modules/esm/package_config.js').PackageConfig} PackageConfig\n */\n\n\nconst emittedPackageWarnings = new SafeSet();\n\nfunction emitTrailingSlashPatternDeprecation(match\x2C pjsonUrl\x2C base) {\n  const pjsonPath = fileURLToPath(pjsonUrl);\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\n    return;\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\n  process.emitWarning(\n    `Use of deprecated trailing slash pattern mapping "${match}" in the ` +\n    `"exports" field module resolution of the package at ${pjsonPath}${\n      base ? ` imported from ${fileURLToPath(base)}` :\n        ''}. Mapping specifiers ending in "/" is no longer supported.`\x2C\n    'DeprecationWarning'\x2C\n    'DEP0155'\n  );\n}\n\nconst doubleSlashRegEx = /[/\\\\][/\\\\]/;\n\nfunction emitInvalidSegmentDeprecation(target\x2C request\x2C match\x2C pjsonUrl\x2C internal\x2C base\x2C isTarget) {\n  const pjsonPath = fileURLToPath(pjsonUrl);\n  const double = RegExpPrototypeExec(doubleSlashRegEx\x2C isTarget ? target : request) !== null;\n  process.emitWarning(\n    `Use of deprecated ${double ? 'double slash' :\n      'leading or trailing slash matching'} resolving "${target}" for module ` +\n      `request "${request}" ${request !== match ? `matched to "${match}" ` : ''\n      }in the "${internal ? 'imports' : 'exports'}" field module resolution of the package at ${\n        pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` : ''}.`\x2C\n    'DeprecationWarning'\x2C\n    'DEP0166'\n  );\n}\n\n/**\n * @param {URL} url\n * @param {URL} packageJSONUrl\n * @param {string | URL | undefined} base\n * @param {string} main\n * @returns {void}\n */\nfunction emitLegacyIndexDeprecation(url\x2C packageJSONUrl\x2C base\x2C main) {\n  const format = defaultGetFormatWithoutErrors(url);\n  if (format !== 'module')\n    return;\n  const path = fileURLToPath(url);\n  const pkgPath = fileURLToPath(new URL('.'\x2C packageJSONUrl));\n  const basePath = fileURLToPath(base);\n  if (main)\n    process.emitWarning(\n      `Package ${pkgPath} has a "main" field set to ${JSONStringify(main)}\x2C ` +\n      `excluding the full filename and extension to the resolved file at "${\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${\n        basePath}.\\n Automatic extension resolution of the "main" field is ` +\n      'deprecated for ES modules.'\x2C\n      'DeprecationWarning'\x2C\n      'DEP0151'\n    );\n  else\n    process.emitWarning(\n      `No "main" or "exports" field defined in the package.json for ${pkgPath\n      } resolving the main entry point "${\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${basePath\n      }.\\nDefault "index" lookups for the main are deprecated for ES modules.`\x2C\n      'DeprecationWarning'\x2C\n      'DEP0151'\n    );\n}\n\nconst realpathCache = new SafeMap();\n\n/**\n * @param {string | URL} path\n * @returns {import('fs').Stats}\n */\nconst tryStatSync =\n  (path) => statSync(path\x2C { throwIfNoEntry: false }) ?? new Stats();\n\n/**\n * @param {string | URL} url\n * @returns {boolean}\n */\nfunction fileExists(url) {\n  return statSync(url\x2C { throwIfNoEntry: false })?.isFile() ?? false;\n}\n\n/**\n * Legacy CommonJS main resolution:\n * 1. let M = pkg_url + (json main field)\n * 2. TRY(M\x2C M.js\x2C M.json\x2C M.node)\n * 3. TRY(M/index.js\x2C M/index.json\x2C M/index.node)\n * 4. TRY(pkg_url/index.js\x2C pkg_url/index.json\x2C pkg_url/index.node)\n * 5. NOT_FOUND\n * @param {URL} packageJSONUrl\n * @param {PackageConfig} packageConfig\n * @param {string | URL | undefined} base\n * @returns {URL}\n */\nfunction legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base) {\n  let guess;\n  if (packageConfig.main !== undefined) {\n    // Note: fs check redundances will be handled by Descriptor cache here.\n    if (fileExists(guess = new URL(`./${packageConfig.main}`\x2C\n                                   packageJSONUrl))) {\n      return guess;\n    } else if (fileExists(guess = new URL(`./${packageConfig.main}.js`\x2C\n                                          packageJSONUrl)));\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.json`\x2C\n                                        packageJSONUrl)));\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.node`\x2C\n                                        packageJSONUrl)));\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.js`\x2C\n                                        packageJSONUrl)));\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.json`\x2C\n                                        packageJSONUrl)));\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.node`\x2C\n                                        packageJSONUrl)));\n    else guess = undefined;\n    if (guess) {\n      emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C\n                                 packageConfig.main);\n      return guess;\n    }\n    // Fallthrough.\n  }\n  if (fileExists(guess = new URL('./index.js'\x2C packageJSONUrl)));\n  // So fs.\n  else if (fileExists(guess = new URL('./index.json'\x2C packageJSONUrl)));\n  else if (fileExists(guess = new URL('./index.node'\x2C packageJSONUrl)));\n  else guess = undefined;\n  if (guess) {\n    emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C packageConfig.main);\n    return guess;\n  }\n  // Not found.\n  throw new ERR_MODULE_NOT_FOUND(\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C fileURLToPath(base));\n}\n\nconst encodedSepRegEx = /%2F|%5C/i;\n/**\n * @param {URL} resolved\n * @param {string | URL | undefined} base\n * @param {boolean} preserveSymlinks\n * @returns {URL | undefined}\n */\nfunction finalizeResolution(resolved\x2C base\x2C preserveSymlinks) {\n  if (RegExpPrototypeExec(encodedSepRegEx\x2C resolved.pathname) !== null)\n    throw new ERR_INVALID_MODULE_SPECIFIER(\n      resolved.pathname\x2C 'must not include encoded "/" or "\\\\" characters'\x2C\n      fileURLToPath(base));\n\n  const path = fileURLToPath(resolved);\n\n  const stats = tryStatSync(StringPrototypeEndsWith(path\x2C '/') ?\n    StringPrototypeSlice(path\x2C -1) : path);\n  if (stats.isDirectory()) {\n    const err = new ERR_UNSUPPORTED_DIR_IMPORT(path\x2C fileURLToPath(base));\n    err.url = String(resolved);\n    throw err;\n  } else if (!stats.isFile()) {\n    if (process.env.WATCH_REPORT_DEPENDENCIES && process.send) {\n      process.send({ 'watch:require': [path || resolved.pathname] });\n    }\n    throw new ERR_MODULE_NOT_FOUND(\n      path || resolved.pathname\x2C base && fileURLToPath(base)\x2C 'module');\n  }\n\n  if (!preserveSymlinks) {\n    const real = realpathSync(path\x2C {\n      [internalFS.realpathCacheKey]: realpathCache\n    });\n    const { search\x2C hash } = resolved;\n    resolved =\n        pathToFileURL(real + (StringPrototypeEndsWith(path\x2C sep) ? '/' : ''));\n    resolved.search = search;\n    resolved.hash = hash;\n  }\n\n  return resolved;\n}\n\n/**\n * @param {string} specifier\n * @param {URL} packageJSONUrl\n * @param {string | URL | undefined} base\n */\nfunction importNotDefined(specifier\x2C packageJSONUrl\x2C base) {\n  return new ERR_PACKAGE_IMPORT_NOT_DEFINED(\n    specifier\x2C packageJSONUrl && fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C\n    fileURLToPath(base));\n}\n\n/**\n * @param {string} subpath\n * @param {URL} packageJSONUrl\n * @param {string | URL | undefined} base\n */\nfunction exportsNotFound(subpath\x2C packageJSONUrl\x2C base) {\n  return new ERR_PACKAGE_PATH_NOT_EXPORTED(\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C\n    base && fileURLToPath(base));\n}\n\n/**\n *\n * @param {string} request\n * @param {string} match\n * @param {URL} packageJSONUrl\n * @param {boolean} internal\n * @param {string | URL | undefined} base\n */\nfunction throwInvalidSubpath(request\x2C match\x2C packageJSONUrl\x2C internal\x2C base) {\n  const reason = `request is not a valid match in pattern "${match}" for the "${\n    internal ? 'imports' : 'exports'}" resolution of ${\n    fileURLToPath(packageJSONUrl)}`;\n  throw new ERR_INVALID_MODULE_SPECIFIER(request\x2C reason\x2C\n                                         base && fileURLToPath(base));\n}\n\nfunction invalidPackageTarget(\n  subpath\x2C target\x2C packageJSONUrl\x2C internal\x2C base) {\n  if (typeof target === 'object' && target !== null) {\n    target = JSONStringify(target\x2C null\x2C '');\n  } else {\n    target = `${target}`;\n  }\n  return new ERR_INVALID_PACKAGE_TARGET(\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C target\x2C\n    internal\x2C base && fileURLToPath(base));\n}\n\nconst invalidSegmentRegEx = /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))?(\\\\|\\/|$)/i;\nconst deprecatedInvalidSegmentRegEx = /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\\\|\\/|$)/i;\nconst invalidPackageNameRegEx = /^\\.|%|\\\\/;\nconst patternRegEx = /\\*/g;\n\n/**\n *\n * @param {string} target\n * @param {*} subpath\n * @param {*} match\n * @param {*} packageJSONUrl\n * @param {*} base\n * @param {*} pattern\n * @param {*} internal\n * @param {*} isPathMap\n * @param {*} conditions\n * @returns {URL}\n */\nfunction resolvePackageTargetString(\n  target\x2C\n  subpath\x2C\n  match\x2C\n  packageJSONUrl\x2C\n  base\x2C\n  pattern\x2C\n  internal\x2C\n  isPathMap\x2C\n  conditions\x2C\n) {\n\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/')\n    throw invalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\n\n  if (!StringPrototypeStartsWith(target\x2C './')) {\n    if (internal && !StringPrototypeStartsWith(target\x2C '../') &&\n        !StringPrototypeStartsWith(target\x2C '/')) {\n      let isURL = false;\n      try {\n        new URL(target);\n        isURL = true;\n      } catch {\n        // Continue regardless of error.\n      }\n      if (!isURL) {\n        const exportTarget = pattern ?\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\n          target + subpath;\n        return packageResolve(\n          exportTarget\x2C packageJSONUrl\x2C conditions);\n      }\n    }\n    throw invalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\n  }\n\n  if (RegExpPrototypeExec(invalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)) !== null) {\n    if (RegExpPrototypeExec(deprecatedInvalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)) === null) {\n      if (!isPathMap) {\n        const request = pattern ?\n          StringPrototypeReplace(match\x2C '*'\x2C () => subpath) :\n          match + subpath;\n        const resolvedTarget = pattern ?\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\n          target;\n        emitInvalidSegmentDeprecation(resolvedTarget\x2C request\x2C match\x2C packageJSONUrl\x2C internal\x2C base\x2C true);\n      }\n    } else {\n      throw invalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\n    }\n  }\n\n  const resolved = new URL(target\x2C packageJSONUrl);\n  const resolvedPath = resolved.pathname;\n  const packagePath = new URL('.'\x2C packageJSONUrl).pathname;\n\n  if (!StringPrototypeStartsWith(resolvedPath\x2C packagePath))\n    throw invalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\n\n  if (subpath === '') return resolved;\n\n  if (RegExpPrototypeExec(invalidSegmentRegEx\x2C subpath) !== null) {\n    const request = pattern ? StringPrototypeReplace(match\x2C '*'\x2C () => subpath) : match + subpath;\n    if (RegExpPrototypeExec(deprecatedInvalidSegmentRegEx\x2C subpath) === null) {\n      if (!isPathMap) {\n        const resolvedTarget = pattern ?\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\n          target;\n        emitInvalidSegmentDeprecation(resolvedTarget\x2C request\x2C match\x2C packageJSONUrl\x2C internal\x2C base\x2C false);\n      }\n    } else {\n      throwInvalidSubpath(request\x2C match\x2C packageJSONUrl\x2C internal\x2C base);\n    }\n  }\n\n  if (pattern) {\n    return new URL(\n      RegExpPrototypeSymbolReplace(patternRegEx\x2C resolved.href\x2C () => subpath)\n    );\n  }\n\n  return new URL(subpath\x2C resolved);\n}\n\n/**\n * @param {string} key\n * @returns {boolean}\n */\nfunction isArrayIndex(key) {\n  const keyNum = +key;\n  if (`${keyNum}` !== key) return false;\n  return keyNum >= 0 && keyNum < 0xFFFF_FFFF;\n}\n\n/**\n *\n * @param {*} packageJSONUrl\n * @param {string|[string]} target\n * @param {*} subpath\n * @param {*} packageSubpath\n * @param {*} base\n * @param {*} pattern\n * @param {*} internal\n * @param {*} isPathMap\n * @param {*} conditions\n * @returns {URL|null}\n */\nfunction resolvePackageTarget(packageJSONUrl\x2C target\x2C subpath\x2C packageSubpath\x2C\n                              base\x2C pattern\x2C internal\x2C isPathMap\x2C conditions) {\n  if (typeof target === 'string') {\n    return resolvePackageTargetString(\n      target\x2C subpath\x2C packageSubpath\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C\n      isPathMap\x2C conditions);\n  } else if (ArrayIsArray(target)) {\n    if (target.length === 0) {\n      return null;\n    }\n\n    let lastException;\n    for (let i = 0; i < target.length; i++) {\n      const targetItem = target[i];\n      let resolveResult;\n      try {\n        resolveResult = resolvePackageTarget(\n          packageJSONUrl\x2C targetItem\x2C subpath\x2C packageSubpath\x2C base\x2C pattern\x2C\n          internal\x2C isPathMap\x2C conditions);\n      } catch (e) {\n        lastException = e;\n        if (e.code === 'ERR_INVALID_PACKAGE_TARGET') {\n          continue;\n        }\n        throw e;\n      }\n      if (resolveResult === undefined) {\n        continue;\n      }\n      if (resolveResult === null) {\n        lastException = null;\n        continue;\n      }\n      return resolveResult;\n    }\n    if (lastException === undefined || lastException === null)\n      return lastException;\n    throw lastException;\n  } else if (typeof target === 'object' && target !== null) {\n    const keys = ObjectGetOwnPropertyNames(target);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (isArrayIndex(key)) {\n        throw new ERR_INVALID_PACKAGE_CONFIG(\n          fileURLToPath(packageJSONUrl)\x2C base\x2C\n          '"exports" cannot contain numeric property keys.');\n      }\n    }\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (key === 'default' || conditions.has(key)) {\n        const conditionalTarget = target[key];\n        const resolveResult = resolvePackageTarget(\n          packageJSONUrl\x2C conditionalTarget\x2C subpath\x2C packageSubpath\x2C base\x2C\n          pattern\x2C internal\x2C isPathMap\x2C conditions);\n        if (resolveResult === undefined)\n          continue;\n        return resolveResult;\n      }\n    }\n    return undefined;\n  } else if (target === null) {\n    return null;\n  }\n  throw invalidPackageTarget(packageSubpath\x2C target\x2C packageJSONUrl\x2C internal\x2C\n                             base);\n}\n\n/**\n *\n * @param {import('internal/modules/esm/package_config.js').Exports} exports\n * @param {URL} packageJSONUrl\n * @param {string | URL | undefined} base\n * @returns {boolean}\n */\nfunction isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base) {\n  if (typeof exports === 'string' || ArrayIsArray(exports)) return true;\n  if (typeof exports !== 'object' || exports === null) return false;\n\n  const keys = ObjectGetOwnPropertyNames(exports);\n  let isConditionalSugar = false;\n  let i = 0;\n  for (let j = 0; j < keys.length; j++) {\n    const key = keys[j];\n    const curIsConditionalSugar = key === '' || key[0] !== '.';\n    if (i++ === 0) {\n      isConditionalSugar = curIsConditionalSugar;\n    } else if (isConditionalSugar !== curIsConditionalSugar) {\n      throw new ERR_INVALID_PACKAGE_CONFIG(\n        fileURLToPath(packageJSONUrl)\x2C base\x2C\n        '"exports" cannot contain some keys starting with \\'.\\' and some not.' +\n        ' The exports object must either be an object of package subpath keys' +\n        ' or an object of main entry condition name keys only.');\n    }\n  }\n  return isConditionalSugar;\n}\n\n/**\n * @param {URL} packageJSONUrl\n * @param {string} packageSubpath\n * @param {PackageConfig} packageConfig\n * @param {string | URL | undefined} base\n * @param {Set<string>} conditions\n * @returns {URL}\n */\nfunction packageExportsResolve(\n  packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions) {\n  let exports = packageConfig.exports;\n  if (isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base))\n    exports = { '.': exports };\n\n  if (ObjectPrototypeHasOwnProperty(exports\x2C packageSubpath) &&\n      !StringPrototypeIncludes(packageSubpath\x2C '*') &&\n      !StringPrototypeEndsWith(packageSubpath\x2C '/')) {\n    const target = exports[packageSubpath];\n    const resolveResult = resolvePackageTarget(\n      packageJSONUrl\x2C target\x2C ''\x2C packageSubpath\x2C base\x2C false\x2C false\x2C false\x2C\n      conditions\n    );\n\n    if (resolveResult == null) {\n      throw exportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\n    }\n\n    return resolveResult;\n  }\n\n  let bestMatch = '';\n  let bestMatchSubpath;\n  const keys = ObjectGetOwnPropertyNames(exports);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const patternIndex = StringPrototypeIndexOf(key\x2C '*');\n    if (patternIndex !== -1 &&\n        StringPrototypeStartsWith(packageSubpath\x2C\n                                  StringPrototypeSlice(key\x2C 0\x2C patternIndex))) {\n      // When this reaches EOL\x2C this can throw at the top of the whole function:\n      //\n      // if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\n      //   throwInvalidSubpath(packageSubpath)\n      //\n      // To match "imports" and the spec.\n      if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\n        emitTrailingSlashPatternDeprecation(packageSubpath\x2C packageJSONUrl\x2C\n                                            base);\n      const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\n      if (packageSubpath.length >= key.length &&\n          StringPrototypeEndsWith(packageSubpath\x2C patternTrailer) &&\n          patternKeyCompare(bestMatch\x2C key) === 1 &&\n          StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\n        bestMatch = key;\n        bestMatchSubpath = StringPrototypeSlice(\n          packageSubpath\x2C patternIndex\x2C\n          packageSubpath.length - patternTrailer.length);\n      }\n    }\n  }\n\n  if (bestMatch) {\n    const target = exports[bestMatch];\n    const resolveResult = resolvePackageTarget(\n      packageJSONUrl\x2C\n      target\x2C\n      bestMatchSubpath\x2C\n      bestMatch\x2C\n      base\x2C\n      true\x2C\n      false\x2C\n      StringPrototypeEndsWith(packageSubpath\x2C '/')\x2C\n      conditions);\n\n    if (resolveResult == null) {\n      throw exportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\n    }\n    return resolveResult;\n  }\n\n  throw exportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\n}\n\nfunction patternKeyCompare(a\x2C b) {\n  const aPatternIndex = StringPrototypeIndexOf(a\x2C '*');\n  const bPatternIndex = StringPrototypeIndexOf(b\x2C '*');\n  const baseLenA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;\n  const baseLenB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;\n  if (baseLenA > baseLenB) return -1;\n  if (baseLenB > baseLenA) return 1;\n  if (aPatternIndex === -1) return 1;\n  if (bPatternIndex === -1) return -1;\n  if (a.length > b.length) return -1;\n  if (b.length > a.length) return 1;\n  return 0;\n}\n\n/**\n * @param {string} name\n * @param {string | URL | undefined} base\n * @param {Set<string>} conditions\n * @returns {URL}\n */\nfunction packageImportsResolve(name\x2C base\x2C conditions) {\n  if (name === '#' || StringPrototypeStartsWith(name\x2C '#/') ||\n      StringPrototypeEndsWith(name\x2C '/')) {\n    const reason = 'is not a valid internal imports specifier name';\n    throw new ERR_INVALID_MODULE_SPECIFIER(name\x2C reason\x2C fileURLToPath(base));\n  }\n  let packageJSONUrl;\n  const packageConfig = getPackageScopeConfig(base);\n  if (packageConfig.exists) {\n    packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\n    const imports = packageConfig.imports;\n    if (imports) {\n      if (ObjectPrototypeHasOwnProperty(imports\x2C name) &&\n          !StringPrototypeIncludes(name\x2C '*')) {\n        const resolveResult = resolvePackageTarget(\n          packageJSONUrl\x2C imports[name]\x2C ''\x2C name\x2C base\x2C false\x2C true\x2C false\x2C\n          conditions\n        );\n        if (resolveResult != null) {\n          return resolveResult;\n        }\n      } else {\n        let bestMatch = '';\n        let bestMatchSubpath;\n        const keys = ObjectGetOwnPropertyNames(imports);\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i];\n          const patternIndex = StringPrototypeIndexOf(key\x2C '*');\n          if (patternIndex !== -1 &&\n              StringPrototypeStartsWith(name\x2C\n                                        StringPrototypeSlice(key\x2C 0\x2C\n                                                             patternIndex))) {\n            const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\n            if (name.length >= key.length &&\n                StringPrototypeEndsWith(name\x2C patternTrailer) &&\n                patternKeyCompare(bestMatch\x2C key) === 1 &&\n                StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\n              bestMatch = key;\n              bestMatchSubpath = StringPrototypeSlice(\n                name\x2C patternIndex\x2C name.length - patternTrailer.length);\n            }\n          }\n        }\n\n        if (bestMatch) {\n          const target = imports[bestMatch];\n          const resolveResult = resolvePackageTarget(packageJSONUrl\x2C target\x2C\n                                                     bestMatchSubpath\x2C\n                                                     bestMatch\x2C base\x2C true\x2C\n                                                     true\x2C false\x2C conditions);\n          if (resolveResult != null) {\n            return resolveResult;\n          }\n        }\n      }\n    }\n  }\n  throw importNotDefined(name\x2C packageJSONUrl\x2C base);\n}\n\n/**\n * @param {URL} url\n * @returns {import('internal/modules/esm/package_config.js').PackageType}\n */\nfunction getPackageType(url) {\n  const packageConfig = getPackageScopeConfig(url);\n  return packageConfig.type;\n}\n\n/**\n * @param {string} specifier\n * @param {string | URL | undefined} base\n * @returns {{ packageName: string\x2C packageSubpath: string\x2C isScoped: boolean }}\n */\nfunction parsePackageName(specifier\x2C base) {\n  let separatorIndex = StringPrototypeIndexOf(specifier\x2C '/');\n  let validPackageName = true;\n  let isScoped = false;\n  if (specifier[0] === '@') {\n    isScoped = true;\n    if (separatorIndex === -1 || specifier.length === 0) {\n      validPackageName = false;\n    } else {\n      separatorIndex = StringPrototypeIndexOf(\n        specifier\x2C '/'\x2C separatorIndex + 1);\n    }\n  }\n\n  const packageName = separatorIndex === -1 ?\n    specifier : StringPrototypeSlice(specifier\x2C 0\x2C separatorIndex);\n\n  // Package name cannot have leading . and cannot have percent-encoding or\n  // \\\\ separators.\n  if (RegExpPrototypeExec(invalidPackageNameRegEx\x2C packageName) !== null)\n    validPackageName = false;\n\n  if (!validPackageName) {\n    throw new ERR_INVALID_MODULE_SPECIFIER(\n      specifier\x2C 'is not a valid package name'\x2C fileURLToPath(base));\n  }\n\n  const packageSubpath = '.' + (separatorIndex === -1 ? '' :\n    StringPrototypeSlice(specifier\x2C separatorIndex));\n\n  return { packageName\x2C packageSubpath\x2C isScoped };\n}\n\n/**\n * @param {string} specifier\n * @param {string | URL | undefined} base\n * @param {Set<string>} conditions\n * @returns {resolved: URL\x2C format? : string}\n */\nfunction packageResolve(specifier\x2C base\x2C conditions) {\n  if (BuiltinModule.canBeRequiredByUsers(specifier) &&\n      BuiltinModule.canBeRequiredWithoutScheme(specifier)) {\n    return new URL('node:' + specifier);\n  }\n\n  const { packageName\x2C packageSubpath\x2C isScoped } =\n    parsePackageName(specifier\x2C base);\n\n  // ResolveSelf\n  const packageConfig = getPackageScopeConfig(base);\n  if (packageConfig.exists) {\n    const packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\n    if (packageConfig.name === packageName &&\n        packageConfig.exports !== undefined && packageConfig.exports !== null) {\n      return packageExportsResolve(\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions);\n    }\n  }\n\n  let packageJSONUrl =\n    new URL('./node_modules/' + packageName + '/package.json'\x2C base);\n  let packageJSONPath = fileURLToPath(packageJSONUrl);\n  let lastPath;\n  do {\n    const stat = tryStatSync(StringPrototypeSlice(packageJSONPath\x2C 0\x2C\n                                                  packageJSONPath.length - 13));\n    if (!stat.isDirectory()) {\n      lastPath = packageJSONPath;\n      packageJSONUrl = new URL((isScoped ?\n        '../../../../node_modules/' : '../../../node_modules/') +\n        packageName + '/package.json'\x2C packageJSONUrl);\n      packageJSONPath = fileURLToPath(packageJSONUrl);\n      continue;\n    }\n\n    // Package match.\n    const packageConfig = getPackageConfig(packageJSONPath\x2C specifier\x2C base);\n    if (packageConfig.exports !== undefined && packageConfig.exports !== null) {\n      return packageExportsResolve(\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions);\n    }\n    if (packageSubpath === '.') {\n      return legacyMainResolve(\n        packageJSONUrl\x2C\n        packageConfig\x2C\n        base\n      );\n    }\n\n    return new URL(packageSubpath\x2C packageJSONUrl);\n    // Cross-platform root check.\n  } while (packageJSONPath.length !== lastPath.length);\n\n  // eslint can't handle the above code.\n  // eslint-disable-next-line no-unreachable\n  throw new ERR_MODULE_NOT_FOUND(packageName\x2C fileURLToPath(base));\n}\n\n/**\n * @param {string} specifier\n * @returns {boolean}\n */\nfunction isBareSpecifier(specifier) {\n  return specifier[0] && specifier[0] !== '/' && specifier[0] !== '.';\n}\n\nfunction isRelativeSpecifier(specifier) {\n  if (specifier[0] === '.') {\n    if (specifier.length === 1 || specifier[1] === '/') return true;\n    if (specifier[1] === '.') {\n      if (specifier.length === 2 || specifier[2] === '/') return true;\n    }\n  }\n  return false;\n}\n\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\n  if (specifier === '') return false;\n  if (specifier[0] === '/') return true;\n  return isRelativeSpecifier(specifier);\n}\n\n/**\n * @param {string} specifier\n * @param {string | URL | undefined} base\n * @param {Set<string>} conditions\n * @param {boolean} preserveSymlinks\n * @returns {url: URL\x2C format?: string}\n */\nfunction moduleResolve(specifier\x2C base\x2C conditions\x2C preserveSymlinks) {\n  const isRemote = base.protocol === 'http:' ||\n    base.protocol === 'https:';\n  // Order swapped from spec for minor perf gain.\n  // Ok since relative URLs cannot parse as URLs.\n  let resolved;\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\n    resolved = new URL(specifier\x2C base);\n  } else if (!isRemote && specifier[0] === '#') {\n    resolved = packageImportsResolve(specifier\x2C base\x2C conditions);\n  } else {\n    try {\n      resolved = new URL(specifier);\n    } catch {\n      if (!isRemote) {\n        resolved = packageResolve(specifier\x2C base\x2C conditions);\n      }\n    }\n  }\n  if (resolved.protocol !== 'file:') {\n    return resolved;\n  }\n  return finalizeResolution(resolved\x2C base\x2C preserveSymlinks);\n}\n\n/**\n * Try to resolve an import as a CommonJS module\n * @param {string} specifier\n * @param {string} parentURL\n * @returns {boolean|string}\n */\nfunction resolveAsCommonJS(specifier\x2C parentURL) {\n  try {\n    const parent = fileURLToPath(parentURL);\n    const tmpModule = new CJSModule(parent\x2C null);\n    tmpModule.paths = CJSModule._nodeModulePaths(parent);\n\n    let found = CJSModule._resolveFilename(specifier\x2C tmpModule\x2C false);\n\n    // If it is a relative specifier return the relative path\n    // to the parent\n    if (isRelativeSpecifier(specifier)) {\n      found = relative(parent\x2C found);\n      // Add '.separator if the path does not start with '..separator'\n      // This should be a safe assumption because when loading\n      // esm modules there should be always a file specified so\n      // there should not be a specifier like '..' or '.'\n      if (!StringPrototypeStartsWith(found\x2C `..${sep}`)) {\n        found = `.${sep}${found}`;\n      }\n    } else if (isBareSpecifier(specifier)) {\n      // If it is a bare specifier return the relative path within the\n      // module\n      const pkg = StringPrototypeSplit(specifier\x2C '/')[0];\n      const index = StringPrototypeIndexOf(found\x2C pkg);\n      if (index !== -1) {\n        found = StringPrototypeSlice(found\x2C index);\n      }\n    }\n    // Normalize the path separator to give a valid suggestion\n    // on Windows\n    if (process.platform === 'win32') {\n      found = RegExpPrototypeSymbolReplace(new RegExp(`\\\\${sep}`\x2C 'g')\x2C\n                                           found\x2C '/');\n    }\n    return found;\n  } catch {\n    return false;\n  }\n}\n\n// TODO(@JakobJingleheimer): de-dupe `specifier` & `parsed`\nfunction checkIfDisallowedImport(specifier\x2C parsed\x2C parsedParentURL) {\n  if (parsedParentURL) {\n    if (\n      parsedParentURL.protocol === 'http:' ||\n      parsedParentURL.protocol === 'https:'\n    ) {\n      if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\n        // data: and blob: disallowed due to allowing file: access via\n        // indirection\n        if (parsed &&\n          parsed.protocol !== 'https:' &&\n          parsed.protocol !== 'http:'\n        ) {\n          throw new ERR_NETWORK_IMPORT_DISALLOWED(\n            specifier\x2C\n            parsedParentURL\x2C\n            'remote imports cannot import from a local location.'\n          );\n        }\n\n        return { url: parsed.href };\n      }\n      if (BuiltinModule.canBeRequiredByUsers(specifier) &&\n          BuiltinModule.canBeRequiredWithoutScheme(specifier)) {\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\n          specifier\x2C\n          parsedParentURL\x2C\n          'remote imports cannot import from a local location.'\n        );\n      }\n\n      throw new ERR_NETWORK_IMPORT_DISALLOWED(\n        specifier\x2C\n        parsedParentURL\x2C\n        'only relative and absolute specifiers are supported.'\n      );\n    }\n  }\n}\n\nfunction throwIfUnsupportedURLProtocol(url) {\n  if (url.protocol !== 'file:' && url.protocol !== 'data:' &&\n      url.protocol !== 'node:') {\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(url);\n  }\n}\n\nfunction throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports) {\n  if (\n    parsed &&\n    parsed.protocol !== 'file:' &&\n    parsed.protocol !== 'data:' &&\n    (\n      !experimentalNetworkImports ||\n      (\n        parsed.protocol !== 'https:' &&\n        parsed.protocol !== 'http:'\n      )\n    )\n  ) {\n    const schemes = ['file'\x2C 'data'];\n    if (experimentalNetworkImports) {\n      ArrayPrototypePush(schemes\x2C 'https'\x2C 'http');\n    }\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C schemes);\n  }\n}\n\nasync function defaultResolve(specifier\x2C context = {}) {\n  let { parentURL\x2C conditions } = context;\n  if (parentURL && policy?.manifest) {\n    const redirects = policy.manifest.getDependencyMapper(parentURL);\n    if (redirects) {\n      const { resolve\x2C reaction } = redirects;\n      const destination = resolve(specifier\x2C new SafeSet(conditions));\n      let missing = true;\n      if (destination === true) {\n        missing = false;\n      } else if (destination) {\n        const href = destination.href;\n        return { __proto__: null\x2C url: href };\n      }\n      if (missing) {\n        // Prevent network requests from firing if resolution would be banned.\n        // Network requests can extract data by doing things like putting\n        // secrets in query params\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\n          parentURL\x2C\n          specifier\x2C\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C '))\n        );\n      }\n    }\n  }\n\n  let parsedParentURL;\n  if (parentURL) {\n    try {\n      parsedParentURL = new URL(parentURL);\n    } catch {\n      // Ignore exception\n    }\n  }\n\n  let parsed;\n  try {\n    if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\n      parsed = new URL(specifier\x2C parsedParentURL);\n    } else {\n      parsed = new URL(specifier);\n    }\n\n    if (parsed.protocol === 'data:' ||\n      (experimentalNetworkImports &&\n        (\n          parsed.protocol === 'https:' ||\n          parsed.protocol === 'http:'\n        )\n      )\n    ) {\n      return { __proto__: null\x2C url: parsed.href };\n    }\n  } catch {\n    // Ignore exception\n  }\n\n  // There are multiple deep branches that can either throw or return; instead\n  // of duplicating that deeply nested logic for the possible returns\x2C DRY and\n  // check for a return. This seems the least gnarly.\n  const maybeReturn = checkIfDisallowedImport(\n    specifier\x2C\n    parsed\x2C\n    parsedParentURL\x2C\n  );\n\n  if (maybeReturn) return maybeReturn;\n\n  // This must come after checkIfDisallowedImport\n  if (parsed && parsed.protocol === 'node:') return { __proto__: null\x2C url: specifier };\n\n  throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports);\n\n  const isMain = parentURL === undefined;\n  if (isMain) {\n    parentURL = pathToFileURL(`${process.cwd()}/`).href;\n\n    // This is the initial entry point to the program\x2C and --input-type has\n    // been passed as an option; but --input-type can only be used with\n    // --eval\x2C --print or STDIN string input. It is not allowed with file\n    // input\x2C to avoid user confusion over how expansive the effect of the\n    // flag should be (i.e. entry point only\x2C package scope surrounding the\n    // entry point\x2C etc.).\n    if (typeFlag) throw new ERR_INPUT_TYPE_NOT_ALLOWED();\n  }\n\n  conditions = getConditionsSet(conditions);\n  let url;\n  try {\n    url = moduleResolve(\n      specifier\x2C\n      parentURL\x2C\n      conditions\x2C\n      isMain ? preserveSymlinksMain : preserveSymlinks\n    );\n  } catch (error) {\n    // Try to give the user a hint of what would have been the\n    // resolved CommonJS module\n    if (error.code === 'ERR_MODULE_NOT_FOUND' ||\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT') {\n      if (StringPrototypeStartsWith(specifier\x2C 'file://')) {\n        specifier = fileURLToPath(specifier);\n      }\n      const found = resolveAsCommonJS(specifier\x2C parentURL);\n      if (found) {\n        // Modify the stack and message string to include the hint\n        const lines = StringPrototypeSplit(error.stack\x2C '\\n');\n        const hint = `Did you mean to import ${found}?`;\n        error.stack =\n          ArrayPrototypeShift(lines) + '\\n' +\n          hint + '\\n' +\n          ArrayPrototypeJoin(lines\x2C '\\n');\n        error.message += `\\n${hint}`;\n      }\n    }\n    throw error;\n  }\n\n  throwIfUnsupportedURLProtocol(url);\n\n  return {\n    __proto__: null\x2C\n    // Do NOT cast `url` to a string: that will work even when there are real\n    // problems\x2C silencing them\n    url: url.href\x2C\n    format: defaultGetFormatWithoutErrors(url\x2C context)\x2C\n  };\n}\n\nmodule.exports = {\n  defaultResolve\x2C\n  encodedSepRegEx\x2C\n  getPackageScopeConfig\x2C\n  getPackageType\x2C\n  packageExportsResolve\x2C\n  packageImportsResolve\x2C\n};\n\n// cycle\nconst {\n  defaultGetFormatWithoutErrors\x2C\n} = require('internal/modules/esm/get_format');\n\nif (policy) {\n  const $defaultResolve = defaultResolve;\n  module.exports.defaultResolve = async function defaultResolve(\n    specifier\x2C\n    context\n  ) {\n    const ret = await $defaultResolve(specifier\x2C context);\n    // This is a preflight check to avoid data exfiltration by query params etc.\n    policy.manifest.mightAllow(ret.url\x2C () =>\n      new ERR_MANIFEST_DEPENDENCY_MISSING(\n        context.parentURL\x2C\n        specifier\x2C\n        context.conditions\n      )\n    );\n    return ret;\n  };\n}\n
code-source-info,0x3f1a4fbb6b9e,386,0,37006,C0O0C4O37006,,
code-creation,JS,10,565375,0x3f1a4fbb79b6,938, node:internal/modules/esm/resolve:1:1,0x3f1a4fbb6b18,~
code-source-info,0x3f1a4fbb79b6,386,0,37006,C0O0C361O25C367O41C373O63C379O85C385O108C391O125C397O154C403O187C409O197C415O220C421O252C426O263C432O274C438O284C444O311C450O338C456O364C462O394C468O420C474O444C480O468C486O531C489O531C493O531C495O587C498O587C503O569C509O675C512O675C517O636C523O652C529O664C535O717C538O717C543O698C548O812C551O812C560O856C567O812C569O927C572O927C577O909C583O914C589O969C592O969C596O969C598O1037C601O1037C605O1037C607O1118C610O1118C614O1118C616O1185C619O1185C623O1185C625O1263C628O1263C633O1225C639O1230C645O1245C651O1645C654O1645C659O1671C664O1298C670O1328C676O1360C682O1390C688O1420C694O1455C700O1479C706O1513C712O1546C718O1576C724O1609C730O1710C733O1710C738O1696C744O1802C747O1802C752O1758C758O1776C764O1879C767O1879C772O1858C778O2051C781O2051C786O2051C788O2679C793O2679C795O4654C797O4654C802O4654C804O4763C808O4763C810O7242C815O7242C817O10195C822O10195C824O10405C829O10405C831O10608C836O10608C838O10641C843O10641C845O36260C852O36281C858O36299C864O36318C870O36343C876O36361C882O36386C888O36275C892O36467C895O36467C900O36432C906O36512C917O36552C919O36552C921O36577C930O36600C937O37005,,
tick,0x1a532274c,565458,1,0x10027c640,3,0x0,0x1075c9144,0x1075c8e2c,0x3f1a4fbb237f,0x1075c9210,0x1075c8e2c,0x3f1a4fbb047d,0x1075c9210,0x1075c8e2c,0x3f1a4fbafd04,0x3f1a4fba2d1b,0x3f1a4fba30fe,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
code-creation,Eval,10,565542,0x3f1a4fbba9ae,5, node:internal/modules/esm/package_config:1:1,0x3f1a4fbba7c8,~
script-source,387,node:internal/modules/esm/package_config,'use strict';\n\nconst {\n  JSONParse\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  SafeMap\x2C\n  StringPrototypeEndsWith\x2C\n} = primordials;\nconst { URL\x2C fileURLToPath } = require('internal/url');\nconst {\n  ERR_INVALID_PACKAGE_CONFIG\x2C\n} = require('internal/errors').codes;\n\nconst { filterOwnProperties } = require('internal/util');\n\n\n/**\n * @typedef {string | string[] | Record<string\x2C unknown>} Exports\n * @typedef {'module' | 'commonjs'} PackageType\n * @typedef {{\n *   pjsonPath: string\x2C\n *   exports?: ExportConfig\x2C\n *   name?: string\x2C\n *   main?: string\x2C\n *   type?: PackageType\x2C\n * }} PackageConfig\n */\n\n/** @type {Map<string\x2C PackageConfig>} */\nconst packageJSONCache = new SafeMap();\n\n\n/**\n * @param {string} path\n * @param {string} specifier\n * @param {string | URL | undefined} base\n * @returns {PackageConfig}\n */\nfunction getPackageConfig(path\x2C specifier\x2C base) {\n  const existing = packageJSONCache.get(path);\n  if (existing !== undefined) {\n    return existing;\n  }\n  const packageJsonReader = require('internal/modules/package_json_reader');\n  const source = packageJsonReader.read(path).string;\n  if (source === undefined) {\n    const packageConfig = {\n      pjsonPath: path\x2C\n      exists: false\x2C\n      main: undefined\x2C\n      name: undefined\x2C\n      type: 'none'\x2C\n      exports: undefined\x2C\n      imports: undefined\x2C\n    };\n    packageJSONCache.set(path\x2C packageConfig);\n    return packageConfig;\n  }\n\n  let packageJSON;\n  try {\n    packageJSON = JSONParse(source);\n  } catch (error) {\n    throw new ERR_INVALID_PACKAGE_CONFIG(\n      path\x2C\n      (base ? `"${specifier}" from ` : '') + fileURLToPath(base || specifier)\x2C\n      error.message\n    );\n  }\n\n  let { imports\x2C main\x2C name\x2C type } = filterOwnProperties(packageJSON\x2C ['imports'\x2C 'main'\x2C 'name'\x2C 'type']);\n  const exports = ObjectPrototypeHasOwnProperty(packageJSON\x2C 'exports') ? packageJSON.exports : undefined;\n  if (typeof imports !== 'object' || imports === null) {\n    imports = undefined;\n  }\n  if (typeof main !== 'string') {\n    main = undefined;\n  }\n  if (typeof name !== 'string') {\n    name = undefined;\n  }\n  // Ignore unknown types for forwards compatibility\n  if (type !== 'module' && type !== 'commonjs') {\n    type = 'none';\n  }\n\n  const packageConfig = {\n    pjsonPath: path\x2C\n    exists: true\x2C\n    main\x2C\n    name\x2C\n    type\x2C\n    exports\x2C\n    imports\x2C\n  };\n  packageJSONCache.set(path\x2C packageConfig);\n  return packageConfig;\n}\n\n\n/**\n * @param {URL | string} resolved\n * @returns {PackageConfig}\n */\nfunction getPackageScopeConfig(resolved) {\n  let packageJSONUrl = new URL('./package.json'\x2C resolved);\n  while (true) {\n    const packageJSONPath = packageJSONUrl.pathname;\n    if (StringPrototypeEndsWith(packageJSONPath\x2C 'node_modules/package.json')) {\n      break;\n    }\n    const packageConfig = getPackageConfig(fileURLToPath(packageJSONUrl)\x2C resolved);\n    if (packageConfig.exists) {\n      return packageConfig;\n    }\n\n    const lastPackageJSONUrl = packageJSONUrl;\n    packageJSONUrl = new URL('../package.json'\x2C packageJSONUrl);\n\n    // Terminates at root where ../package.json equals ../../package.json\n    // (can't just check "/package.json" for Windows support).\n    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) {\n      break;\n    }\n  }\n  const packageJSONPath = fileURLToPath(packageJSONUrl);\n  const packageConfig = {\n    pjsonPath: packageJSONPath\x2C\n    exists: false\x2C\n    main: undefined\x2C\n    name: undefined\x2C\n    type: 'none'\x2C\n    exports: undefined\x2C\n    imports: undefined\x2C\n  };\n  packageJSONCache.set(packageJSONPath\x2C packageConfig);\n  return packageConfig;\n}\n\n\nmodule.exports = {\n  getPackageConfig\x2C\n  getPackageScopeConfig\x2C\n};\n
code-source-info,0x3f1a4fbba9ae,387,0,3629,C0O0C4O3629,,
code-creation,JS,10,565667,0x3f1a4fbbab96,163, node:internal/modules/esm/package_config:1:1,0x3f1a4fbba928,~
code-source-info,0x3f1a4fbbab96,387,0,3629,C0O0C44O25C50O38C56O71C61O82C67O155C73O155C78O132C84O137C90O222C96O222C101O248C106O190C112O289C118O289C123O265C129O660C131O660C136O660C138O3562C145O3583C151O3603C157O3577C162O3628,,
code-creation,Eval,10,565792,0x3f1a4fbbba2e,5, node:internal/modules/esm/get_format:1:1,0x3f1a4fbbb7c8,~
script-source,388,node:internal/modules/esm/get_format,'use strict';\nconst {\n  RegExpPrototypeExec\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  PromisePrototypeThen\x2C\n  PromiseResolve\x2C\n  StringPrototypeSlice\x2C\n} = primordials;\nconst { basename\x2C extname\x2C relative } = require('path');\nconst { getOptionValue } = require('internal/options');\nconst {\n  extensionFormatMap\x2C\n  mimeToFormat\x2C\n} = require('internal/modules/esm/formats');\n\nconst experimentalNetworkImports =\n  getOptionValue('--experimental-network-imports');\nconst { getPackageType\x2C getPackageScopeConfig } = require('internal/modules/esm/resolve');\nconst { URL\x2C fileURLToPath } = require('internal/url');\nconst { ERR_UNKNOWN_FILE_EXTENSION } = require('internal/errors').codes;\n\nconst protocolHandlers = {\n  '__proto__': null\x2C\n  'data:': getDataProtocolModuleFormat\x2C\n  'file:': getFileProtocolModuleFormat\x2C\n  'http:': getHttpProtocolModuleFormat\x2C\n  'https:': getHttpProtocolModuleFormat\x2C\n  'node:'() { return 'builtin'; }\x2C\n};\n\n/**\n * @param {URL} parsed\n * @returns {string | null}\n */\nfunction getDataProtocolModuleFormat(parsed) {\n  const { 1: mime } = RegExpPrototypeExec(\n    /^([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\n    parsed.pathname\x2C\n  ) || [ null\x2C null\x2C null ];\n\n  return mimeToFormat(mime);\n}\n\n/**\n * @param {URL} url\n * @param {{parentURL: string}} context\n * @param {boolean} ignoreErrors\n * @returns {string}\n */\nfunction getFileProtocolModuleFormat(url\x2C context\x2C ignoreErrors) {\n  const filepath = fileURLToPath(url);\n  const ext = extname(filepath);\n  if (ext === '.js') {\n    return getPackageType(url) === 'module' ? 'module' : 'commonjs';\n  }\n\n  const format = extensionFormatMap[ext];\n  if (format) return format;\n\n  // Explicit undefined return indicates load hook should rerun format check\n  if (ignoreErrors) { return undefined; }\n  let suggestion = '';\n  if (getPackageType(url) === 'module' && ext === '') {\n    const config = getPackageScopeConfig(url);\n    const fileBasename = basename(filepath);\n    const relativePath = StringPrototypeSlice(relative(config.pjsonPath\x2C filepath)\x2C 1);\n    suggestion = 'Loading extensionless files is not supported inside of ' +\n      '"type":"module" package.json contexts. The package.json file ' +\n      `${config.pjsonPath} caused this "type":"module" context. Try ` +\n      `changing ${filepath} to have a file extension. Note the "bin" ` +\n      'field of package.json can point to a file with an extension\x2C for example ' +\n      `{"type":"module"\x2C"bin":{"${fileBasename}":"${relativePath}.js"}}`;\n  }\n  throw new ERR_UNKNOWN_FILE_EXTENSION(ext\x2C filepath\x2C suggestion);\n}\n\n/**\n * @param {URL} url\n * @param {{parentURL: string}} context\n * @returns {Promise<string> | undefined} only works when enabled\n */\nfunction getHttpProtocolModuleFormat(url\x2C context) {\n  if (experimentalNetworkImports) {\n    const { fetchModule } = require('internal/modules/esm/fetch_module');\n    return PromisePrototypeThen(\n      PromiseResolve(fetchModule(url\x2C context))\x2C\n      (entry) => {\n        return mimeToFormat(entry.headers['content-type']);\n      }\n    );\n  }\n}\n\n/**\n * @param {URL | URL['href']} url\n * @param {{parentURL: string}} context\n * @returns {Promise<string> | string | undefined} only works when enabled\n */\nfunction defaultGetFormatWithoutErrors(url\x2C context) {\n  const parsed = new URL(url);\n  if (!ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol))\n    return null;\n  return protocolHandlers[parsed.protocol](parsed\x2C context\x2C true);\n}\n\n/**\n * @param {URL | URL['href']} url\n * @param {{parentURL: string}} context\n * @returns {Promise<string> | string | undefined} only works when enabled\n */\nfunction defaultGetFormat(url\x2C context) {\n  const parsed = new URL(url);\n  return ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol) ?\n    protocolHandlers[parsed.protocol](parsed\x2C context\x2C false) :\n    null;\n}\n\nmodule.exports = {\n  defaultGetFormat\x2C\n  defaultGetFormatWithoutErrors\x2C\n  extensionFormatMap\x2C\n};\n
code-source-info,0x3f1a4fbbba2e,388,0,3896,C0O0C4O3896,,
code-creation,JS,10,565958,0x3f1a4fbbbe7e,332, node:internal/modules/esm/get_format:1:1,0x3f1a4fbbb9a8,~
code-source-info,0x3f1a4fbbbe7e,388,0,3896,C0O0C85O24C91O47C97O80C103O104C109O122C115O201C121O201C126O169C132O179C138O188C144O245C150O245C155O226C160O324C166O324C171O284C177O306C183O403C186O403C190O403C192O503C198O503C203O461C209O477C215O575C221O575C226O552C232O557C238O639C244O639C249O665C254O608C260O699C267O733C273O773C279O813C285O854C289O885C299O699C301O3799C308O3820C314O3840C320O3873C326O3814C331O3895,,
code-creation,Eval,10,566000,0x3f1a4fbbc87e,5, node:internal/modules/esm/formats:1:1,0x3f1a4fbbc718,~
script-source,389,node:internal/modules/esm/formats,'use strict';\n\nconst {\n  RegExpPrototypeExec\x2C\n} = primordials;\nconst { getOptionValue } = require('internal/options');\n\nconst experimentalWasmModules = getOptionValue('--experimental-wasm-modules');\n\nconst extensionFormatMap = {\n  '__proto__': null\x2C\n  '.cjs': 'commonjs'\x2C\n  '.js': 'module'\x2C\n  '.json': 'json'\x2C\n  '.mjs': 'module'\x2C\n};\n\nif (experimentalWasmModules) {\n  extensionFormatMap['.wasm'] = 'wasm';\n}\n\n/**\n * @param {string} mime\n * @returns {string | null}\n */\nfunction mimeToFormat(mime) {\n  if (\n    RegExpPrototypeExec(\n      /\\s*(text|application)\\/javascript\\s*(;\\s*charset=utf-?8\\s*)?/i\x2C\n      mime\n    ) !== null\n  ) return 'module';\n  if (mime === 'application/json') return 'json';\n  if (experimentalWasmModules && mime === 'application/wasm') return 'wasm';\n  return null;\n}\n\nmodule.exports = {\n  extensionFormatMap\x2C\n  mimeToFormat\x2C\n};\n
code-source-info,0x3f1a4fbbc87e,389,0,853,C0O0C4O853,,
code-creation,JS,10,566042,0x3f1a4fbbca3e,84, node:internal/modules/esm/formats:1:1,0x3f1a4fbbc7f8,~
code-source-info,0x3f1a4fbbca3e,389,0,853,C0O0C16O25C22O90C25O90C30O71C35O152C38O152C42O152C44O227C49O334C53O367C55O395C59O793C66O814C72O836C78O808C83O852,,
code-creation,JS,10,566125,0x3f1a4fbbd1ee,95,ESMLoader node:internal/modules/esm/loader:238:14,0x3f1a4fbb1a50,~
code-source-info,0x3f1a4fbbd1ee,385,6971,7216,C5O6971C23O6980C33O6984C38O7023C44O7031C49O7044C59O7044C63O7101C73O7105C79O7163C89O7163C94O7215,,
code-creation,Eval,10,566208,0x3f1a4fbbf53e,5, node:internal/modules/esm/load:1:1,0x3f1a4fbbf318,~
script-source,390,node:internal/modules/esm/load,'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  RegExpPrototypeExec\x2C\n  decodeURIComponent\x2C\n} = primordials;\n\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\nconst { validateAssertions } = require('internal/modules/esm/assert');\nconst { getOptionValue } = require('internal/options');\n\n// Do not eagerly grab .manifest\x2C it may be in TDZ\nconst policy = getOptionValue('--experimental-policy') ?\n  require('internal/process/policy') :\n  null;\nconst experimentalNetworkImports =\n  getOptionValue('--experimental-network-imports');\n\nconst { Buffer: { from: BufferFrom } } = require('buffer');\n\nconst { URL } = require('internal/url');\nconst {\n  ERR_INVALID_URL\x2C\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\n} = require('internal/errors').codes;\n\nconst DATA_URL_PATTERN = /^[^/]+\\/[^\x2C;]+(?:[^\x2C]*?)(;base64)?\x2C([\\s\\S]*)$/;\n\nasync function getSource(url\x2C context) {\n  const parsed = new URL(url);\n  let responseURL = url;\n  let source;\n  if (parsed.protocol === 'file:') {\n    const { readFile: readFileAsync } = require('internal/fs/promises').exports;\n    source = await readFileAsync(parsed);\n  } else if (parsed.protocol === 'data:') {\n    const match = RegExpPrototypeExec(DATA_URL_PATTERN\x2C parsed.pathname);\n    if (!match) {\n      throw new ERR_INVALID_URL(url);\n    }\n    const { 1: base64\x2C 2: body } = match;\n    source = BufferFrom(decodeURIComponent(body)\x2C base64 ? 'base64' : 'utf8');\n  } else if (experimentalNetworkImports && (\n    parsed.protocol === 'https:' ||\n    parsed.protocol === 'http:'\n  )) {\n    const { fetchModule } = require('internal/modules/esm/fetch_module');\n    const res = await fetchModule(parsed\x2C context);\n    source = await res.body;\n    responseURL = res.resolvedHREF;\n  } else {\n    const supportedSchemes = ['file'\x2C 'data'];\n    if (experimentalNetworkImports) {\n      ArrayPrototypePush(supportedSchemes\x2C 'http'\x2C 'https');\n    }\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C supportedSchemes);\n  }\n  if (policy?.manifest) {\n    policy.manifest.assertIntegrity(parsed\x2C source);\n  }\n  return { __proto__: null\x2C responseURL\x2C source };\n}\n\n\n/**\n * Node.js default load hook.\n * @param {string} url\n * @param {object} context\n * @returns {object}\n */\nasync function defaultLoad(url\x2C context) {\n  let responseURL = url;\n  const { importAssertions } = context;\n  let {\n    format\x2C\n    source\x2C\n  } = context;\n\n  if (format == null) {\n    format = await defaultGetFormat(url\x2C context);\n  }\n\n  validateAssertions(url\x2C format\x2C importAssertions);\n\n  if (\n    format === 'builtin' ||\n    format === 'commonjs'\n  ) {\n    source = null;\n  } else if (source == null) {\n    ({ responseURL\x2C source } = await getSource(url\x2C context));\n  }\n\n  return {\n    __proto__: null\x2C\n    format\x2C\n    responseURL\x2C\n    source\x2C\n  };\n}\n\nmodule.exports = {\n  defaultLoad\x2C\n};\n
code-source-info,0x3f1a4fbbf53e,390,0,2791,C0O0C4O2791,,
code-creation,JS,10,566333,0x3f1a4fbbf75e,250, node:internal/modules/esm/load:1:1,0x3f1a4fbbf4b8,~
code-source-info,0x3f1a4fbbf75e,390,0,2791,C0O0C56O25C62O47C68O70C74O137C80O137C85O116C91O212C97O212C102O189C108O279C114O279C119O260C124O375C127O375C139O419C146O375C148O501C151O501C155O501C157O593C163O593C168O568C173O576C179O629C185O629C190O621C196O719C202O719C207O745C212O664C218O683C224O779C229O779C231O2754C238O2775C244O2769C249O2790,,
tick,0x100663014,566333,1,0x10027c640,3,0x0,0x1075c9144,0x1075c8e2c,0x3f1a4fbb275a,0x3f1a4fbbd1fe,0x3f1a4fbb04be,0x1075c9210,0x1075c8e2c,0x3f1a4fbafd04,0x3f1a4fba2d1b,0x3f1a4fba30fe,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
code-creation,Eval,10,566417,0x2c9b8b1c4f66,5, node:internal/modules/esm/assert:1:1,0x3f1a4fbbfe60,~
script-source,391,node:internal/modules/esm/assert,'use strict';\n\nconst {\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ObjectValues\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n} = primordials;\nconst { validateString } = require('internal/validators');\n\nconst {\n  ERR_IMPORT_ASSERTION_TYPE_FAILED\x2C\n  ERR_IMPORT_ASSERTION_TYPE_MISSING\x2C\n  ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED\x2C\n} = require('internal/errors').codes;\n\n// The HTML spec has an implied default type of `'javascript'`.\nconst kImplicitAssertType = 'javascript';\n\n/**\n * Define a map of module formats to import assertion types (the value of\n * `type` in `assert { type: 'json' }`).\n * @type {Map<string\x2C string>}\n */\nconst formatTypeMap = {\n  '__proto__': null\x2C\n  'builtin': kImplicitAssertType\x2C\n  'commonjs': kImplicitAssertType\x2C\n  'json': 'json'\x2C\n  'module': kImplicitAssertType\x2C\n  'wasm': kImplicitAssertType\x2C // It's unclear whether the HTML spec will require an assertion type or not for Wasm; see https://github.com/WebAssembly/esm-integration/issues/42\n};\n\n/**\n * The HTML spec disallows the default type to be explicitly specified\n * (for now); so `import './file.js'` is okay but\n * `import './file.js' assert { type: 'javascript' }` throws.\n * @type {Array<string\x2C string>}\n */\nconst supportedAssertionTypes = ArrayPrototypeFilter(\n  ObjectValues(formatTypeMap)\x2C\n  (type) => type !== kImplicitAssertType);\n\n\n/**\n * Test a module's import assertions.\n * @param {string} url The URL of the imported module\x2C for error reporting.\n * @param {string} format One of Node's supported translators\n * @param {Record<string\x2C string>} importAssertions Validations for the\n *                                                  module import.\n * @returns {true}\n * @throws {TypeError} If the format and assertion type are incompatible.\n */\nfunction validateAssertions(url\x2C format\x2C\n                            importAssertions = { __proto__: null }) {\n  const validType = formatTypeMap[format];\n\n  switch (validType) {\n    case undefined:\n      // Ignore assertions for module formats we don't recognize\x2C to allow new\n      // formats in the future.\n      return true;\n\n    case kImplicitAssertType:\n      // This format doesn't allow an import assertion type\x2C so the property\n      // must not be set on the import assertions object.\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\n        return true;\n      }\n      return handleInvalidType(url\x2C importAssertions.type);\n\n    case importAssertions.type:\n      // The asserted type is the valid type for this format.\n      return true;\n\n    default:\n      // There is an expected type for this format\x2C but the value of\n      // `importAssertions.type` might not have been it.\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\n        // `type` wasn't specified at all.\n        throw new ERR_IMPORT_ASSERTION_TYPE_MISSING(url\x2C validType);\n      }\n      return handleInvalidType(url\x2C importAssertions.type);\n  }\n}\n\n/**\n * Throw the correct error depending on what's wrong with the type assertion.\n * @param {string} url The resolved URL for the module to be imported\n * @param {string} type The value of the import assertion `type` property\n */\nfunction handleInvalidType(url\x2C type) {\n  // `type` might have not been a string.\n  validateString(type\x2C 'type');\n\n  // `type` might not have been one of the types we understand.\n  if (!ArrayPrototypeIncludes(supportedAssertionTypes\x2C type)) {\n    throw new ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED(type);\n  }\n\n  // `type` was the wrong value for this format.\n  throw new ERR_IMPORT_ASSERTION_TYPE_FAILED(url\x2C type);\n}\n\n\nmodule.exports = {\n  kImplicitAssertType\x2C\n  validateAssertions\x2C\n};\n
code-source-info,0x2c9b8b1c4f66,391,0,3616,C0O0C4O3616,,
code-creation,JS,10,566542,0x2c9b8b1c5236,192, node:internal/modules/esm/assert:1:1,0x3f1a4fbbffc0,~
code-source-info,0x2c9b8b1c5236,391,0,3616,C0O0C43O25C48O49C54O75C59O91C65O166C68O166C73O147C79O325C82O325C87O351C92O209C98O245C104O282C110O452C112O452C114O643C121O679C127O714C133O765C139O796C145O643C147O1224C150O1248C160O1224C165O1224C167O3549C174O3570C180O3593C186O3564C191O3615,,
code-creation,JS,10,566625,0x2c9b8b1c582e,9, node:internal/modules/esm/assert:42:3,0x2c9b8b1c5038,~
code-source-info,0x2c9b8b1c582e,391,1279,1317,C0O1294C2O1298C4O1294C8O1317,,
code-creation,Eval,10,566667,0x2c9b8b1c6216,5, node:internal/modules/esm/initialize_import_meta:1:1,0x2c9b8b1c6080,~
script-source,392,node:internal/modules/esm/initialize_import_meta,'use strict';\n\nconst { getOptionValue } = require('internal/options');\nconst experimentalImportMetaResolve =\n  getOptionValue('--experimental-import-meta-resolve');\nconst {\n  PromisePrototypeThen\x2C\n  PromiseReject\x2C\n} = primordials;\nconst asyncESM = require('internal/process/esm_loader');\n\nfunction createImportMetaResolve(defaultParentUrl) {\n  return async function resolve(specifier\x2C parentUrl = defaultParentUrl) {\n    return PromisePrototypeThen(\n      asyncESM.esmLoader.resolve(specifier\x2C parentUrl)\x2C\n      ({ url }) => url\x2C\n      (error) => (\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT' ?\n          error.url : PromiseReject(error))\n    );\n  };\n}\n\n/**\n * @param {object} meta\n * @param {{url: string}} context\n */\nfunction initializeImportMeta(meta\x2C context) {\n  const { url } = context;\n\n  // Alphabetical\n  if (experimentalImportMetaResolve) {\n    meta.resolve = createImportMetaResolve(url);\n  }\n\n  meta.url = url;\n}\n\nmodule.exports = {\n  initializeImportMeta\n};\n
code-source-info,0x2c9b8b1c6216,392,0,980,C0O0C4O980,,
code-creation,JS,10,566708,0x2c9b8b1c63de,90, node:internal/modules/esm/initialize_import_meta:1:1,0x2c9b8b1c6190,~
code-source-info,0x2c9b8b1c63de,392,0,980,C0O0C28O42C31O42C36O23C41O111C44O111C48O111C50O175C56O199C62O248C65O248C69O248C71O935C78O956C84O950C89O979,,
code-creation,JS,10,566750,0x2c9b8b1c69e6,17,newModuleMap node:internal/modules/esm/loader:42:22,0x3f1a4fbb18e0,~
code-source-info,0x2c9b8b1c69e6,385,1008,1104,C0O1033C6O1033C11O1086C16O1102,,
code-creation,Eval,10,566792,0x2c9b8b1c6d4e,5, node:internal/modules/esm/module_map:1:1,0x2c9b8b1c6b60,~
script-source,393,node:internal/modules/esm/module_map,'use strict';\n\nconst { kImplicitAssertType } = require('internal/modules/esm/assert');\nconst {\n  SafeMap\x2C\n} = primordials;\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\n  debug = fn;\n});\nconst { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;\nconst { validateString } = require('internal/validators');\n\n// Tracks the state of the loader-level module cache\nclass ModuleMap extends SafeMap {\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  get(url\x2C type = kImplicitAssertType) {\n    validateString(url\x2C 'url');\n    validateString(type\x2C 'type');\n    return super.get(url)?.[type];\n  }\n  set(url\x2C type = kImplicitAssertType\x2C job) {\n    validateString(url\x2C 'url');\n    validateString(type\x2C 'type');\n\n    const ModuleJob = require('internal/modules/esm/module_job');\n    if (job instanceof ModuleJob !== true &&\n        typeof job !== 'function') {\n      throw new ERR_INVALID_ARG_TYPE('job'\x2C 'ModuleJob'\x2C job);\n    }\n    debug(`Storing ${url} (${\n      type === kImplicitAssertType ? 'implicit type' : type\n    }) in ModuleMap`);\n    const cachedJobsForUrl = super.get(url) ?? { __proto__: null };\n    cachedJobsForUrl[type] = job;\n    return super.set(url\x2C cachedJobsForUrl);\n  }\n  has(url\x2C type = kImplicitAssertType) {\n    validateString(url\x2C 'url');\n    validateString(type\x2C 'type');\n    return super.get(url)?.[type] !== undefined;\n  }\n}\nmodule.exports = ModuleMap;\n
code-source-info,0x2c9b8b1c6d4e,393,0,1434,C0O0C4O1434,,
code-creation,JS,10,566875,0x2c9b8b1c7176,169, node:internal/modules/esm/module_map:1:1,0x2c9b8b1c6cc8,~
code-source-info,0x2c9b8b1c7176,393,0,1434,C0O0C21O47C27O47C32O23C38O97C43O135C49O135C54O168C67O169C73O135C75O246C81O246C86O272C91O221C97O307C103O307C108O288C118O417C161O1406C163O1421C168O1433,,
code-creation,JS,10,566917,0x2c9b8b1c7766,27,ModuleMap node:internal/modules/esm/module_map:15:14,0x2c9b8b1c6dd0,~
code-source-info,0x2c9b8b1c7766,393,440,457,C3O446C5O446C11O446C26O456,,
code-creation,JS,10,566917,0x2c9b8b1c7aae,17,getTranslators node:internal/modules/esm/loader:55:24,0x3f1a4fbb1930,~
code-source-info,0x2c9b8b1c7aae,385,1277,1376,C0O1308C6O1308C11O1292C16O1374,,
code-creation,Eval,10,567167,0x2c9b8b1c840e,5, node:internal/modules/esm/translators:1:1,0x2c9b8b1c7fe8,~
script-source,394,node:internal/modules/esm/translators,'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeMap\x2C\n  Boolean\x2C\n  JSONParse\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectKeys\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  StringPrototypeReplaceAll\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeStartsWith\x2C\n  SyntaxErrorPrototype\x2C\n  globalThis: { WebAssembly }\x2C\n} = primordials;\n\nlet _TYPES = null;\nfunction lazyTypes() {\n  if (_TYPES !== null) return _TYPES;\n  return _TYPES = require('internal/util/types');\n}\n\nconst { readFileSync } = require('fs');\nconst { extname\x2C isAbsolute } = require('path');\nconst {\n  hasEsmSyntax\x2C\n  loadBuiltinModule\x2C\n  stripBOM\x2C\n} = require('internal/modules/helpers');\nconst {\n  Module: CJSModule\x2C\n  cjsParseCache\n} = require('internal/modules/cjs/loader');\nconst internalURLModule = require('internal/url');\nconst { fileURLToPath\x2C URL } = require('url');\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\n  debug = fn;\n});\nconst { emitExperimentalWarning } = require('internal/util');\nconst {\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\n  ERR_INVALID_RETURN_PROPERTY_VALUE\n} = require('internal/errors').codes;\nconst { maybeCacheSourceMap } = require('internal/source_map/source_map_cache');\nconst moduleWrap = internalBinding('module_wrap');\nconst { ModuleWrap } = moduleWrap;\nconst asyncESM = require('internal/process/esm_loader');\nconst { emitWarningSync } = require('internal/process/warning');\n\nlet cjsParse;\nasync function initCJSParse() {\n  if (typeof WebAssembly === 'undefined') {\n    cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\n  } else {\n    const { parse\x2C init } =\n        require('internal/deps/cjs-module-lexer/dist/lexer');\n    try {\n      await init();\n      cjsParse = parse;\n    } catch {\n      cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\n    }\n  }\n}\n\nconst translators = new SafeMap();\nexports.translators = translators;\nexports.enrichCJSError = enrichCJSError;\n\nlet DECODER = null;\nfunction assertBufferSource(body\x2C allowString\x2C hookName) {\n  if (allowString && typeof body === 'string') {\n    return;\n  }\n  const { isArrayBufferView\x2C isAnyArrayBuffer } = lazyTypes();\n  if (isArrayBufferView(body) || isAnyArrayBuffer(body)) {\n    return;\n  }\n  throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\n    `${allowString ? 'string\x2C ' : ''}array buffer\x2C or typed array`\x2C\n    hookName\x2C\n    'source'\x2C\n    body\n  );\n}\n\nfunction stringify(body) {\n  if (typeof body === 'string') return body;\n  assertBufferSource(body\x2C false\x2C 'transformSource');\n  const { TextDecoder } = require('internal/encoding');\n  DECODER = DECODER === null ? new TextDecoder() : DECODER;\n  return DECODER.decode(body);\n}\n\nfunction errPath(url) {\n  const parsed = new URL(url);\n  if (parsed.protocol === 'file:') {\n    return fileURLToPath(parsed);\n  }\n  return url;\n}\n\nasync function importModuleDynamically(specifier\x2C { url }\x2C assertions) {\n  return asyncESM.esmLoader.import(specifier\x2C url\x2C assertions);\n}\n\n// Strategy for loading a standard JavaScript module.\ntranslators.set('module'\x2C async function moduleStrategy(url\x2C source\x2C isMain) {\n  assertBufferSource(source\x2C true\x2C 'load');\n  source = stringify(source);\n  maybeCacheSourceMap(url\x2C source);\n  debug(`Translating StandardModule ${url}`);\n  const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\n  const { setCallbackForWrap } = require('internal/modules/esm/utils');\n  setCallbackForWrap(module\x2C {\n    initializeImportMeta: (meta\x2C wrap) => this.importMetaInitialize(meta\x2C { url })\x2C\n    importModuleDynamically\x2C\n  });\n  return module;\n});\n\n/**\n * @param {Error | any} err\n * @param {string} [content] Content of the file\x2C if known.\n * @param {string} [filename] Useful only if `content` is unknown.\n */\nfunction enrichCJSError(err\x2C content\x2C filename) {\n  if (err != null && ObjectGetPrototypeOf(err) === SyntaxErrorPrototype &&\n      hasEsmSyntax(content || readFileSync(filename\x2C 'utf-8'))) {\n    // Emit the warning synchronously because we are in the middle of handling\n    // a SyntaxError that will throw and likely terminate the process before an\n    // asynchronous warning would be emitted.\n    emitWarningSync(\n      'To load an ES module\x2C set "type": "module" in the package.json or use ' +\n      'the .mjs extension.'\n    );\n  }\n}\n\n// Strategy for loading a node-style CommonJS module\nconst isWindows = process.platform === 'win32';\ntranslators.set('commonjs'\x2C async function commonjsStrategy(url\x2C source\x2C\n                                                            isMain) {\n  debug(`Translating CJSModule ${url}`);\n\n  let filename = internalURLModule.fileURLToPath(new URL(url));\n  if (isWindows)\n    filename = StringPrototypeReplaceAll(filename\x2C '/'\x2C '\\\\');\n\n  if (!cjsParse) await initCJSParse();\n  const { module\x2C exportNames } = cjsPreparseModuleExports(filename);\n  const namesWithDefault = exportNames.has('default') ?\n    [...exportNames] : ['default'\x2C ...exportNames];\n\n  return new ModuleWrap(url\x2C undefined\x2C namesWithDefault\x2C function() {\n    debug(`Loading CJSModule ${url}`);\n\n    let exports;\n    if (asyncESM.esmLoader.cjsCache.has(module)) {\n      exports = asyncESM.esmLoader.cjsCache.get(module);\n      asyncESM.esmLoader.cjsCache.delete(module);\n    } else {\n      try {\n        exports = CJSModule._load(filename\x2C undefined\x2C isMain);\n      } catch (err) {\n        enrichCJSError(err\x2C undefined\x2C filename);\n        throw err;\n      }\n    }\n\n    for (const exportName of exportNames) {\n      if (!ObjectPrototypeHasOwnProperty(exports\x2C exportName) ||\n          exportName === 'default')\n        continue;\n      // We might trigger a getter -> dont fail.\n      let value;\n      try {\n        value = exports[exportName];\n      } catch {\n        // Continue regardless of error.\n      }\n      this.setExport(exportName\x2C value);\n    }\n    this.setExport('default'\x2C exports);\n  });\n});\n\nfunction cjsPreparseModuleExports(filename) {\n  let module = CJSModule._cache[filename];\n  if (module) {\n    const cached = cjsParseCache.get(module);\n    if (cached)\n      return { module\x2C exportNames: cached.exportNames };\n  }\n  const loaded = Boolean(module);\n  if (!loaded) {\n    module = new CJSModule(filename);\n    module.filename = filename;\n    module.paths = CJSModule._nodeModulePaths(module.path);\n    CJSModule._cache[filename] = module;\n  }\n\n  let source;\n  try {\n    source = readFileSync(filename\x2C 'utf8');\n  } catch {\n    // Continue regardless of error.\n  }\n\n  let exports\x2C reexports;\n  try {\n    ({ exports\x2C reexports } = cjsParse(source || ''));\n  } catch {\n    exports = [];\n    reexports = [];\n  }\n\n  const exportNames = new SafeSet(new SafeArrayIterator(exports));\n\n  // Set first for cycles.\n  cjsParseCache.set(module\x2C { source\x2C exportNames\x2C loaded });\n\n  if (reexports.length) {\n    module.filename = filename;\n    module.paths = CJSModule._nodeModulePaths(module.path);\n  }\n  ArrayPrototypeForEach(reexports\x2C (reexport) => {\n    let resolved;\n    try {\n      resolved = CJSModule._resolveFilename(reexport\x2C module);\n    } catch {\n      return;\n    }\n    const ext = extname(resolved);\n    if ((ext === '.js' || ext === '.cjs' || !CJSModule._extensions[ext]) &&\n        isAbsolute(resolved)) {\n      const { exportNames: reexportNames } = cjsPreparseModuleExports(resolved);\n      for (const name of reexportNames)\n        exportNames.add(name);\n    }\n  });\n\n  return { module\x2C exportNames };\n}\n\n// Strategy for loading a node builtin CommonJS module that isn't\n// through normal resolution\ntranslators.set('builtin'\x2C async function builtinStrategy(url) {\n  debug(`Translating BuiltinModule ${url}`);\n  // Slice 'node:' scheme\n  const id = StringPrototypeSlice(url\x2C 5);\n  const module = loadBuiltinModule(id\x2C url);\n  if (!StringPrototypeStartsWith(url\x2C 'node:') || !module) {\n    throw new ERR_UNKNOWN_BUILTIN_MODULE(url);\n  }\n  debug(`Loading BuiltinModule ${url}`);\n  return module.getESMFacade();\n});\n\n// Strategy for loading a JSON file\ntranslators.set('json'\x2C async function jsonStrategy(url\x2C source) {\n  emitExperimentalWarning('Importing JSON modules');\n  assertBufferSource(source\x2C true\x2C 'load');\n  debug(`Loading JSONModule ${url}`);\n  const pathname = StringPrototypeStartsWith(url\x2C 'file:') ?\n    fileURLToPath(url) : null;\n  let modulePath;\n  let module;\n  if (pathname) {\n    modulePath = isWindows ?\n      StringPrototypeReplaceAll(pathname\x2C '/'\x2C '\\\\') : pathname;\n    module = CJSModule._cache[modulePath];\n    if (module && module.loaded) {\n      const exports = module.exports;\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\n        this.setExport('default'\x2C exports);\n      });\n    }\n  }\n  source = stringify(source);\n  if (pathname) {\n    // A require call could have been called on the same file during loading and\n    // that resolves synchronously. To make sure we always return the identical\n    // export\x2C we have to check again if the module already exists or not.\n    module = CJSModule._cache[modulePath];\n    if (module && module.loaded) {\n      const exports = module.exports;\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\n        this.setExport('default'\x2C exports);\n      });\n    }\n  }\n  try {\n    const exports = JSONParse(stripBOM(source));\n    module = {\n      exports\x2C\n      loaded: true\n    };\n  } catch (err) {\n    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON\n    // parse error instead of just manipulating the original error message.\n    // That would allow to add further properties and maybe additional\n    // debugging information.\n    err.message = errPath(url) + ': ' + err.message;\n    throw err;\n  }\n  if (pathname) {\n    CJSModule._cache[modulePath] = module;\n  }\n  return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\n    debug(`Parsing JSONModule ${url}`);\n    this.setExport('default'\x2C module.exports);\n  });\n});\n\n// Strategy for loading a wasm module\ntranslators.set('wasm'\x2C async function(url\x2C source) {\n  emitExperimentalWarning('Importing WebAssembly modules');\n\n  assertBufferSource(source\x2C false\x2C 'load');\n\n  debug(`Translating WASMModule ${url}`);\n\n  let compiled;\n  try {\n    compiled = await WebAssembly.compile(source);\n  } catch (err) {\n    err.message = errPath(url) + ': ' + err.message;\n    throw err;\n  }\n\n  const imports =\n      ArrayPrototypeMap(WebAssembly.Module.imports(compiled)\x2C\n                        ({ module }) => module);\n  const exports =\n    ArrayPrototypeMap(WebAssembly.Module.exports(compiled)\x2C\n                      ({ name }) => name);\n\n  const createDynamicModule = require(\n    'internal/modules/esm/create_dynamic_module');\n  return createDynamicModule(imports\x2C exports\x2C url\x2C (reflect) => {\n    const { exports } = new WebAssembly.Instance(compiled\x2C reflect.imports);\n    for (const expt of ObjectKeys(exports))\n      reflect.exports[expt].set(exports[expt]);\n  }).module;\n});\n
code-source-info,0x2c9b8b1c840e,394,0,10797,C0O0C4O10797,,
code-creation,JS,10,567542,0x2c9b8b1c8b96,664, node:internal/modules/esm/translators:1:1,0x2c9b8b1c8388,~
code-source-info,0x2c9b8b1c8b96,394,0,10797,C0O0C168O25C174O50C180O71C186O82C192O95C198O119C204O152C210O166C216O187C221O198C227O209C233O238C239O262C245O291C251O327C256O329C262O375C263O375C265O520C271O520C276O503C282O567C288O567C293O543C299O552C305O645C311O645C316O594C322O610C328O631C334O731C340O731C345O700C351O713C357O797C363O797C367O797C369O853C375O853C380O830C386O845C392O881C398O881C403O914C416O915C422O881C424O995C430O995C435O967C441O1099C447O1099C452O1125C457O1031C463O1061C469O1165C475O1165C480O1141C486O1233C489O1233C494O1273C500O1317C506O1317C510O1317C512O1385C518O1385C523O1365C529O1427C530O1427C532O1857C534O1857C540O1872C542O1892C546O1907C548O1930C552O1963C553O1963C555O3020C568O3020C574O4332C581O4341C584O4324C586O4366C599O4366C605O7453C618O7453C624O7903C637O7903C643O9846C656O9846C663O10796,,
tick,0x1a5225c68,567625,1,0x10027c640,3,0x0,0x1075c9144,0x1075c8e2c,0x2c9b8b1c7ab4,0x3f1a4fbb27d9,0x3f1a4fbbd1fe,0x3f1a4fbb04be,0x1075c9210,0x1075c8e2c,0x3f1a4fbafd04,0x3f1a4fba2d1b,0x3f1a4fba30fe,0x3f1a4fb9fc1c,0x3f1a4fb90255,0x16645fa759a9
code-creation,JS,10,567708,0x2c9b8b1c9ebe,5,get node:internal/bootstrap/node:114:8,0x18a4fd08b690,~
code-source-info,0x2c9b8b1c9ebe,16,4108,4141,C0O4119C4O4135,,
profiler,end
delete,MemoryChunk,0x23275ac00000
delete,MemoryChunk,0x18a4fd080000
delete,MemoryChunk,0xd5ac0c40000
delete,MemoryChunk,0x286f2a240000
delete,MemoryChunk,0x3b5f1dac0000
delete,MemoryChunk,0x5d9fd2c0000
delete,MemoryChunk,0x235e99c40000
delete,MemoryChunk,0xc429f1c0000
delete,MemoryChunk,0x16645fa40000
delete,MemoryChunk,0x3f1a4fb80000
delete,MemoryChunk,0x2a5308e80000
delete,MemoryChunk,0x3c71b40c0000
delete,MemoryChunk,0x2c9b8b1c0000
delete,MemoryChunk,0x19bd46140000
delete,MemoryChunk,0x107580000
delete,MemoryChunk,0x1075c0000
delete,MemoryChunk,0x221e19480000
delete,MemoryChunk,0x3e8911000000
delete,MemoryChunk,0x33cf40cc0000
delete,MemoryChunk,0x29bfde140000
delete,MemoryChunk,0x53f8c3c0000
delete,MemoryChunk,0x1a2ded380000
delete,MemoryChunk,0x3286f0c40000
delete,MemoryChunk,0x23a579fc0000
delete,LargeObjectChunk,0x7c7eab80000
delete,MemoryChunk,0x7c7eab80000
